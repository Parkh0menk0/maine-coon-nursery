{"version":3,"sources":["accordion.js","gallery-slider.js","swiper.js"],"names":["i","question","document","querySelectorAll","length","addEventListener","this","classList","toggle","nextElementSibling","Swiper","init","loop","speed","slidesPerView","centeredSlides","effect","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","grabCursor","parallax","pagination","el","clickable","navigation","nextEl","prevEl","breakpoints","1023","spaceBetween","on","imagesReady","remove","global","factory","exports","module","define","amd","self","doc","body","removeEventListener","activeElement","blur","nodeName","querySelector","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","arr","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","fn","prototype","Class","Methods","addClass","className","classes","j","add","removeClass","hasClass","contains","toggleClass","attr","attrs","value","arguments$1","arguments","getAttribute","attrName","removeAttr","removeAttribute","data","key","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","assign","args","len","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event$1","dom7LiveListeners","proxyListener","event","dom7Listeners","off","handlers","handler","splice","dom7proxy","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","matchedItems","removeChild","toAdd","Object","keys","forEach","methodName","SwiperClass","params","eventsListeners","eventName","Utils","deleteProps","obj","object","nextTick","delay","now","getTranslate","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","parseUrlQuery","url","param","query","urlToParse","href","paramsPart","decodeURIComponent","isObject","o","constructor","extend","len$1","to","nextSource","keysArray","nextIndex","nextKey","desc","getOwnPropertyDescriptor","enumerable","Support","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","observer","passiveListener","supportsPassive","opts","defineProperty","get","gestures","staticAccessors","components","configurable","priority","method","once","onceHandler","f7proxy","eventHandler","emit","Array","isArray","slice","useModulesParams","instanceParams","instance","modules","moduleName","useModules","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","set","use","installModule","name","proto","static","install","m","concat","defineProperties","update","updateSize","width","height","swiper","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtl","rtlTranslate","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","slidesForMargin","slideIndex","cssMode","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidePosition","prevSlideSize","slidesNumberEvenToRows","slideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerColumnFill","max","newSlidesGrid","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","slidesPerGroup","groupIndex","slideIndexInGroup","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","boxSizing$1","swiperSlideSize","abs","setWrapperSize","i$1","slidesGridItem","i$2","slidesGridItem$1","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","multiplier","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","activeSlide","realIndex","slideActiveClass","slideDuplicateClass","slideDuplicateActiveClass","nextSlide","slideNextClass","prevSlide","slidePrevClass","slideDuplicateNextClass","slideDuplicatePrevClass","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","initialized","runCallbacksOnInit","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","virtualTranslate","currentTranslate","setTranslate","byController","wrapperEl","x","y","previousTranslate","transition$1","transitionStart","runCallbacks","direction","autoHeight","dir","animating","slideTo","internal","preventInteractionOnTransition","initialSlide","allowSlideNext","allowSlidePrev","isH","scrollTo","behavior","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","prevIndex","normalizedTranslate","normalizedSnapGrid","prevSnap","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","Device","ua","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","toLowerCase","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onResize","setBreakpoint","freeMode","newTranslate","min","autoplay","running","paused","run","defaults","touchEventsTarget","edgeSwipeDetection","edgeSwipeThreshold","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMomentumVelocityRatio","freeModeSticky","freeModeMinimumVelocity","touchRatio","touchAngle","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","allowTouchMove","threshold","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","resistance","resistanceRatio","preventClicks","preventClicksPropagation","preloadImages","updateOnImagesReady","swipeHandler","noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","slideClass","slideBlankClass","wrapperClass","prototypes","attachEvents","touchEvents","onTouchStart","touchEventsData","touches","originalEvent","$targetEl","isTouchEvent","type","which","button","isTouched","isMoved","allowClick","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","onTouchMove","preventedByNestedSwiper","diffX","diffY","sqrt","pow","atan2","PI","nested","stopPropagation","startTranslate","allowMomentumBounce","disableParentSwiper","velocities","position","time","onTouchEnd","currentPos","touchEndTime","timeDiff","lastClickTime","lastMoveEvent","pop","velocityEvent","distance","velocity","momentumDuration","momentumDistance","newPosition","afterBouncePosition","needsLoopFix","doBounce","bounceAmount","stopIndex","groupSize","ratio","onScroll","onClick","stopImmediatePropagation","start","passive","move","end","cancel","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","wasMultiRow","isMultiRow","directionChanged","needsReLoop","changeDirection","points","point","sort","b","innerWidth","wasLocked","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","prototypeGroup","protoMethod","moduleParamName","swiperParams","passedParams","swipers","containerEl","newParams","shadowRoot","options","touchEventsTouch","touchEventsDesktop","clickTimeout","__proto__","spv","breakLoop","translateValue","newDirection","needUpdate","currentDirection","slideEl","destroy","deleteInstance","cleanStyles","extendDefaults","newDefaults","Device$1","Support$1","support","Browser","isEdge","isSafari","isUiWebView","test","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","attach","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","observeSlideChildren","disconnect","Observer$1","Virtual","force","ref","ref$1","addSlidesBefore","addSlidesAfter","ref$2","previousFrom","from","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","numberOfNewSlides","newCache","cachedIndex","$cachedEl","cachedElIndex","Virtual$1","beforeInit","overwriteParams","Keyboard","handle","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","enable","disable","Keyboard$1","Mousewheel","lastScrollTime","isSupported","element","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","handleMouseEnter","mouseEntered","handleMouseLeave","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplayDisableOnInteraction","stop","getTime","eventsTarged","Navigation","$nextEl","$prevEl","disabledClass","lockClass","onPrevClick","onNextClick","Pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bullet","$bullet","bulletIndex","bulletActiveClass","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","formatFractionCurrent","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","renderCustom","render","paginationHTML","numberOfBullets","renderBullet","bulletClass","renderFraction","currentClass","totalClass","renderProgressbar","progressbarFillClass","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","getPointerPosition","clientX","clientY","setDragPosition","positionRatio","dragStartPos","onDragStart","dragTimeout","onDragMove","onDragEnd","snapOnRelease","enableDraggable","activeListener","disableDraggable","$swiperEl","dragEl","draggable","Parallax","setTransform","p","currentOpacity","currentScale","parallaxEl","$parallaxEl","parallaxDuration","Zoom","getDistanceBetweenTouches","x1","y1","x2","y2","onGestureStart","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","$imageEl","$imageWrapEl","maxRatio","isScaling","onGestureChange","scaleMove","minRatio","onGestureEnd","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","onTransitionEnd","out","in","touchX","touchY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","activeListenerWithCapture","Lazy","loadInSlide","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","slideOriginalIndex","originalSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","guess","i1","i3","binarySearch","array","interpolate","getInterpolateFunction","c","controller","spline","setTranslate$1","controlledTranslate","controlled","control","setControlledTranslate","by","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","onEnterKey","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","updateNavigation","updatePagination","bulletEl","$bulletEl","paginationBulletMessage","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","setHistory","slugify","includes","currentState","state","HashNavigation","onHashCange","newHash","setHash","watchState","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","pause","waitForTransition","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","$cubeShadowEl","swiperWidth","swiperHeight","cubeEffect","wrapperRotate","shadow","slideAngle","round","tz","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowAngle","sin","cos","scale1","shadowScale","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","center","offsetMultiplier","translateZ","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","Thumbs","thumbsParams","thumbs","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","hideOnClick","toEdge","fromEdge","isHidden","bulletElement","number","activeIndexChange","snapIndexChange","slidesLengthChange","snapGridLengthChange","dragClass","containerClass","zoomedSlideClass","touchStart","touchEnd","doubleTap","slideChange","loadOnTransitionStart","preloaderClass","scroll","scrollbarDragMove","notificationClass","paginationUpdate","disableOnInteraction","onVisibilityChange","visibilityState","beforeTransitionStart","sliderFirstMove","beforeDestroy"],"mappings":"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","file":"main.min.js","sourcesContent":["'use strict';\n\n(function () {\n  var question = document.querySelectorAll('.faq__question');\n  var i;\n\n  if (question) {\n    for (i = 0; i < question.length; i++) {\n      question[i].addEventListener('click', function () {\n        this.classList.toggle('active');\n        this.nextElementSibling.classList.toggle('dn');\n      });\n    }\n  }\n})();\n","'use strict';\n\n(function () {\n  var mySwiper = undefined;\n\n  // function initSwiper() {\n  //   var screenWidth = window.innerWidth;\n  //   if (screenWidth < 1024 && mySwiper == undefined) {\n      mySwiper = new Swiper('.swiper-container', {\n        init: false,\n        loop: true,\n        speed: 800,\n        slidesPerView: 2, // or 'auto'\n        // spaceBetween: 10,\n        centeredSlides: true,\n        effect: 'coverflow', // 'cube', 'fade', 'coverflow',\n        coverflowEffect: {\n          rotate: 50, // Slide rotate in degrees\n          stretch: 0, // Stretch space between slides (in px)\n          depth: 100, // Depth offset in px (slides translate in Z axis)\n          modifier: 1, // Effect multipler\n          slideShadows: true, // Enables slides shadows\n        },\n        grabCursor: true,\n        parallax: true,\n        pagination: {\n          el: '.swiper-pagination',\n          clickable: true,\n        },\n        navigation: {\n          nextEl: '.swiper-button-next',\n          prevEl: '.swiper-button-prev',\n        },\n        breakpoints: {\n          1023: {\n            slidesPerView: 1,\n            spaceBetween: 0\n          }\n        },\n        // Events\n        on: {\n          imagesReady: function () {\n            this.el.classList.remove('loading');\n          }\n        }\n      });\n  //   } else if (screenWidth > 1023 && mySwiper != undefined) {\n  //     mySwiper = undefined;\n  //     document.querySelector('.swiper-wrapper').removeAttr('style');\n  //     document.querySelector('.swiper-slide').removeAttr('style');\n  //   }\n  // }\n\n  // Инициализация плагина Swiper\n  // initSwiper();\n\n  // Инициализация плагина Swiper при изменении резрешения окна браузера\n  // window.addEventListener('resize', function () {\n  //   initSwiper();\n  // });\n\n\n\n  //   // var MAX_TABLET_WIDTH = 1023;\n  //   // var left = 65;\n  //   // var offset = 0;\n  //   // var step = 0;\n  //   // var galleryСontent = document.querySelector('.gallery__wrapper');\n  //   // var wrapping = document.querySelector('.gallery__layout-column');\n  //   // var slides = document.querySelectorAll('.gallery__item');\n  //   // var insertPictures = [];\n  //   // var previousBtn = document.querySelector('.pets__slider  button:first-of-type');\n  //   // var nextBtn = document.querySelector('.pets__slider  button:last-of-type');\n\n  //   // /**\n  //   //  * Функция, котрая перестраивает галерею в слайдер при разрешении экрана менее 1024 пикселей.\n  //   //  */\n  //   // function addSlider() {\n  //   //   var windowWidth = window.innerWidth;\n  //   //   if (windowWidth <= MAX_TABLET_WIDTH) {\n  //   //     if (wrapping) {\n  //   //       while (wrapping.firstChild) {\n  //   //         galleryСontent.insertBefore(wrapping.firstChild, wrapping);\n  //   //       }\n  //   //     }\n  //   //     if (galleryСontent.contains(wrapping)) {\n  //   //       galleryСontent.removeChild(wrapping);\n  //   //     }\n  //   //   }\n  //   // }\n\n  //   // /**\n  //   //  * Функция, сдвигающая слайд влево.\n  //   //  */\n  //   // function shiftLeft() {\n  //   //   var slides2 = document.querySelectorAll('.gallery__item');\n  //   //   var offset2 = 0;\n  //   //   slides2.forEach(function (item) {\n  //   //     item.style.left = offset2 * 474 - 474 + 'px';\n  //   //     offset2++;\n  //   //   });\n  //   //   slides2[0].remove();\n  //   //   draw();\n  //   //   // left -= 474;\n  //   //   // if (left < -948) {\n  //   //   //   left = 65;\n  //   //   // }\n  //   //   // galleryСontent.style.left = left + 'px';\n\n  //   // }\n\n  //   // /**\n  //   //  * Функция, сдвигающая слайд вправо.\n  //   //  */\n  //   // function shiftRight() {\n  //   //   left += 474;\n  //   //   if (left > 65) {\n  //   //     left = -883;\n  //   //   }\n  //   //   galleryСontent.style.left = left + 'px';\n  //   // }\n\n  //   // function draw() {\n  //   //   var img = insertPictures[step];\n  //   //   img.style.left = offset * 474 + 'px';\n  //   //   galleryСontent.appendChild(img);\n  //   //   if (step + 1 === insertPictures.length) {\n  //   //     step = 0;\n  //   //     offset = 2;\n  //   //   } else {\n  //   //     step++;\n  //   //     offset++;\n  //   //   }\n  //   // }\n\n  //   // addSlider();\n\n  //   // window.addEventListener('resize', addSlider);\n\n  //   // function init() {\n  //   //   slides.forEach(function (item) {\n  //   //     insertPictures.push(item.cloneNode(true));\n  //   //     item.remove();\n  //   //   });\n\n  //   //   for (var i = 0; i < insertPictures.length; i++) {\n  //   //     draw();\n  //   //   }\n  //   // }\n\n  //   // init();\n\n  //   // previousBtn.addEventListener('click', shiftLeft);\n  //   // nextBtn.addEventListener('click', shiftRight);\n\n\n\n})();\n","/**\n * Swiper 5.0.3\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://swiperjs.com\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: September 19, 2019\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Swiper = factory());\n}(this, function () { 'use strict';\n\n  /**\n   * SSR Window 1.0.1\n   * Better handling for window object in SSR environment\n   * https://github.com/nolimits4web/ssr-window\n   *\n   * Copyright 2018, Vladimir Kharlampidi\n   *\n   * Licensed under MIT\n   *\n   * Released on: July 18, 2018\n   */\n  var doc = (typeof document === 'undefined') ? {\n    body: {},\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    activeElement: {\n      blur: function blur() {},\n      nodeName: '',\n    },\n    querySelector: function querySelector() {\n      return null;\n    },\n    querySelectorAll: function querySelectorAll() {\n      return [];\n    },\n    getElementById: function getElementById() {\n      return null;\n    },\n    createEvent: function createEvent() {\n      return {\n        initEvent: function initEvent() {},\n      };\n    },\n    createElement: function createElement() {\n      return {\n        children: [],\n        childNodes: [],\n        style: {},\n        setAttribute: function setAttribute() {},\n        getElementsByTagName: function getElementsByTagName() {\n          return [];\n        },\n      };\n    },\n    location: { hash: '' },\n  } : document; // eslint-disable-line\n\n  var win = (typeof window === 'undefined') ? {\n    document: doc,\n    navigator: {\n      userAgent: '',\n    },\n    location: {},\n    history: {},\n    CustomEvent: function CustomEvent() {\n      return this;\n    },\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    getComputedStyle: function getComputedStyle() {\n      return {\n        getPropertyValue: function getPropertyValue() {\n          return '';\n        },\n      };\n    },\n    Image: function Image() {},\n    Date: function Date() {},\n    screen: {},\n    setTimeout: function setTimeout() {},\n    clearTimeout: function clearTimeout() {},\n  } : window; // eslint-disable-line\n\n  /**\n   * Dom7 2.1.3\n   * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n   * http://framework7.io/docs/dom.html\n   *\n   * Copyright 2019, Vladimir Kharlampidi\n   * The iDangero.us\n   * http://www.idangero.us/\n   *\n   * Licensed under MIT\n   *\n   * Released on: February 11, 2019\n   */\n\n  var Dom7 = function Dom7(arr) {\n    var self = this;\n    // Create array-like object\n    for (var i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  };\n\n  function $(selector, context) {\n    var arr = [];\n    var i = 0;\n    if (selector && !context) {\n      if (selector instanceof Dom7) {\n        return selector;\n      }\n    }\n    if (selector) {\n        // String\n      if (typeof selector === 'string') {\n        var els;\n        var tempParent;\n        var html = selector.trim();\n        if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n          var toCreate = 'div';\n          if (html.indexOf('<li') === 0) { toCreate = 'ul'; }\n          if (html.indexOf('<tr') === 0) { toCreate = 'tbody'; }\n          if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) { toCreate = 'tr'; }\n          if (html.indexOf('<tbody') === 0) { toCreate = 'table'; }\n          if (html.indexOf('<option') === 0) { toCreate = 'select'; }\n          tempParent = doc.createElement(toCreate);\n          tempParent.innerHTML = html;\n          for (i = 0; i < tempParent.childNodes.length; i += 1) {\n            arr.push(tempParent.childNodes[i]);\n          }\n        } else {\n          if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n            // Pure ID selector\n            els = [doc.getElementById(selector.trim().split('#')[1])];\n          } else {\n            // Other selectors\n            els = (context || doc).querySelectorAll(selector.trim());\n          }\n          for (i = 0; i < els.length; i += 1) {\n            if (els[i]) { arr.push(els[i]); }\n          }\n        }\n      } else if (selector.nodeType || selector === win || selector === doc) {\n        // Node/element\n        arr.push(selector);\n      } else if (selector.length > 0 && selector[0].nodeType) {\n        // Array of elements or instance of Dom\n        for (i = 0; i < selector.length; i += 1) {\n          arr.push(selector[i]);\n        }\n      }\n    }\n    return new Dom7(arr);\n  }\n\n  $.fn = Dom7.prototype;\n  $.Class = Dom7;\n  $.Dom7 = Dom7;\n\n  function unique(arr) {\n    var uniqueArray = [];\n    for (var i = 0; i < arr.length; i += 1) {\n      if (uniqueArray.indexOf(arr[i]) === -1) { uniqueArray.push(arr[i]); }\n    }\n    return uniqueArray;\n  }\n\n  // Classes and attributes\n  function addClass(className) {\n    if (typeof className === 'undefined') {\n      return this;\n    }\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') { this[j].classList.add(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function removeClass(className) {\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') { this[j].classList.remove(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function hasClass(className) {\n    if (!this[0]) { return false; }\n    return this[0].classList.contains(className);\n  }\n  function toggleClass(className) {\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') { this[j].classList.toggle(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function attr(attrs, value) {\n    var arguments$1 = arguments;\n\n    if (arguments.length === 1 && typeof attrs === 'string') {\n      // Get attr\n      if (this[0]) { return this[0].getAttribute(attrs); }\n      return undefined;\n    }\n\n    // Set attrs\n    for (var i = 0; i < this.length; i += 1) {\n      if (arguments$1.length === 2) {\n        // String\n        this[i].setAttribute(attrs, value);\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (var attrName in attrs) {\n          this[i][attrName] = attrs[attrName];\n          this[i].setAttribute(attrName, attrs[attrName]);\n        }\n      }\n    }\n    return this;\n  }\n  // eslint-disable-next-line\n  function removeAttr(attr) {\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].removeAttribute(attr);\n    }\n    return this;\n  }\n  function data(key, value) {\n    var el;\n    if (typeof value === 'undefined') {\n      el = this[0];\n      // Get value\n      if (el) {\n        if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n          return el.dom7ElementDataStorage[key];\n        }\n\n        var dataKey = el.getAttribute((\"data-\" + key));\n        if (dataKey) {\n          return dataKey;\n        }\n        return undefined;\n      }\n      return undefined;\n    }\n\n    // Set value\n    for (var i = 0; i < this.length; i += 1) {\n      el = this[i];\n      if (!el.dom7ElementDataStorage) { el.dom7ElementDataStorage = {}; }\n      el.dom7ElementDataStorage[key] = value;\n    }\n    return this;\n  }\n  // Transforms\n  // eslint-disable-next-line\n  function transform(transform) {\n    for (var i = 0; i < this.length; i += 1) {\n      var elStyle = this[i].style;\n      elStyle.webkitTransform = transform;\n      elStyle.transform = transform;\n    }\n    return this;\n  }\n  function transition(duration) {\n    if (typeof duration !== 'string') {\n      duration = duration + \"ms\"; // eslint-disable-line\n    }\n    for (var i = 0; i < this.length; i += 1) {\n      var elStyle = this[i].style;\n      elStyle.webkitTransitionDuration = duration;\n      elStyle.transitionDuration = duration;\n    }\n    return this;\n  }\n  // Events\n  function on() {\n    var assign;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n    var eventType = args[0];\n    var targetSelector = args[1];\n    var listener = args[2];\n    var capture = args[3];\n    if (typeof args[1] === 'function') {\n      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);\n      targetSelector = undefined;\n    }\n    if (!capture) { capture = false; }\n\n    function handleLiveEvent(e) {\n      var target = e.target;\n      if (!target) { return; }\n      var eventData = e.target.dom7EventData || [];\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n      if ($(target).is(targetSelector)) { listener.apply(target, eventData); }\n      else {\n        var parents = $(target).parents(); // eslint-disable-line\n        for (var k = 0; k < parents.length; k += 1) {\n          if ($(parents[k]).is(targetSelector)) { listener.apply(parents[k], eventData); }\n        }\n      }\n    }\n    function handleEvent(e) {\n      var eventData = e && e.target ? e.target.dom7EventData || [] : [];\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n      listener.apply(this, eventData);\n    }\n    var events = eventType.split(' ');\n    var j;\n    for (var i = 0; i < this.length; i += 1) {\n      var el = this[i];\n      if (!targetSelector) {\n        for (j = 0; j < events.length; j += 1) {\n          var event = events[j];\n          if (!el.dom7Listeners) { el.dom7Listeners = {}; }\n          if (!el.dom7Listeners[event]) { el.dom7Listeners[event] = []; }\n          el.dom7Listeners[event].push({\n            listener: listener,\n            proxyListener: handleEvent,\n          });\n          el.addEventListener(event, handleEvent, capture);\n        }\n      } else {\n        // Live events\n        for (j = 0; j < events.length; j += 1) {\n          var event$1 = events[j];\n          if (!el.dom7LiveListeners) { el.dom7LiveListeners = {}; }\n          if (!el.dom7LiveListeners[event$1]) { el.dom7LiveListeners[event$1] = []; }\n          el.dom7LiveListeners[event$1].push({\n            listener: listener,\n            proxyListener: handleLiveEvent,\n          });\n          el.addEventListener(event$1, handleLiveEvent, capture);\n        }\n      }\n    }\n    return this;\n  }\n  function off() {\n    var assign;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n    var eventType = args[0];\n    var targetSelector = args[1];\n    var listener = args[2];\n    var capture = args[3];\n    if (typeof args[1] === 'function') {\n      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);\n      targetSelector = undefined;\n    }\n    if (!capture) { capture = false; }\n\n    var events = eventType.split(' ');\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this[j];\n        var handlers = (void 0);\n        if (!targetSelector && el.dom7Listeners) {\n          handlers = el.dom7Listeners[event];\n        } else if (targetSelector && el.dom7LiveListeners) {\n          handlers = el.dom7LiveListeners[event];\n        }\n        if (handlers && handlers.length) {\n          for (var k = handlers.length - 1; k >= 0; k -= 1) {\n            var handler = handlers[k];\n            if (listener && handler.listener === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (!listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            }\n          }\n        }\n      }\n    }\n    return this;\n  }\n  function trigger() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var events = args[0].split(' ');\n    var eventData = args[1];\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this[j];\n        var evt = (void 0);\n        try {\n          evt = new win.CustomEvent(event, {\n            detail: eventData,\n            bubbles: true,\n            cancelable: true,\n          });\n        } catch (e) {\n          evt = doc.createEvent('Event');\n          evt.initEvent(event, true, true);\n          evt.detail = eventData;\n        }\n        // eslint-disable-next-line\n        el.dom7EventData = args.filter(function (data, dataIndex) { return dataIndex > 0; });\n        el.dispatchEvent(evt);\n        el.dom7EventData = [];\n        delete el.dom7EventData;\n      }\n    }\n    return this;\n  }\n  function transitionEnd(callback) {\n    var events = ['webkitTransitionEnd', 'transitionend'];\n    var dom = this;\n    var i;\n    function fireCallBack(e) {\n      /* jshint validthis:true */\n      if (e.target !== this) { return; }\n      callback.call(this, e);\n      for (i = 0; i < events.length; i += 1) {\n        dom.off(events[i], fireCallBack);\n      }\n    }\n    if (callback) {\n      for (i = 0; i < events.length; i += 1) {\n        dom.on(events[i], fireCallBack);\n      }\n    }\n    return this;\n  }\n  function outerWidth(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        // eslint-disable-next-line\n        var styles = this.styles();\n        return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n      }\n      return this[0].offsetWidth;\n    }\n    return null;\n  }\n  function outerHeight(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        // eslint-disable-next-line\n        var styles = this.styles();\n        return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n      }\n      return this[0].offsetHeight;\n    }\n    return null;\n  }\n  function offset() {\n    if (this.length > 0) {\n      var el = this[0];\n      var box = el.getBoundingClientRect();\n      var body = doc.body;\n      var clientTop = el.clientTop || body.clientTop || 0;\n      var clientLeft = el.clientLeft || body.clientLeft || 0;\n      var scrollTop = el === win ? win.scrollY : el.scrollTop;\n      var scrollLeft = el === win ? win.scrollX : el.scrollLeft;\n      return {\n        top: (box.top + scrollTop) - clientTop,\n        left: (box.left + scrollLeft) - clientLeft,\n      };\n    }\n\n    return null;\n  }\n  function styles() {\n    if (this[0]) { return win.getComputedStyle(this[0], null); }\n    return {};\n  }\n  function css(props, value) {\n    var i;\n    if (arguments.length === 1) {\n      if (typeof props === 'string') {\n        if (this[0]) { return win.getComputedStyle(this[0], null).getPropertyValue(props); }\n      } else {\n        for (i = 0; i < this.length; i += 1) {\n          // eslint-disable-next-line\n          for (var prop in props) {\n            this[i].style[prop] = props[prop];\n          }\n        }\n        return this;\n      }\n    }\n    if (arguments.length === 2 && typeof props === 'string') {\n      for (i = 0; i < this.length; i += 1) {\n        this[i].style[props] = value;\n      }\n      return this;\n    }\n    return this;\n  }\n  // Iterate over the collection passing elements to `callback`\n  function each(callback) {\n    // Don't bother continuing without a callback\n    if (!callback) { return this; }\n    // Iterate over the current collection\n    for (var i = 0; i < this.length; i += 1) {\n      // If the callback returns false\n      if (callback.call(this[i], i, this[i]) === false) {\n        // End the loop early\n        return this;\n      }\n    }\n    // Return `this` to allow chained DOM operations\n    return this;\n  }\n  function filter(callback) {\n    var matchedItems = [];\n    var dom = this;\n    for (var i = 0; i < dom.length; i += 1) {\n      if (callback.call(dom[i], i, dom[i])) { matchedItems.push(dom[i]); }\n    }\n    return new Dom7(matchedItems);\n  }\n  // eslint-disable-next-line\n  function html(html) {\n    if (typeof html === 'undefined') {\n      return this[0] ? this[0].innerHTML : undefined;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].innerHTML = html;\n    }\n    return this;\n  }\n  // eslint-disable-next-line\n  function text(text) {\n    if (typeof text === 'undefined') {\n      if (this[0]) {\n        return this[0].textContent.trim();\n      }\n      return null;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].textContent = text;\n    }\n    return this;\n  }\n  function is(selector) {\n    var el = this[0];\n    var compareWith;\n    var i;\n    if (!el || typeof selector === 'undefined') { return false; }\n    if (typeof selector === 'string') {\n      if (el.matches) { return el.matches(selector); }\n      else if (el.webkitMatchesSelector) { return el.webkitMatchesSelector(selector); }\n      else if (el.msMatchesSelector) { return el.msMatchesSelector(selector); }\n\n      compareWith = $(selector);\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) { return true; }\n      }\n      return false;\n    } else if (selector === doc) { return el === doc; }\n    else if (selector === win) { return el === win; }\n\n    if (selector.nodeType || selector instanceof Dom7) {\n      compareWith = selector.nodeType ? [selector] : selector;\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) { return true; }\n      }\n      return false;\n    }\n    return false;\n  }\n  function index() {\n    var child = this[0];\n    var i;\n    if (child) {\n      i = 0;\n      // eslint-disable-next-line\n      while ((child = child.previousSibling) !== null) {\n        if (child.nodeType === 1) { i += 1; }\n      }\n      return i;\n    }\n    return undefined;\n  }\n  // eslint-disable-next-line\n  function eq(index) {\n    if (typeof index === 'undefined') { return this; }\n    var length = this.length;\n    var returnIndex;\n    if (index > length - 1) {\n      return new Dom7([]);\n    }\n    if (index < 0) {\n      returnIndex = length + index;\n      if (returnIndex < 0) { return new Dom7([]); }\n      return new Dom7([this[returnIndex]]);\n    }\n    return new Dom7([this[index]]);\n  }\n  function append() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var newChild;\n\n    for (var k = 0; k < args.length; k += 1) {\n      newChild = args[k];\n      for (var i = 0; i < this.length; i += 1) {\n        if (typeof newChild === 'string') {\n          var tempDiv = doc.createElement('div');\n          tempDiv.innerHTML = newChild;\n          while (tempDiv.firstChild) {\n            this[i].appendChild(tempDiv.firstChild);\n          }\n        } else if (newChild instanceof Dom7) {\n          for (var j = 0; j < newChild.length; j += 1) {\n            this[i].appendChild(newChild[j]);\n          }\n        } else {\n          this[i].appendChild(newChild);\n        }\n      }\n    }\n\n    return this;\n  }\n  function prepend(newChild) {\n    var i;\n    var j;\n    for (i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        var tempDiv = doc.createElement('div');\n        tempDiv.innerHTML = newChild;\n        for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n          this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (j = 0; j < newChild.length; j += 1) {\n          this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n        }\n      } else {\n        this[i].insertBefore(newChild, this[i].childNodes[0]);\n      }\n    }\n    return this;\n  }\n  function next(selector) {\n    if (this.length > 0) {\n      if (selector) {\n        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n          return new Dom7([this[0].nextElementSibling]);\n        }\n        return new Dom7([]);\n      }\n\n      if (this[0].nextElementSibling) { return new Dom7([this[0].nextElementSibling]); }\n      return new Dom7([]);\n    }\n    return new Dom7([]);\n  }\n  function nextAll(selector) {\n    var nextEls = [];\n    var el = this[0];\n    if (!el) { return new Dom7([]); }\n    while (el.nextElementSibling) {\n      var next = el.nextElementSibling; // eslint-disable-line\n      if (selector) {\n        if ($(next).is(selector)) { nextEls.push(next); }\n      } else { nextEls.push(next); }\n      el = next;\n    }\n    return new Dom7(nextEls);\n  }\n  function prev(selector) {\n    if (this.length > 0) {\n      var el = this[0];\n      if (selector) {\n        if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n          return new Dom7([el.previousElementSibling]);\n        }\n        return new Dom7([]);\n      }\n\n      if (el.previousElementSibling) { return new Dom7([el.previousElementSibling]); }\n      return new Dom7([]);\n    }\n    return new Dom7([]);\n  }\n  function prevAll(selector) {\n    var prevEls = [];\n    var el = this[0];\n    if (!el) { return new Dom7([]); }\n    while (el.previousElementSibling) {\n      var prev = el.previousElementSibling; // eslint-disable-line\n      if (selector) {\n        if ($(prev).is(selector)) { prevEls.push(prev); }\n      } else { prevEls.push(prev); }\n      el = prev;\n    }\n    return new Dom7(prevEls);\n  }\n  function parent(selector) {\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      if (this[i].parentNode !== null) {\n        if (selector) {\n          if ($(this[i].parentNode).is(selector)) { parents.push(this[i].parentNode); }\n        } else {\n          parents.push(this[i].parentNode);\n        }\n      }\n    }\n    return $(unique(parents));\n  }\n  function parents(selector) {\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      var parent = this[i].parentNode; // eslint-disable-line\n      while (parent) {\n        if (selector) {\n          if ($(parent).is(selector)) { parents.push(parent); }\n        } else {\n          parents.push(parent);\n        }\n        parent = parent.parentNode;\n      }\n    }\n    return $(unique(parents));\n  }\n  function closest(selector) {\n    var closest = this; // eslint-disable-line\n    if (typeof selector === 'undefined') {\n      return new Dom7([]);\n    }\n    if (!closest.is(selector)) {\n      closest = closest.parents(selector).eq(0);\n    }\n    return closest;\n  }\n  function find(selector) {\n    var foundElements = [];\n    for (var i = 0; i < this.length; i += 1) {\n      var found = this[i].querySelectorAll(selector);\n      for (var j = 0; j < found.length; j += 1) {\n        foundElements.push(found[j]);\n      }\n    }\n    return new Dom7(foundElements);\n  }\n  function children(selector) {\n    var children = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      var childNodes = this[i].childNodes;\n\n      for (var j = 0; j < childNodes.length; j += 1) {\n        if (!selector) {\n          if (childNodes[j].nodeType === 1) { children.push(childNodes[j]); }\n        } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n          children.push(childNodes[j]);\n        }\n      }\n    }\n    return new Dom7(unique(children));\n  }\n  function remove() {\n    for (var i = 0; i < this.length; i += 1) {\n      if (this[i].parentNode) { this[i].parentNode.removeChild(this[i]); }\n    }\n    return this;\n  }\n  function add() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var dom = this;\n    var i;\n    var j;\n    for (i = 0; i < args.length; i += 1) {\n      var toAdd = $(args[i]);\n      for (j = 0; j < toAdd.length; j += 1) {\n        dom[dom.length] = toAdd[j];\n        dom.length += 1;\n      }\n    }\n    return dom;\n  }\n\n  var Methods = {\n    addClass: addClass,\n    removeClass: removeClass,\n    hasClass: hasClass,\n    toggleClass: toggleClass,\n    attr: attr,\n    removeAttr: removeAttr,\n    data: data,\n    transform: transform,\n    transition: transition,\n    on: on,\n    off: off,\n    trigger: trigger,\n    transitionEnd: transitionEnd,\n    outerWidth: outerWidth,\n    outerHeight: outerHeight,\n    offset: offset,\n    css: css,\n    each: each,\n    html: html,\n    text: text,\n    is: is,\n    index: index,\n    eq: eq,\n    append: append,\n    prepend: prepend,\n    next: next,\n    nextAll: nextAll,\n    prev: prev,\n    prevAll: prevAll,\n    parent: parent,\n    parents: parents,\n    closest: closest,\n    find: find,\n    children: children,\n    filter: filter,\n    remove: remove,\n    add: add,\n    styles: styles,\n  };\n\n  Object.keys(Methods).forEach(function (methodName) {\n    $.fn[methodName] = $.fn[methodName] || Methods[methodName];\n  });\n\n  var Utils = {\n    deleteProps: function deleteProps(obj) {\n      var object = obj;\n      Object.keys(object).forEach(function (key) {\n        try {\n          object[key] = null;\n        } catch (e) {\n          // no getter for object\n        }\n        try {\n          delete object[key];\n        } catch (e) {\n          // something got wrong\n        }\n      });\n    },\n    nextTick: function nextTick(callback, delay) {\n      if ( delay === void 0 ) delay = 0;\n\n      return setTimeout(callback, delay);\n    },\n    now: function now() {\n      return Date.now();\n    },\n    getTranslate: function getTranslate(el, axis) {\n      if ( axis === void 0 ) axis = 'x';\n\n      var matrix;\n      var curTransform;\n      var transformMatrix;\n\n      var curStyle = win.getComputedStyle(el, null);\n\n      if (win.WebKitCSSMatrix) {\n        curTransform = curStyle.transform || curStyle.webkitTransform;\n        if (curTransform.split(',').length > 6) {\n          curTransform = curTransform.split(', ').map(function (a) { return a.replace(',', '.'); }).join(', ');\n        }\n        // Some old versions of Webkit choke when 'none' is passed; pass\n        // empty string instead in this case\n        transformMatrix = new win.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n      } else {\n        transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n        matrix = transformMatrix.toString().split(',');\n      }\n\n      if (axis === 'x') {\n        // Latest Chrome and webkits Fix\n        if (win.WebKitCSSMatrix) { curTransform = transformMatrix.m41; }\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) { curTransform = parseFloat(matrix[12]); }\n        // Normal Browsers\n        else { curTransform = parseFloat(matrix[4]); }\n      }\n      if (axis === 'y') {\n        // Latest Chrome and webkits Fix\n        if (win.WebKitCSSMatrix) { curTransform = transformMatrix.m42; }\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) { curTransform = parseFloat(matrix[13]); }\n        // Normal Browsers\n        else { curTransform = parseFloat(matrix[5]); }\n      }\n      return curTransform || 0;\n    },\n    parseUrlQuery: function parseUrlQuery(url) {\n      var query = {};\n      var urlToParse = url || win.location.href;\n      var i;\n      var params;\n      var param;\n      var length;\n      if (typeof urlToParse === 'string' && urlToParse.length) {\n        urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n        params = urlToParse.split('&').filter(function (paramsPart) { return paramsPart !== ''; });\n        length = params.length;\n\n        for (i = 0; i < length; i += 1) {\n          param = params[i].replace(/#\\S+/g, '').split('=');\n          query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n        }\n      }\n      return query;\n    },\n    isObject: function isObject(o) {\n      return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n    },\n    extend: function extend() {\n      var args = [], len$1 = arguments.length;\n      while ( len$1-- ) args[ len$1 ] = arguments[ len$1 ];\n\n      var to = Object(args[0]);\n      for (var i = 1; i < args.length; i += 1) {\n        var nextSource = args[i];\n        if (nextSource !== undefined && nextSource !== null) {\n          var keysArray = Object.keys(Object(nextSource));\n          for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n            var nextKey = keysArray[nextIndex];\n            var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n            if (desc !== undefined && desc.enumerable) {\n              if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                Utils.extend(to[nextKey], nextSource[nextKey]);\n              } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                to[nextKey] = {};\n                Utils.extend(to[nextKey], nextSource[nextKey]);\n              } else {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n        }\n      }\n      return to;\n    },\n  };\n\n  var Support = (function Support() {\n    return {\n      touch: (win.Modernizr && win.Modernizr.touch === true) || (function checkTouch() {\n        return !!((win.navigator.maxTouchPoints > 0) || ('ontouchstart' in win) || (win.DocumentTouch && doc instanceof win.DocumentTouch));\n      }()),\n\n      pointerEvents: !!(win.navigator.pointerEnabled || win.PointerEvent || ('maxTouchPoints' in win.navigator && win.navigator.maxTouchPoints > 0)),\n      prefixedPointerEvents: !!win.navigator.msPointerEnabled,\n\n      observer: (function checkObserver() {\n        return ('MutationObserver' in win || 'WebkitMutationObserver' in win);\n      }()),\n\n      passiveListener: (function checkPassiveListener() {\n        var supportsPassive = false;\n        try {\n          var opts = Object.defineProperty({}, 'passive', {\n            // eslint-disable-next-line\n            get: function get() {\n              supportsPassive = true;\n            },\n          });\n          win.addEventListener('testPassiveListener', null, opts);\n        } catch (e) {\n          // No support\n        }\n        return supportsPassive;\n      }()),\n\n      gestures: (function checkGestures() {\n        return 'ongesturestart' in win;\n      }()),\n    };\n  }());\n\n  var SwiperClass = function SwiperClass(params) {\n    if ( params === void 0 ) params = {};\n\n    var self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach(function (eventName) {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  };\n\n  var staticAccessors = { components: { configurable: true } };\n\n  SwiperClass.prototype.on = function on (events, handler, priority) {\n    var self = this;\n    if (typeof handler !== 'function') { return self; }\n    var method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(function (event) {\n      if (!self.eventsListeners[event]) { self.eventsListeners[event] = []; }\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.once = function once (events, handler, priority) {\n    var self = this;\n    if (typeof handler !== 'function') { return self; }\n    function onceHandler() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  };\n\n  SwiperClass.prototype.off = function off (events, handler) {\n    var self = this;\n    if (!self.eventsListeners) { return self; }\n    events.split(' ').forEach(function (event) {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach(function (eventHandler, index) {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.emit = function emit () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n    var self = this;\n    if (!self.eventsListeners) { return self; }\n    var events;\n    var data;\n    var context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    var eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(function (event) {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        var handlers = [];\n        self.eventsListeners[event].forEach(function (eventHandler) {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach(function (eventHandler) {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.useModulesParams = function useModulesParams (instanceParams) {\n    var instance = this;\n    if (!instance.modules) { return; }\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  };\n\n  SwiperClass.prototype.useModules = function useModules (modulesParams) {\n      if ( modulesParams === void 0 ) modulesParams = {};\n\n    var instance = this;\n    if (!instance.modules) { return; }\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName];\n      var moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach(function (modulePropName) {\n          var moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach(function (moduleEventName) {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  };\n\n  staticAccessors.components.set = function (components) {\n    var Class = this;\n    if (!Class.use) { return; }\n    Class.use(components);\n  };\n\n  SwiperClass.installModule = function installModule (module) {\n      var params = [], len = arguments.length - 1;\n      while ( len-- > 0 ) params[ len ] = arguments[ len + 1 ];\n\n    var Class = this;\n    if (!Class.prototype.modules) { Class.prototype.modules = {}; }\n    var name = module.name || (((Object.keys(Class.prototype.modules).length) + \"_\" + (Utils.now())));\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach(function (key) {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach(function (key) {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  };\n\n  SwiperClass.use = function use (module) {\n      var params = [], len = arguments.length - 1;\n      while ( len-- > 0 ) params[ len ] = arguments[ len + 1 ];\n\n    var Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(function (m) { return Class.installModule(m); });\n      return Class;\n    }\n    return Class.installModule.apply(Class, [ module ].concat( params ));\n  };\n\n  Object.defineProperties( SwiperClass, staticAccessors );\n\n  function updateSize () {\n    var swiper = this;\n    var width;\n    var height;\n    var $el = swiper.$el;\n    if (typeof swiper.params.width !== 'undefined') {\n      width = swiper.params.width;\n    } else {\n      width = $el[0].clientWidth;\n    }\n    if (typeof swiper.params.height !== 'undefined') {\n      height = swiper.params.height;\n    } else {\n      height = $el[0].clientHeight;\n    }\n    if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n      return;\n    }\n\n    // Subtract paddings\n    width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n    height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n    Utils.extend(swiper, {\n      width: width,\n      height: height,\n      size: swiper.isHorizontal() ? width : height,\n    });\n  }\n\n  function updateSlides () {\n    var swiper = this;\n    var params = swiper.params;\n\n    var $wrapperEl = swiper.$wrapperEl;\n    var swiperSize = swiper.size;\n    var rtl = swiper.rtlTranslate;\n    var wrongRTL = swiper.wrongRTL;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n    var slides = $wrapperEl.children((\".\" + (swiper.params.slideClass)));\n    var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n    var snapGrid = [];\n    var slidesGrid = [];\n    var slidesSizesGrid = [];\n\n    function slidesForMargin(slideIndex) {\n      if (!params.cssMode) { return true; }\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }\n\n    var offsetBefore = params.slidesOffsetBefore;\n    if (typeof offsetBefore === 'function') {\n      offsetBefore = params.slidesOffsetBefore.call(swiper);\n    }\n\n    var offsetAfter = params.slidesOffsetAfter;\n    if (typeof offsetAfter === 'function') {\n      offsetAfter = params.slidesOffsetAfter.call(swiper);\n    }\n\n    var previousSnapGridLength = swiper.snapGrid.length;\n    var previousSlidesGridLength = swiper.snapGrid.length;\n\n    var spaceBetween = params.spaceBetween;\n    var slidePosition = -offsetBefore;\n    var prevSlideSize = 0;\n    var index = 0;\n    if (typeof swiperSize === 'undefined') {\n      return;\n    }\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n      spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n    }\n\n    swiper.virtualSize = -spaceBetween;\n\n    // reset margins\n    if (rtl) { slides.css({ marginLeft: '', marginTop: '' }); }\n    else { slides.css({ marginRight: '', marginBottom: '' }); }\n\n    var slidesNumberEvenToRows;\n    if (params.slidesPerColumn > 1) {\n      if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n        slidesNumberEvenToRows = slidesLength;\n      } else {\n        slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n      }\n      if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n        slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n      }\n    }\n\n    // Calc slides\n    var slideSize;\n    var slidesPerColumn = params.slidesPerColumn;\n    var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n    var numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n    for (var i = 0; i < slidesLength; i += 1) {\n      slideSize = 0;\n      var slide = slides.eq(i);\n      if (params.slidesPerColumn > 1) {\n        // Set slides order\n        var newSlideOrderIndex = (void 0);\n        var column = (void 0);\n        var row = (void 0);\n        if (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1) {\n          var groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));\n          var slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;\n\n          row = Math.floor(slideIndexInGroup / params.slidesPerColumn);\n          column = (slideIndexInGroup - row * params.slidesPerGroup) + groupIndex * params.slidesPerGroup;\n\n          newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n          slide\n            .css({\n              '-webkit-box-ordinal-group': newSlideOrderIndex,\n              '-moz-box-ordinal-group': newSlideOrderIndex,\n              '-ms-flex-order': newSlideOrderIndex,\n              '-webkit-order': newSlideOrderIndex,\n              order: newSlideOrderIndex,\n            });\n        } else if (params.slidesPerColumnFill === 'column') {\n          column = Math.floor(i / slidesPerColumn);\n          row = i - (column * slidesPerColumn);\n          if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n            row += 1;\n            if (row >= slidesPerColumn) {\n              row = 0;\n              column += 1;\n            }\n          }\n        } else {\n          row = Math.floor(i / slidesPerRow);\n          column = i - (row * slidesPerRow);\n        }\n        slide.css(\n          (\"margin-\" + (swiper.isHorizontal() ? 'top' : 'left')),\n          (row !== 0 && params.spaceBetween) && (((params.spaceBetween) + \"px\"))\n        );\n      }\n      if (slide.css('display') === 'none') { continue; } // eslint-disable-line\n\n      if (params.slidesPerView === 'auto') {\n        var slideStyles = win.getComputedStyle(slide[0], null);\n        var currentTransform = slide[0].style.transform;\n        var currentWebKitTransform = slide[0].style.webkitTransform;\n        if (currentTransform) {\n          slide[0].style.transform = 'none';\n        }\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = 'none';\n        }\n        if (params.roundLengths) {\n          slideSize = swiper.isHorizontal()\n            ? slide.outerWidth(true)\n            : slide.outerHeight(true);\n        } else {\n          // eslint-disable-next-line\n          if (swiper.isHorizontal()) {\n            var width = parseFloat(slideStyles.getPropertyValue('width'));\n            var paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n            var paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n            var marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n            var marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n            var boxSizing = slideStyles.getPropertyValue('box-sizing');\n            if (boxSizing && boxSizing === 'border-box') {\n              slideSize = width + marginLeft + marginRight;\n            } else {\n              slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n            }\n          } else {\n            var height = parseFloat(slideStyles.getPropertyValue('height'));\n            var paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n            var paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n            var marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n            var marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n            var boxSizing$1 = slideStyles.getPropertyValue('box-sizing');\n            if (boxSizing$1 && boxSizing$1 === 'border-box') {\n              slideSize = height + marginTop + marginBottom;\n            } else {\n              slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n            }\n          }\n        }\n        if (currentTransform) {\n          slide[0].style.transform = currentTransform;\n        }\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = currentWebKitTransform;\n        }\n        if (params.roundLengths) { slideSize = Math.floor(slideSize); }\n      } else {\n        slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n        if (params.roundLengths) { slideSize = Math.floor(slideSize); }\n\n        if (slides[i]) {\n          if (swiper.isHorizontal()) {\n            slides[i].style.width = slideSize + \"px\";\n          } else {\n            slides[i].style.height = slideSize + \"px\";\n          }\n        }\n      }\n      if (slides[i]) {\n        slides[i].swiperSlideSize = slideSize;\n      }\n      slidesSizesGrid.push(slideSize);\n\n\n      if (params.centeredSlides) {\n        slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n        if (prevSlideSize === 0 && i !== 0) { slidePosition = slidePosition - (swiperSize / 2) - spaceBetween; }\n        if (i === 0) { slidePosition = slidePosition - (swiperSize / 2) - spaceBetween; }\n        if (Math.abs(slidePosition) < 1 / 1000) { slidePosition = 0; }\n        if (params.roundLengths) { slidePosition = Math.floor(slidePosition); }\n        if ((index) % params.slidesPerGroup === 0) { snapGrid.push(slidePosition); }\n        slidesGrid.push(slidePosition);\n      } else {\n        if (params.roundLengths) { slidePosition = Math.floor(slidePosition); }\n        if ((index) % params.slidesPerGroup === 0) { snapGrid.push(slidePosition); }\n        slidesGrid.push(slidePosition);\n        slidePosition = slidePosition + slideSize + spaceBetween;\n      }\n\n      swiper.virtualSize += slideSize + spaceBetween;\n\n      prevSlideSize = slideSize;\n\n      index += 1;\n    }\n    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n    var newSlidesGrid;\n\n    if (\n      rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n      $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") });\n    }\n    if (params.setWrapperSize) {\n      if (swiper.isHorizontal()) { $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      else { $wrapperEl.css({ height: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n    }\n\n    if (params.slidesPerColumn > 1) {\n      swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n      swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n      if (swiper.isHorizontal()) { $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      else { $wrapperEl.css({ height: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      if (params.centeredSlides) {\n        newSlidesGrid = [];\n        for (var i$1 = 0; i$1 < snapGrid.length; i$1 += 1) {\n          var slidesGridItem = snapGrid[i$1];\n          if (params.roundLengths) { slidesGridItem = Math.floor(slidesGridItem); }\n          if (snapGrid[i$1] < swiper.virtualSize + snapGrid[0]) { newSlidesGrid.push(slidesGridItem); }\n        }\n        snapGrid = newSlidesGrid;\n      }\n    }\n\n    // Remove last grid elements depending on width\n    if (!params.centeredSlides) {\n      newSlidesGrid = [];\n      for (var i$2 = 0; i$2 < snapGrid.length; i$2 += 1) {\n        var slidesGridItem$1 = snapGrid[i$2];\n        if (params.roundLengths) { slidesGridItem$1 = Math.floor(slidesGridItem$1); }\n        if (snapGrid[i$2] <= swiper.virtualSize - swiperSize) {\n          newSlidesGrid.push(slidesGridItem$1);\n        }\n      }\n      snapGrid = newSlidesGrid;\n      if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n        snapGrid.push(swiper.virtualSize - swiperSize);\n      }\n    }\n    if (snapGrid.length === 0) { snapGrid = [0]; }\n\n    if (params.spaceBetween !== 0) {\n      if (swiper.isHorizontal()) {\n        if (rtl) { slides.filter(slidesForMargin).css({ marginLeft: (spaceBetween + \"px\") }); }\n        else { slides.filter(slidesForMargin).css({ marginRight: (spaceBetween + \"px\") }); }\n      } else { slides.filter(slidesForMargin).css({ marginBottom: (spaceBetween + \"px\") }); }\n    }\n\n    if (params.centerInsufficientSlides) {\n      var allSlidesSize = 0;\n      slidesSizesGrid.forEach(function (slideSizeValue) {\n        allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n      });\n      allSlidesSize -= params.spaceBetween;\n      if (allSlidesSize < swiperSize) {\n        var allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n        snapGrid.forEach(function (snap, snapIndex) {\n          snapGrid[snapIndex] = snap - allSlidesOffset;\n        });\n        slidesGrid.forEach(function (snap, snapIndex) {\n          slidesGrid[snapIndex] = snap + allSlidesOffset;\n        });\n      }\n    }\n\n    Utils.extend(swiper, {\n      slides: slides,\n      snapGrid: snapGrid,\n      slidesGrid: slidesGrid,\n      slidesSizesGrid: slidesSizesGrid,\n    });\n\n    if (slidesLength !== previousSlidesLength) {\n      swiper.emit('slidesLengthChange');\n    }\n    if (snapGrid.length !== previousSnapGridLength) {\n      if (swiper.params.watchOverflow) { swiper.checkOverflow(); }\n      swiper.emit('snapGridLengthChange');\n    }\n    if (slidesGrid.length !== previousSlidesGridLength) {\n      swiper.emit('slidesGridLengthChange');\n    }\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateSlidesOffset();\n    }\n  }\n\n  function updateAutoHeight (speed) {\n    var swiper = this;\n    var activeSlides = [];\n    var newHeight = 0;\n    var i;\n    if (typeof speed === 'number') {\n      swiper.setTransition(speed);\n    } else if (speed === true) {\n      swiper.setTransition(swiper.params.speed);\n    }\n    // Find slides currently in view\n    if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        var index = swiper.activeIndex + i;\n        if (index > swiper.slides.length) { break; }\n        activeSlides.push(swiper.slides.eq(index)[0]);\n      }\n    } else {\n      activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n    }\n\n    // Find new height from highest slide in view\n    for (i = 0; i < activeSlides.length; i += 1) {\n      if (typeof activeSlides[i] !== 'undefined') {\n        var height = activeSlides[i].offsetHeight;\n        newHeight = height > newHeight ? height : newHeight;\n      }\n    }\n\n    // Update Height\n    if (newHeight) { swiper.$wrapperEl.css('height', (newHeight + \"px\")); }\n  }\n\n  function updateSlidesOffset () {\n    var swiper = this;\n    var slides = swiper.slides;\n    for (var i = 0; i < slides.length; i += 1) {\n      slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n    }\n  }\n\n  function updateSlidesProgress (translate) {\n    if ( translate === void 0 ) translate = (this && this.translate) || 0;\n\n    var swiper = this;\n    var params = swiper.params;\n\n    var slides = swiper.slides;\n    var rtl = swiper.rtlTranslate;\n\n    if (slides.length === 0) { return; }\n    if (typeof slides[0].swiperSlideOffset === 'undefined') { swiper.updateSlidesOffset(); }\n\n    var offsetCenter = -translate;\n    if (rtl) { offsetCenter = translate; }\n\n    // Visible Slides\n    slides.removeClass(params.slideVisibleClass);\n\n    swiper.visibleSlidesIndexes = [];\n    swiper.visibleSlides = [];\n\n    for (var i = 0; i < slides.length; i += 1) {\n      var slide = slides[i];\n      var slideProgress = (\n        (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n      ) / (slide.swiperSlideSize + params.spaceBetween);\n      if (params.watchSlidesVisibility) {\n        var slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n        var slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n        var isVisible = (slideBefore >= 0 && slideBefore < swiper.size - 1)\n                  || (slideAfter > 1 && slideAfter <= swiper.size)\n                  || (slideBefore <= 0 && slideAfter >= swiper.size);\n        if (isVisible) {\n          swiper.visibleSlides.push(slide);\n          swiper.visibleSlidesIndexes.push(i);\n          slides.eq(i).addClass(params.slideVisibleClass);\n        }\n      }\n      slide.progress = rtl ? -slideProgress : slideProgress;\n    }\n    swiper.visibleSlides = $(swiper.visibleSlides);\n  }\n\n  function updateProgress (translate) {\n    var swiper = this;\n    if (typeof translate === 'undefined') {\n      var multiplier = swiper.rtlTranslate ? -1 : 1;\n      // eslint-disable-next-line\n      translate = (swiper && swiper.translate && (swiper.translate * multiplier)) || 0;\n    }\n    var params = swiper.params;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    var progress = swiper.progress;\n    var isBeginning = swiper.isBeginning;\n    var isEnd = swiper.isEnd;\n    var wasBeginning = isBeginning;\n    var wasEnd = isEnd;\n    if (translatesDiff === 0) {\n      progress = 0;\n      isBeginning = true;\n      isEnd = true;\n    } else {\n      progress = (translate - swiper.minTranslate()) / (translatesDiff);\n      isBeginning = progress <= 0;\n      isEnd = progress >= 1;\n    }\n    Utils.extend(swiper, {\n      progress: progress,\n      isBeginning: isBeginning,\n      isEnd: isEnd,\n    });\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) { swiper.updateSlidesProgress(translate); }\n\n    if (isBeginning && !wasBeginning) {\n      swiper.emit('reachBeginning toEdge');\n    }\n    if (isEnd && !wasEnd) {\n      swiper.emit('reachEnd toEdge');\n    }\n    if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n      swiper.emit('fromEdge');\n    }\n\n    swiper.emit('progress', progress);\n  }\n\n  function updateSlidesClasses () {\n    var swiper = this;\n\n    var slides = swiper.slides;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n    var realIndex = swiper.realIndex;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n\n    slides.removeClass(((params.slideActiveClass) + \" \" + (params.slideNextClass) + \" \" + (params.slidePrevClass) + \" \" + (params.slideDuplicateActiveClass) + \" \" + (params.slideDuplicateNextClass) + \" \" + (params.slideDuplicatePrevClass)));\n\n    var activeSlide;\n    if (isVirtual) {\n      activeSlide = swiper.$wrapperEl.find((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + activeIndex + \"\\\"]\"));\n    } else {\n      activeSlide = slides.eq(activeIndex);\n    }\n\n    // Active classes\n    activeSlide.addClass(params.slideActiveClass);\n\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (activeSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\"))\n          .addClass(params.slideDuplicateActiveClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\"))\n          .addClass(params.slideDuplicateActiveClass);\n      }\n    }\n    // Next Slide\n    var nextSlide = activeSlide.nextAll((\".\" + (params.slideClass))).eq(0).addClass(params.slideNextClass);\n    if (params.loop && nextSlide.length === 0) {\n      nextSlide = slides.eq(0);\n      nextSlide.addClass(params.slideNextClass);\n    }\n    // Prev Slide\n    var prevSlide = activeSlide.prevAll((\".\" + (params.slideClass))).eq(0).addClass(params.slidePrevClass);\n    if (params.loop && prevSlide.length === 0) {\n      prevSlide = slides.eq(-1);\n      prevSlide.addClass(params.slidePrevClass);\n    }\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (nextSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + (nextSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicateNextClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + (nextSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicateNextClass);\n      }\n      if (prevSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + (prevSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicatePrevClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + (prevSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicatePrevClass);\n      }\n    }\n  }\n\n  function updateActiveIndex (newActiveIndex) {\n    var swiper = this;\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    var slidesGrid = swiper.slidesGrid;\n    var snapGrid = swiper.snapGrid;\n    var params = swiper.params;\n    var previousIndex = swiper.activeIndex;\n    var previousRealIndex = swiper.realIndex;\n    var previousSnapIndex = swiper.snapIndex;\n    var activeIndex = newActiveIndex;\n    var snapIndex;\n    if (typeof activeIndex === 'undefined') {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\n          if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n            activeIndex = i;\n          } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n            activeIndex = i + 1;\n          }\n        } else if (translate >= slidesGrid[i]) {\n          activeIndex = i;\n        }\n      }\n      // Normalize slideIndex\n      if (params.normalizeSlideIndex) {\n        if (activeIndex < 0 || typeof activeIndex === 'undefined') { activeIndex = 0; }\n      }\n    }\n    if (snapGrid.indexOf(translate) >= 0) {\n      snapIndex = snapGrid.indexOf(translate);\n    } else {\n      snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n    }\n    if (snapIndex >= snapGrid.length) { snapIndex = snapGrid.length - 1; }\n    if (activeIndex === previousIndex) {\n      if (snapIndex !== previousSnapIndex) {\n        swiper.snapIndex = snapIndex;\n        swiper.emit('snapIndexChange');\n      }\n      return;\n    }\n\n    // Get real index\n    var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n    Utils.extend(swiper, {\n      snapIndex: snapIndex,\n      realIndex: realIndex,\n      previousIndex: previousIndex,\n      activeIndex: activeIndex,\n    });\n    swiper.emit('activeIndexChange');\n    swiper.emit('snapIndexChange');\n    if (previousRealIndex !== realIndex) {\n      swiper.emit('realIndexChange');\n    }\n    if (swiper.initialized || swiper.runCallbacksOnInit) {\n      swiper.emit('slideChange');\n    }\n  }\n\n  function updateClickedSlide (e) {\n    var swiper = this;\n    var params = swiper.params;\n    var slide = $(e.target).closest((\".\" + (params.slideClass)))[0];\n    var slideFound = false;\n    if (slide) {\n      for (var i = 0; i < swiper.slides.length; i += 1) {\n        if (swiper.slides[i] === slide) { slideFound = true; }\n      }\n    }\n\n    if (slide && slideFound) {\n      swiper.clickedSlide = slide;\n      if (swiper.virtual && swiper.params.virtual.enabled) {\n        swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n      } else {\n        swiper.clickedIndex = $(slide).index();\n      }\n    } else {\n      swiper.clickedSlide = undefined;\n      swiper.clickedIndex = undefined;\n      return;\n    }\n    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n      swiper.slideToClickedSlide();\n    }\n  }\n\n  var update = {\n    updateSize: updateSize,\n    updateSlides: updateSlides,\n    updateAutoHeight: updateAutoHeight,\n    updateSlidesOffset: updateSlidesOffset,\n    updateSlidesProgress: updateSlidesProgress,\n    updateProgress: updateProgress,\n    updateSlidesClasses: updateSlidesClasses,\n    updateActiveIndex: updateActiveIndex,\n    updateClickedSlide: updateClickedSlide,\n  };\n\n  function getTranslate (axis) {\n    if ( axis === void 0 ) axis = this.isHorizontal() ? 'x' : 'y';\n\n    var swiper = this;\n\n    var params = swiper.params;\n    var rtl = swiper.rtlTranslate;\n    var translate = swiper.translate;\n    var $wrapperEl = swiper.$wrapperEl;\n\n    if (params.virtualTranslate) {\n      return rtl ? -translate : translate;\n    }\n    if (params.cssMode) {\n      return translate;\n    }\n\n    var currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n    if (rtl) { currentTranslate = -currentTranslate; }\n\n    return currentTranslate || 0;\n  }\n\n  function setTranslate (translate, byController) {\n    var swiper = this;\n    var rtl = swiper.rtlTranslate;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var wrapperEl = swiper.wrapperEl;\n    var progress = swiper.progress;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n\n    if (swiper.isHorizontal()) {\n      x = rtl ? -translate : translate;\n    } else {\n      y = translate;\n    }\n\n    if (params.roundLengths) {\n      x = Math.floor(x);\n      y = Math.floor(y);\n    }\n\n    if (params.cssMode) {\n      wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n    } else if (!params.virtualTranslate) {\n      $wrapperEl.transform((\"translate3d(\" + x + \"px, \" + y + \"px, \" + z + \"px)\"));\n    }\n    swiper.previousTranslate = swiper.translate;\n    swiper.translate = swiper.isHorizontal() ? x : y;\n\n    // Check if we need to update progress\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n    }\n    if (newProgress !== progress) {\n      swiper.updateProgress(translate);\n    }\n\n    swiper.emit('setTranslate', swiper.translate, byController);\n  }\n\n  function minTranslate () {\n    return (-this.snapGrid[0]);\n  }\n\n  function maxTranslate () {\n    return (-this.snapGrid[this.snapGrid.length - 1]);\n  }\n\n  var translate = {\n    getTranslate: getTranslate,\n    setTranslate: setTranslate,\n    minTranslate: minTranslate,\n    maxTranslate: maxTranslate,\n  };\n\n  function setTransition (duration, byController) {\n    var swiper = this;\n\n    if (!swiper.params.cssMode) {\n      swiper.$wrapperEl.transition(duration);\n    }\n\n    swiper.emit('setTransition', duration, byController);\n  }\n\n  function transitionStart (runCallbacks, direction) {\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var params = swiper.params;\n    var previousIndex = swiper.previousIndex;\n    if (params.cssMode) { return; }\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n\n    var dir = direction;\n    if (!dir) {\n      if (activeIndex > previousIndex) { dir = 'next'; }\n      else if (activeIndex < previousIndex) { dir = 'prev'; }\n      else { dir = 'reset'; }\n    }\n\n    swiper.emit('transitionStart');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionStart');\n        return;\n      }\n      swiper.emit('slideChangeTransitionStart');\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionStart');\n      } else {\n        swiper.emit('slidePrevTransitionStart');\n      }\n    }\n  }\n\n  function transitionEnd$1 (runCallbacks, direction) {\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var previousIndex = swiper.previousIndex;\n    var params = swiper.params;\n    swiper.animating = false;\n    if (params.cssMode) { return; }\n    swiper.setTransition(0);\n\n    var dir = direction;\n    if (!dir) {\n      if (activeIndex > previousIndex) { dir = 'next'; }\n      else if (activeIndex < previousIndex) { dir = 'prev'; }\n      else { dir = 'reset'; }\n    }\n\n    swiper.emit('transitionEnd');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionEnd');\n        return;\n      }\n      swiper.emit('slideChangeTransitionEnd');\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionEnd');\n      } else {\n        swiper.emit('slidePrevTransitionEnd');\n      }\n    }\n  }\n\n  var transition$1 = {\n    setTransition: setTransition,\n    transitionStart: transitionStart,\n    transitionEnd: transitionEnd$1,\n  };\n\n  function slideTo (index, speed, runCallbacks, internal) {\n    var obj;\n\n    if ( index === void 0 ) index = 0;\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n    var swiper = this;\n    var slideIndex = index;\n    if (slideIndex < 0) { slideIndex = 0; }\n\n    var params = swiper.params;\n    var snapGrid = swiper.snapGrid;\n    var slidesGrid = swiper.slidesGrid;\n    var previousIndex = swiper.previousIndex;\n    var activeIndex = swiper.activeIndex;\n    var rtl = swiper.rtlTranslate;\n    var wrapperEl = swiper.wrapperEl;\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return false;\n    }\n\n    var snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n    if (snapIndex >= snapGrid.length) { snapIndex = snapGrid.length - 1; }\n\n    if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n      swiper.emit('beforeSlideChangeStart');\n    }\n\n    var translate = -snapGrid[snapIndex];\n\n    // Update progress\n    swiper.updateProgress(translate);\n\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n          slideIndex = i;\n        }\n      }\n    }\n    // Directions locks\n    if (swiper.initialized && slideIndex !== activeIndex) {\n      if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n        return false;\n      }\n      if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n        if ((activeIndex || 0) !== slideIndex) { return false; }\n      }\n    }\n\n    var direction;\n    if (slideIndex > activeIndex) { direction = 'next'; }\n    else if (slideIndex < activeIndex) { direction = 'prev'; }\n    else { direction = 'reset'; }\n\n\n    // Update Index\n    if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n      swiper.updateActiveIndex(slideIndex);\n      // Update Height\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n      swiper.updateSlidesClasses();\n      if (params.effect !== 'slide') {\n        swiper.setTranslate(translate);\n      }\n      if (direction !== 'reset') {\n        swiper.transitionStart(runCallbacks, direction);\n        swiper.transitionEnd(runCallbacks, direction);\n      }\n      return false;\n    }\n    if (params.cssMode) {\n      var isH = swiper.isHorizontal();\n      if (speed === 0) {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -translate;\n      } else {\n        // eslint-disable-next-line\n        if (wrapperEl.scrollTo) {\n          wrapperEl.scrollTo(( obj = {}, obj[isH ? 'left' : 'top'] = -translate, obj.behavior = 'smooth', obj ));\n        } else {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -translate;\n        }\n      }\n      return true;\n    }\n\n    if (speed === 0) {\n      swiper.setTransition(0);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    } else {\n      swiper.setTransition(speed);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      if (!swiper.animating) {\n        swiper.animating = true;\n        if (!swiper.onSlideToWrapperTransitionEnd) {\n          swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) { return; }\n            if (e.target !== this) { return; }\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n            swiper.onSlideToWrapperTransitionEnd = null;\n            delete swiper.onSlideToWrapperTransitionEnd;\n            swiper.transitionEnd(runCallbacks, direction);\n          };\n        }\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n      }\n    }\n\n    return true;\n  }\n\n  function slideToLoop (index, speed, runCallbacks, internal) {\n    if ( index === void 0 ) index = 0;\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var newIndex = index;\n    if (swiper.params.loop) {\n      newIndex += swiper.loopedSlides;\n    }\n\n    return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideNext (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var params = swiper.params;\n    var animating = swiper.animating;\n    if (params.loop) {\n      if (animating) { return false; }\n      swiper.loopFix();\n      // eslint-disable-next-line\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n      return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n    }\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slidePrev (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var params = swiper.params;\n    var animating = swiper.animating;\n    var snapGrid = swiper.snapGrid;\n    var slidesGrid = swiper.slidesGrid;\n    var rtlTranslate = swiper.rtlTranslate;\n\n    if (params.loop) {\n      if (animating) { return false; }\n      swiper.loopFix();\n      // eslint-disable-next-line\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n    var translate = rtlTranslate ? swiper.translate : -swiper.translate;\n    function normalize(val) {\n      if (val < 0) { return -Math.floor(Math.abs(val)); }\n      return Math.floor(val);\n    }\n    var normalizedTranslate = normalize(translate);\n    var normalizedSnapGrid = snapGrid.map(function (val) { return normalize(val); });\n    var normalizedSlidesGrid = slidesGrid.map(function (val) { return normalize(val); });\n\n    var currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n    var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n    if (typeof prevSnap === 'undefined' && params.cssMode) {\n      snapGrid.forEach(function (snap) {\n        if (!prevSnap && normalizedTranslate >= snap) { prevSnap = snap; }\n      });\n    }\n    var prevIndex;\n    if (typeof prevSnap !== 'undefined') {\n      prevIndex = slidesGrid.indexOf(prevSnap);\n      if (prevIndex < 0) { prevIndex = swiper.activeIndex - 1; }\n    }\n    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideReset (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideToClosest (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var index = swiper.activeIndex;\n    var snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n    if (snapIndex < swiper.snapGrid.length - 1) {\n      var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n      var currentSnap = swiper.snapGrid[snapIndex];\n      var nextSnap = swiper.snapGrid[snapIndex + 1];\n\n      if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n        index = swiper.params.slidesPerGroup;\n      }\n    }\n\n    return swiper.slideTo(index, speed, runCallbacks, internal);\n  }\n\n  function slideToClickedSlide () {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n\n    var slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n    var slideToIndex = swiper.clickedIndex;\n    var realIndex;\n    if (params.loop) {\n      if (swiper.animating) { return; }\n      realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n      if (params.centeredSlides) {\n        if (\n          (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n          || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n        ) {\n          swiper.loopFix();\n          slideToIndex = $wrapperEl\n            .children((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + (params.slideDuplicateClass) + \")\"))\n            .eq(0)\n            .index();\n\n          Utils.nextTick(function () {\n            swiper.slideTo(slideToIndex);\n          });\n        } else {\n          swiper.slideTo(slideToIndex);\n        }\n      } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + (params.slideDuplicateClass) + \")\"))\n          .eq(0)\n          .index();\n\n        Utils.nextTick(function () {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n\n  var slide = {\n    slideTo: slideTo,\n    slideToLoop: slideToLoop,\n    slideNext: slideNext,\n    slidePrev: slidePrev,\n    slideReset: slideReset,\n    slideToClosest: slideToClosest,\n    slideToClickedSlide: slideToClickedSlide,\n  };\n\n  function loopCreate () {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    // Remove duplicated slides\n    $wrapperEl.children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass))).remove();\n\n    var slides = $wrapperEl.children((\".\" + (params.slideClass)));\n\n    if (params.loopFillGroupWithBlank) {\n      var blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n      if (blankSlidesNum !== params.slidesPerGroup) {\n        for (var i = 0; i < blankSlidesNum; i += 1) {\n          var blankNode = $(doc.createElement('div')).addClass(((params.slideClass) + \" \" + (params.slideBlankClass)));\n          $wrapperEl.append(blankNode);\n        }\n        slides = $wrapperEl.children((\".\" + (params.slideClass)));\n      }\n    }\n\n    if (params.slidesPerView === 'auto' && !params.loopedSlides) { params.loopedSlides = slides.length; }\n\n    swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n    swiper.loopedSlides += params.loopAdditionalSlides;\n    if (swiper.loopedSlides > slides.length) {\n      swiper.loopedSlides = slides.length;\n    }\n\n    var prependSlides = [];\n    var appendSlides = [];\n    slides.each(function (index, el) {\n      var slide = $(el);\n      if (index < swiper.loopedSlides) { appendSlides.push(el); }\n      if (index < slides.length && index >= slides.length - swiper.loopedSlides) { prependSlides.push(el); }\n      slide.attr('data-swiper-slide-index', index);\n    });\n    for (var i$1 = 0; i$1 < appendSlides.length; i$1 += 1) {\n      $wrapperEl.append($(appendSlides[i$1].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n    for (var i$2 = prependSlides.length - 1; i$2 >= 0; i$2 -= 1) {\n      $wrapperEl.prepend($(prependSlides[i$2].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n  }\n\n  function loopFix () {\n    var swiper = this;\n    var params = swiper.params;\n    var activeIndex = swiper.activeIndex;\n    var slides = swiper.slides;\n    var loopedSlides = swiper.loopedSlides;\n    var allowSlidePrev = swiper.allowSlidePrev;\n    var allowSlideNext = swiper.allowSlideNext;\n    var snapGrid = swiper.snapGrid;\n    var rtl = swiper.rtlTranslate;\n    var newIndex;\n    swiper.allowSlidePrev = true;\n    swiper.allowSlideNext = true;\n\n    var snapTranslate = -snapGrid[activeIndex];\n    var diff = snapTranslate - swiper.getTranslate();\n\n\n    // Fix For Negative Oversliding\n    if (activeIndex < loopedSlides) {\n      newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n      newIndex += loopedSlides;\n      var slideChanged = swiper.slideTo(newIndex, 0, false, true);\n      if (slideChanged && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n      // Fix For Positive Oversliding\n      newIndex = -slides.length + activeIndex + loopedSlides;\n      newIndex += loopedSlides;\n      var slideChanged$1 = swiper.slideTo(newIndex, 0, false, true);\n      if (slideChanged$1 && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n  }\n\n  function loopDestroy () {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    var slides = swiper.slides;\n    $wrapperEl.children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \",.\" + (params.slideClass) + \".\" + (params.slideBlankClass))).remove();\n    slides.removeAttr('data-swiper-slide-index');\n  }\n\n  var loop = {\n    loopCreate: loopCreate,\n    loopFix: loopFix,\n    loopDestroy: loopDestroy,\n  };\n\n  function setGrabCursor (moving) {\n    var swiper = this;\n    if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked) || swiper.params.cssMode) { return; }\n    var el = swiper.el;\n    el.style.cursor = 'move';\n    el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n    el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n    el.style.cursor = moving ? 'grabbing' : 'grab';\n  }\n\n  function unsetGrabCursor () {\n    var swiper = this;\n    if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked) || swiper.params.cssMode) { return; }\n    swiper.el.style.cursor = '';\n  }\n\n  var grabCursor = {\n    setGrabCursor: setGrabCursor,\n    unsetGrabCursor: unsetGrabCursor,\n  };\n\n  function appendSlide (slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) { $wrapperEl.append(slides[i]); }\n      }\n    } else {\n      $wrapperEl.append(slides);\n    }\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n  }\n\n  function prependSlide (slides) {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n    var newActiveIndex = activeIndex + 1;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) { $wrapperEl.prepend(slides[i]); }\n      }\n      newActiveIndex = activeIndex + slides.length;\n    } else {\n      $wrapperEl.prepend(slides);\n    }\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n\n  function addSlide (index, slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    var activeIndex = swiper.activeIndex;\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children((\".\" + (params.slideClass)));\n    }\n    var baseLength = swiper.slides.length;\n    if (index <= 0) {\n      swiper.prependSlide(slides);\n      return;\n    }\n    if (index >= baseLength) {\n      swiper.appendSlide(slides);\n      return;\n    }\n    var newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n    var slidesBuffer = [];\n    for (var i = baseLength - 1; i >= index; i -= 1) {\n      var currentSlide = swiper.slides.eq(i);\n      currentSlide.remove();\n      slidesBuffer.unshift(currentSlide);\n    }\n\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n        if (slides[i$1]) { $wrapperEl.append(slides[i$1]); }\n      }\n      newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n    } else {\n      $wrapperEl.append(slides);\n    }\n\n    for (var i$2 = 0; i$2 < slidesBuffer.length; i$2 += 1) {\n      $wrapperEl.append(slidesBuffer[i$2]);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeSlide (slidesIndexes) {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children((\".\" + (params.slideClass)));\n    }\n    var newActiveIndex = activeIndexBuffer;\n    var indexToRemove;\n\n    if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n      for (var i = 0; i < slidesIndexes.length; i += 1) {\n        indexToRemove = slidesIndexes[i];\n        if (swiper.slides[indexToRemove]) { swiper.slides.eq(indexToRemove).remove(); }\n        if (indexToRemove < newActiveIndex) { newActiveIndex -= 1; }\n      }\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    } else {\n      indexToRemove = slidesIndexes;\n      if (swiper.slides[indexToRemove]) { swiper.slides.eq(indexToRemove).remove(); }\n      if (indexToRemove < newActiveIndex) { newActiveIndex -= 1; }\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeAllSlides () {\n    var swiper = this;\n\n    var slidesIndexes = [];\n    for (var i = 0; i < swiper.slides.length; i += 1) {\n      slidesIndexes.push(i);\n    }\n    swiper.removeSlide(slidesIndexes);\n  }\n\n  var manipulation = {\n    appendSlide: appendSlide,\n    prependSlide: prependSlide,\n    addSlide: addSlide,\n    removeSlide: removeSlide,\n    removeAllSlides: removeAllSlides,\n  };\n\n  var Device = (function Device() {\n    var ua = win.navigator.userAgent;\n\n    var device = {\n      ios: false,\n      android: false,\n      androidChrome: false,\n      desktop: false,\n      windows: false,\n      iphone: false,\n      ipod: false,\n      ipad: false,\n      cordova: win.cordova || win.phonegap,\n      phonegap: win.cordova || win.phonegap,\n    };\n\n    var windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n    var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n    var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n    // Windows\n    if (windows) {\n      device.os = 'windows';\n      device.osVersion = windows[2];\n      device.windows = true;\n    }\n    // Android\n    if (android && !windows) {\n      device.os = 'android';\n      device.osVersion = android[2];\n      device.android = true;\n      device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n    }\n    if (ipad || iphone || ipod) {\n      device.os = 'ios';\n      device.ios = true;\n    }\n    // iOS\n    if (iphone && !ipod) {\n      device.osVersion = iphone[2].replace(/_/g, '.');\n      device.iphone = true;\n    }\n    if (ipad) {\n      device.osVersion = ipad[2].replace(/_/g, '.');\n      device.ipad = true;\n    }\n    if (ipod) {\n      device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n      device.iphone = true;\n    }\n    // iOS 8+ changed UA\n    if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n      if (device.osVersion.split('.')[0] === '10') {\n        device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n      }\n    }\n\n    // Desktop\n    device.desktop = !(device.os || device.android || device.webView);\n\n    // Webview\n    device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n    // Minimal UI\n    if (device.os && device.os === 'ios') {\n      var osVersionArr = device.osVersion.split('.');\n      var metaViewport = doc.querySelector('meta[name=\"viewport\"]');\n      device.minimalUi = !device.webView\n        && (ipod || iphone)\n        && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n        && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n    }\n\n    // Pixel Ratio\n    device.pixelRatio = win.devicePixelRatio || 1;\n\n    // Export object\n    return device;\n  }());\n\n  function onTouchStart (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return;\n    }\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    var $targetEl = $(e.target);\n\n    if (params.touchEventsTarget === 'wrapper') {\n      if (!$targetEl.closest(swiper.wrapperEl).length) { return; }\n    }\n    data.isTouchEvent = e.type === 'touchstart';\n    if (!data.isTouchEvent && 'which' in e && e.which === 3) { return; }\n    if (!data.isTouchEvent && 'button' in e && e.button > 0) { return; }\n    if (data.isTouched && data.isMoved) { return; }\n    if (params.noSwiping && $targetEl.closest(params.noSwipingSelector ? params.noSwipingSelector : (\".\" + (params.noSwipingClass)))[0]) {\n      swiper.allowClick = true;\n      return;\n    }\n    if (params.swipeHandler) {\n      if (!$targetEl.closest(params.swipeHandler)[0]) { return; }\n    }\n\n    touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    var startX = touches.currentX;\n    var startY = touches.currentY;\n\n    // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n    var edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n    var edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n    if (\n      edgeSwipeDetection\n      && ((startX <= edgeSwipeThreshold)\n      || (startX >= win.screen.width - edgeSwipeThreshold))\n    ) {\n      return;\n    }\n\n    Utils.extend(data, {\n      isTouched: true,\n      isMoved: false,\n      allowTouchCallbacks: true,\n      isScrolling: undefined,\n      startMoving: undefined,\n    });\n\n    touches.startX = startX;\n    touches.startY = startY;\n    data.touchStartTime = Utils.now();\n    swiper.allowClick = true;\n    swiper.updateSize();\n    swiper.swipeDirection = undefined;\n    if (params.threshold > 0) { data.allowThresholdMove = false; }\n    if (e.type !== 'touchstart') {\n      var preventDefault = true;\n      if ($targetEl.is(data.formElements)) { preventDefault = false; }\n      if (\n        doc.activeElement\n        && $(doc.activeElement).is(data.formElements)\n        && doc.activeElement !== $targetEl[0]\n      ) {\n        doc.activeElement.blur();\n      }\n\n      var shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n      if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n        e.preventDefault();\n      }\n    }\n    swiper.emit('touchStart', e);\n  }\n\n  function onTouchMove (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n    var rtl = swiper.rtlTranslate;\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    if (!data.isTouched) {\n      if (data.startMoving && data.isScrolling) {\n        swiper.emit('touchMoveOpposite', e);\n      }\n      return;\n    }\n    if (data.isTouchEvent && e.type === 'mousemove') { return; }\n    var pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    var pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n    if (e.preventedByNestedSwiper) {\n      touches.startX = pageX;\n      touches.startY = pageY;\n      return;\n    }\n    if (!swiper.allowTouchMove) {\n      // isMoved = true;\n      swiper.allowClick = false;\n      if (data.isTouched) {\n        Utils.extend(touches, {\n          startX: pageX,\n          startY: pageY,\n          currentX: pageX,\n          currentY: pageY,\n        });\n        data.touchStartTime = Utils.now();\n      }\n      return;\n    }\n    if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n      if (swiper.isVertical()) {\n        // Vertical\n        if (\n          (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n          || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n        ) {\n          data.isTouched = false;\n          data.isMoved = false;\n          return;\n        }\n      } else if (\n        (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n        || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n      ) {\n        return;\n      }\n    }\n    if (data.isTouchEvent && doc.activeElement) {\n      if (e.target === doc.activeElement && $(e.target).is(data.formElements)) {\n        data.isMoved = true;\n        swiper.allowClick = false;\n        return;\n      }\n    }\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchMove', e);\n    }\n    if (e.targetTouches && e.targetTouches.length > 1) { return; }\n\n    touches.currentX = pageX;\n    touches.currentY = pageY;\n\n    var diffX = touches.currentX - touches.startX;\n    var diffY = touches.currentY - touches.startY;\n    if (swiper.params.threshold && Math.sqrt((Math.pow( diffX, 2 )) + (Math.pow( diffY, 2 ))) < swiper.params.threshold) { return; }\n\n    if (typeof data.isScrolling === 'undefined') {\n      var touchAngle;\n      if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n        data.isScrolling = false;\n      } else {\n        // eslint-disable-next-line\n        if ((diffX * diffX) + (diffY * diffY) >= 25) {\n          touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n          data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n        }\n      }\n    }\n    if (data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    if (typeof data.startMoving === 'undefined') {\n      if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n        data.startMoving = true;\n      }\n    }\n    if (data.isScrolling) {\n      data.isTouched = false;\n      return;\n    }\n    if (!data.startMoving) {\n      return;\n    }\n    swiper.allowClick = false;\n    if (!params.cssMode) {\n      e.preventDefault();\n    }\n    if (params.touchMoveStopPropagation && !params.nested) {\n      e.stopPropagation();\n    }\n\n    if (!data.isMoved) {\n      if (params.loop) {\n        swiper.loopFix();\n      }\n      data.startTranslate = swiper.getTranslate();\n      swiper.setTransition(0);\n      if (swiper.animating) {\n        swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n      }\n      data.allowMomentumBounce = false;\n      // Grab Cursor\n      if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n        swiper.setGrabCursor(true);\n      }\n      swiper.emit('sliderFirstMove', e);\n    }\n    swiper.emit('sliderMove', e);\n    data.isMoved = true;\n\n    var diff = swiper.isHorizontal() ? diffX : diffY;\n    touches.diff = diff;\n\n    diff *= params.touchRatio;\n    if (rtl) { diff = -diff; }\n\n    swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n    data.currentTranslate = diff + data.startTranslate;\n\n    var disableParentSwiper = true;\n    var resistanceRatio = params.resistanceRatio;\n    if (params.touchReleaseOnEdges) {\n      resistanceRatio = 0;\n    }\n    if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n      disableParentSwiper = false;\n      if (params.resistance) { data.currentTranslate = (swiper.minTranslate() - 1) + (Math.pow( (-swiper.minTranslate() + data.startTranslate + diff), resistanceRatio )); }\n    } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) { data.currentTranslate = (swiper.maxTranslate() + 1) - (Math.pow( (swiper.maxTranslate() - data.startTranslate - diff), resistanceRatio )); }\n    }\n\n    if (disableParentSwiper) {\n      e.preventedByNestedSwiper = true;\n    }\n\n    // Directions locks\n    if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n    if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n\n\n    // Threshold\n    if (params.threshold > 0) {\n      if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n        if (!data.allowThresholdMove) {\n          data.allowThresholdMove = true;\n          touches.startX = touches.currentX;\n          touches.startY = touches.currentY;\n          data.currentTranslate = data.startTranslate;\n          touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n          return;\n        }\n      } else {\n        data.currentTranslate = data.startTranslate;\n        return;\n      }\n    }\n\n    if (!params.followFinger || params.cssMode) { return; }\n\n    // Update active index in free mode\n    if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    if (params.freeMode) {\n      // Velocity\n      if (data.velocities.length === 0) {\n        data.velocities.push({\n          position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n          time: data.touchStartTime,\n        });\n      }\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n        time: Utils.now(),\n      });\n    }\n    // Update progress\n    swiper.updateProgress(data.currentTranslate);\n    // Update translate\n    swiper.setTranslate(data.currentTranslate);\n  }\n\n  function onTouchEnd (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n\n    var params = swiper.params;\n    var touches = swiper.touches;\n    var rtl = swiper.rtlTranslate;\n    var $wrapperEl = swiper.$wrapperEl;\n    var slidesGrid = swiper.slidesGrid;\n    var snapGrid = swiper.snapGrid;\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchEnd', e);\n    }\n    data.allowTouchCallbacks = false;\n    if (!data.isTouched) {\n      if (data.isMoved && params.grabCursor) {\n        swiper.setGrabCursor(false);\n      }\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n    // Return Grab Cursor\n    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(false);\n    }\n\n    // Time diff\n    var touchEndTime = Utils.now();\n    var timeDiff = touchEndTime - data.touchStartTime;\n\n    // Tap, doubleTap, Click\n    if (swiper.allowClick) {\n      swiper.updateClickedSlide(e);\n      swiper.emit('tap click', e);\n      if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n        swiper.emit('doubleTap doubleClick', e);\n      }\n    }\n\n    data.lastClickTime = Utils.now();\n    Utils.nextTick(function () {\n      if (!swiper.destroyed) { swiper.allowClick = true; }\n    });\n\n    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n      data.isTouched = false;\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n\n    var currentPos;\n    if (params.followFinger) {\n      currentPos = rtl ? swiper.translate : -swiper.translate;\n    } else {\n      currentPos = -data.currentTranslate;\n    }\n\n    if (params.cssMode) {\n      return;\n    }\n\n    if (params.freeMode) {\n      if (currentPos < -swiper.minTranslate()) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (currentPos > -swiper.maxTranslate()) {\n        if (swiper.slides.length < snapGrid.length) {\n          swiper.slideTo(snapGrid.length - 1);\n        } else {\n          swiper.slideTo(swiper.slides.length - 1);\n        }\n        return;\n      }\n\n      if (params.freeModeMomentum) {\n        if (data.velocities.length > 1) {\n          var lastMoveEvent = data.velocities.pop();\n          var velocityEvent = data.velocities.pop();\n\n          var distance = lastMoveEvent.position - velocityEvent.position;\n          var time = lastMoveEvent.time - velocityEvent.time;\n          swiper.velocity = distance / time;\n          swiper.velocity /= 2;\n          if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n            swiper.velocity = 0;\n          }\n          // this implies that the user stopped moving a finger then released.\n          // There would be no events with distance zero, so the last event is stale.\n          if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n            swiper.velocity = 0;\n          }\n        } else {\n          swiper.velocity = 0;\n        }\n        swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n        data.velocities.length = 0;\n        var momentumDuration = 1000 * params.freeModeMomentumRatio;\n        var momentumDistance = swiper.velocity * momentumDuration;\n\n        var newPosition = swiper.translate + momentumDistance;\n        if (rtl) { newPosition = -newPosition; }\n\n        var doBounce = false;\n        var afterBouncePosition;\n        var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n        var needsLoopFix;\n        if (newPosition < swiper.maxTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n              newPosition = swiper.maxTranslate() - bounceAmount;\n            }\n            afterBouncePosition = swiper.maxTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.maxTranslate();\n          }\n          if (params.loop && params.centeredSlides) { needsLoopFix = true; }\n        } else if (newPosition > swiper.minTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition - swiper.minTranslate() > bounceAmount) {\n              newPosition = swiper.minTranslate() + bounceAmount;\n            }\n            afterBouncePosition = swiper.minTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.minTranslate();\n          }\n          if (params.loop && params.centeredSlides) { needsLoopFix = true; }\n        } else if (params.freeModeSticky) {\n          var nextSlide;\n          for (var j = 0; j < snapGrid.length; j += 1) {\n            if (snapGrid[j] > -newPosition) {\n              nextSlide = j;\n              break;\n            }\n          }\n\n          if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n            newPosition = snapGrid[nextSlide];\n          } else {\n            newPosition = snapGrid[nextSlide - 1];\n          }\n          newPosition = -newPosition;\n        }\n        if (needsLoopFix) {\n          swiper.once('transitionEnd', function () {\n            swiper.loopFix();\n          });\n        }\n        // Fix duration\n        if (swiper.velocity !== 0) {\n          if (rtl) {\n            momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n          } else {\n            momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n          }\n        } else if (params.freeModeSticky) {\n          swiper.slideToClosest();\n          return;\n        }\n\n        if (params.freeModeMomentumBounce && doBounce) {\n          swiper.updateProgress(afterBouncePosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(function () {\n            if (!swiper || swiper.destroyed || !data.allowMomentumBounce) { return; }\n            swiper.emit('momentumBounce');\n\n            swiper.setTransition(params.speed);\n            swiper.setTranslate(afterBouncePosition);\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) { return; }\n              swiper.transitionEnd();\n            });\n          });\n        } else if (swiper.velocity) {\n          swiper.updateProgress(newPosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          if (!swiper.animating) {\n            swiper.animating = true;\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) { return; }\n              swiper.transitionEnd();\n            });\n          }\n        } else {\n          swiper.updateProgress(newPosition);\n        }\n\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      return;\n    }\n\n    // Find current slide\n    var stopIndex = 0;\n    var groupSize = swiper.slidesSizesGrid[0];\n    for (var i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n      if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n        if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n          stopIndex = i;\n          groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n        }\n      } else if (currentPos >= slidesGrid[i]) {\n        stopIndex = i;\n        groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n      }\n    }\n\n    // Find current slide size\n    var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n    if (timeDiff > params.longSwipesMs) {\n      // Long touches\n      if (!params.longSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (swiper.swipeDirection === 'next') {\n        if (ratio >= params.longSwipesRatio) { swiper.slideTo(stopIndex + params.slidesPerGroup); }\n        else { swiper.slideTo(stopIndex); }\n      }\n      if (swiper.swipeDirection === 'prev') {\n        if (ratio > (1 - params.longSwipesRatio)) { swiper.slideTo(stopIndex + params.slidesPerGroup); }\n        else { swiper.slideTo(stopIndex); }\n      }\n    } else {\n      // Short swipes\n      if (!params.shortSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(stopIndex + params.slidesPerGroup);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  }\n\n  function onResize () {\n    var swiper = this;\n\n    var params = swiper.params;\n    var el = swiper.el;\n\n    if (el && el.offsetWidth === 0) { return; }\n\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Save locks\n    var allowSlideNext = swiper.allowSlideNext;\n    var allowSlidePrev = swiper.allowSlidePrev;\n    var snapGrid = swiper.snapGrid;\n\n    // Disable locks on resize\n    swiper.allowSlideNext = true;\n    swiper.allowSlidePrev = true;\n\n    swiper.updateSize();\n    swiper.updateSlides();\n\n    if (params.freeMode) {\n      var newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      swiper.updateSlidesClasses();\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n    }\n    if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n      swiper.autoplay.run();\n    }\n    // Return locks after resize\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n\n    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n  }\n\n  function onClick (e) {\n    var swiper = this;\n    if (!swiper.allowClick) {\n      if (swiper.params.preventClicks) { e.preventDefault(); }\n      if (swiper.params.preventClicksPropagation && swiper.animating) {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  function onScroll () {\n    var swiper = this;\n    var wrapperEl = swiper.wrapperEl;\n    swiper.previousTranslate = swiper.translate;\n    swiper.translate = swiper.isHorizontal() ? -wrapperEl.scrollLeft : -wrapperEl.scrollTop;\n    // eslint-disable-next-line\n    if (swiper.translate === -0) { swiper.translate = 0; }\n\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (swiper.translate - swiper.minTranslate()) / (translatesDiff);\n    }\n    if (newProgress !== swiper.progress) {\n      swiper.updateProgress(swiper.translate);\n    }\n\n    swiper.emit('setTranslate', swiper.translate, false);\n  }\n\n  function attachEvents() {\n    var swiper = this;\n    var params = swiper.params;\n    var touchEvents = swiper.touchEvents;\n    var el = swiper.el;\n    var wrapperEl = swiper.wrapperEl;\n\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n    if (params.cssMode) {\n      swiper.onScroll = onScroll.bind(swiper);\n    }\n\n    swiper.onClick = onClick.bind(swiper);\n\n    var capture = !!params.nested;\n\n    // Touch Events\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      el.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      doc.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      doc.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        var passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        el.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        el.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture: capture } : capture);\n        el.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n        if (touchEvents.cancel) {\n          el.addEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n        }\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        el.addEventListener('mousedown', swiper.onTouchStart, false);\n        doc.addEventListener('mousemove', swiper.onTouchMove, capture);\n        doc.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      el.addEventListener('click', swiper.onClick, true);\n    }\n    if (params.cssMode) {\n      wrapperEl.addEventListener('scroll', swiper.onScroll);\n    }\n\n    // Resize handler\n    swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n  }\n\n  function detachEvents() {\n    var swiper = this;\n\n    var params = swiper.params;\n    var touchEvents = swiper.touchEvents;\n    var el = swiper.el;\n    var wrapperEl = swiper.wrapperEl;\n\n    var capture = !!params.nested;\n\n    // Touch Events\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      el.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      doc.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      doc.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        var passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        el.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        el.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        el.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n        if (touchEvents.cancel) {\n          el.removeEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n        }\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        el.removeEventListener('mousedown', swiper.onTouchStart, false);\n        doc.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        doc.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      el.removeEventListener('click', swiper.onClick, true);\n    }\n\n    if (params.cssMode) {\n      wrapperEl.removeEventListener('scroll', swiper.onScroll);\n    }\n\n    // Resize handler\n    swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n  }\n\n  var events = {\n    attachEvents: attachEvents,\n    detachEvents: detachEvents,\n  };\n\n  function setBreakpoint () {\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var initialized = swiper.initialized;\n    var loopedSlides = swiper.loopedSlides; if ( loopedSlides === void 0 ) loopedSlides = 0;\n    var params = swiper.params;\n    var $el = swiper.$el;\n    var breakpoints = params.breakpoints;\n    if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) { return; }\n\n    // Get breakpoint for window width and update parameters\n    var breakpoint = swiper.getBreakpoint(breakpoints);\n\n    if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n      var breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n      if (breakpointOnlyParams) {\n        ['slidesPerView', 'spaceBetween', 'slidesPerGroup', 'slidesPerColumn'].forEach(function (param) {\n          var paramValue = breakpointOnlyParams[param];\n          if (typeof paramValue === 'undefined') { return; }\n          if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n            breakpointOnlyParams[param] = 'auto';\n          } else if (param === 'slidesPerView') {\n            breakpointOnlyParams[param] = parseFloat(paramValue);\n          } else {\n            breakpointOnlyParams[param] = parseInt(paramValue, 10);\n          }\n        });\n      }\n\n      var breakpointParams = breakpointOnlyParams || swiper.originalParams;\n      var wasMultiRow = params.slidesPerColumn > 1;\n      var isMultiRow = breakpointParams.slidesPerColumn > 1;\n      if (wasMultiRow && !isMultiRow) {\n        $el.removeClass(((params.containerModifierClass) + \"multirow \" + (params.containerModifierClass) + \"multirow-column\"));\n      } else if (!wasMultiRow && isMultiRow) {\n        $el.addClass(((params.containerModifierClass) + \"multirow\"));\n        if (breakpointParams.slidesPerColumnFill === 'column') {\n          $el.addClass(((params.containerModifierClass) + \"multirow-column\"));\n        }\n      }\n\n      var directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n      var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n      if (directionChanged && initialized) {\n        swiper.changeDirection();\n      }\n\n      Utils.extend(swiper.params, breakpointParams);\n\n      Utils.extend(swiper, {\n        allowTouchMove: swiper.params.allowTouchMove,\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n      });\n\n      swiper.currentBreakpoint = breakpoint;\n\n      if (needsReLoop && initialized) {\n        swiper.loopDestroy();\n        swiper.loopCreate();\n        swiper.updateSlides();\n        swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n      }\n\n      swiper.emit('breakpoint', breakpointParams);\n    }\n  }\n\n  function getBreakpoint (breakpoints) {\n    // Get breakpoint for window width\n    if (!breakpoints) { return undefined; }\n    var breakpoint = false;\n    var points = [];\n    Object.keys(breakpoints).forEach(function (point) {\n      points.push(point);\n    });\n    points.sort(function (a, b) { return parseInt(a, 10) - parseInt(b, 10); });\n    for (var i = 0; i < points.length; i += 1) {\n      var point = points[i];\n      if (point <= win.innerWidth) {\n        breakpoint = point;\n      }\n    }\n    return breakpoint || 'max';\n  }\n\n  var breakpoints = { setBreakpoint: setBreakpoint, getBreakpoint: getBreakpoint };\n\n  function addClasses () {\n    var swiper = this;\n    var classNames = swiper.classNames;\n    var params = swiper.params;\n    var rtl = swiper.rtl;\n    var $el = swiper.$el;\n    var suffixes = [];\n\n    suffixes.push('initialized');\n    suffixes.push(params.direction);\n\n    if (params.freeMode) {\n      suffixes.push('free-mode');\n    }\n    if (params.autoHeight) {\n      suffixes.push('autoheight');\n    }\n    if (rtl) {\n      suffixes.push('rtl');\n    }\n    if (params.slidesPerColumn > 1) {\n      suffixes.push('multirow');\n      if (params.slidesPerColumnFill === 'column') {\n        suffixes.push('multirow-column');\n      }\n    }\n    if (Device.android) {\n      suffixes.push('android');\n    }\n    if (Device.ios) {\n      suffixes.push('ios');\n    }\n\n    if (params.cssMode) {\n      suffixes.push('css-mode');\n    }\n\n    suffixes.forEach(function (suffix) {\n      classNames.push(params.containerModifierClass + suffix);\n    });\n\n    $el.addClass(classNames.join(' '));\n  }\n\n  function removeClasses () {\n    var swiper = this;\n    var $el = swiper.$el;\n    var classNames = swiper.classNames;\n\n    $el.removeClass(classNames.join(' '));\n  }\n\n  var classes = { addClasses: addClasses, removeClasses: removeClasses };\n\n  function loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n    var image;\n    function onReady() {\n      if (callback) { callback(); }\n    }\n    if (!imageEl.complete || !checkForComplete) {\n      if (src) {\n        image = new win.Image();\n        image.onload = onReady;\n        image.onerror = onReady;\n        if (sizes) {\n          image.sizes = sizes;\n        }\n        if (srcset) {\n          image.srcset = srcset;\n        }\n        if (src) {\n          image.src = src;\n        }\n      } else {\n        onReady();\n      }\n    } else {\n      // image already loaded...\n      onReady();\n    }\n  }\n\n  function preloadImages () {\n    var swiper = this;\n    swiper.imagesToLoad = swiper.$el.find('img');\n    function onReady() {\n      if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) { return; }\n      if (swiper.imagesLoaded !== undefined) { swiper.imagesLoaded += 1; }\n      if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n        if (swiper.params.updateOnImagesReady) { swiper.update(); }\n        swiper.emit('imagesReady');\n      }\n    }\n    for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {\n      var imageEl = swiper.imagesToLoad[i];\n      swiper.loadImage(\n        imageEl,\n        imageEl.currentSrc || imageEl.getAttribute('src'),\n        imageEl.srcset || imageEl.getAttribute('srcset'),\n        imageEl.sizes || imageEl.getAttribute('sizes'),\n        true,\n        onReady\n      );\n    }\n  }\n\n  var images = {\n    loadImage: loadImage,\n    preloadImages: preloadImages,\n  };\n\n  function checkOverflow() {\n    var swiper = this;\n    var wasLocked = swiper.isLocked;\n\n    swiper.isLocked = swiper.snapGrid.length === 1;\n    swiper.allowSlideNext = !swiper.isLocked;\n    swiper.allowSlidePrev = !swiper.isLocked;\n\n    // events\n    if (wasLocked !== swiper.isLocked) { swiper.emit(swiper.isLocked ? 'lock' : 'unlock'); }\n\n    if (wasLocked && wasLocked !== swiper.isLocked) {\n      swiper.isEnd = false;\n      swiper.navigation.update();\n    }\n  }\n\n  var checkOverflow$1 = { checkOverflow: checkOverflow };\n\n  var defaults = {\n    init: true,\n    direction: 'horizontal',\n    touchEventsTarget: 'container',\n    initialSlide: 0,\n    speed: 300,\n    cssMode: false,\n    //\n    preventInteractionOnTransition: false,\n\n    // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n    edgeSwipeDetection: false,\n    edgeSwipeThreshold: 20,\n\n    // Free mode\n    freeMode: false,\n    freeModeMomentum: true,\n    freeModeMomentumRatio: 1,\n    freeModeMomentumBounce: true,\n    freeModeMomentumBounceRatio: 1,\n    freeModeMomentumVelocityRatio: 1,\n    freeModeSticky: false,\n    freeModeMinimumVelocity: 0.02,\n\n    // Autoheight\n    autoHeight: false,\n\n    // Set wrapper width\n    setWrapperSize: false,\n\n    // Virtual Translate\n    virtualTranslate: false,\n\n    // Effects\n    effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n    // Breakpoints\n    breakpoints: undefined,\n\n    // Slides grid\n    spaceBetween: 0,\n    slidesPerView: 1,\n    slidesPerColumn: 1,\n    slidesPerColumnFill: 'column',\n    slidesPerGroup: 1,\n    centeredSlides: false,\n    slidesOffsetBefore: 0, // in px\n    slidesOffsetAfter: 0, // in px\n    normalizeSlideIndex: true,\n    centerInsufficientSlides: false,\n\n    // Disable swiper and hide navigation when container not overflow\n    watchOverflow: false,\n\n    // Round length\n    roundLengths: false,\n\n    // Touches\n    touchRatio: 1,\n    touchAngle: 45,\n    simulateTouch: true,\n    shortSwipes: true,\n    longSwipes: true,\n    longSwipesRatio: 0.5,\n    longSwipesMs: 300,\n    followFinger: true,\n    allowTouchMove: true,\n    threshold: 0,\n    touchMoveStopPropagation: false,\n    touchStartPreventDefault: true,\n    touchStartForcePreventDefault: false,\n    touchReleaseOnEdges: false,\n\n    // Unique Navigation Elements\n    uniqueNavElements: true,\n\n    // Resistance\n    resistance: true,\n    resistanceRatio: 0.85,\n\n    // Progress\n    watchSlidesProgress: false,\n    watchSlidesVisibility: false,\n\n    // Cursor\n    grabCursor: false,\n\n    // Clicks\n    preventClicks: true,\n    preventClicksPropagation: true,\n    slideToClickedSlide: false,\n\n    // Images\n    preloadImages: true,\n    updateOnImagesReady: true,\n\n    // loop\n    loop: false,\n    loopAdditionalSlides: 0,\n    loopedSlides: null,\n    loopFillGroupWithBlank: false,\n\n    // Swiping/no swiping\n    allowSlidePrev: true,\n    allowSlideNext: true,\n    swipeHandler: null, // '.swipe-handler',\n    noSwiping: true,\n    noSwipingClass: 'swiper-no-swiping',\n    noSwipingSelector: null,\n\n    // Passive Listeners\n    passiveListeners: true,\n\n    // NS\n    containerModifierClass: 'swiper-container-', // NEW\n    slideClass: 'swiper-slide',\n    slideBlankClass: 'swiper-slide-invisible-blank',\n    slideActiveClass: 'swiper-slide-active',\n    slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n    slideVisibleClass: 'swiper-slide-visible',\n    slideDuplicateClass: 'swiper-slide-duplicate',\n    slideNextClass: 'swiper-slide-next',\n    slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n    slidePrevClass: 'swiper-slide-prev',\n    slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n    wrapperClass: 'swiper-wrapper',\n\n    // Callbacks\n    runCallbacksOnInit: true,\n  };\n\n  /* eslint no-param-reassign: \"off\" */\n\n  var prototypes = {\n    update: update,\n    translate: translate,\n    transition: transition$1,\n    slide: slide,\n    loop: loop,\n    grabCursor: grabCursor,\n    manipulation: manipulation,\n    events: events,\n    breakpoints: breakpoints,\n    checkOverflow: checkOverflow$1,\n    classes: classes,\n    images: images,\n  };\n\n  var extendedDefaults = {};\n\n  var Swiper = /*@__PURE__*/(function (SwiperClass) {\n    function Swiper() {\n      var assign;\n\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n      var el;\n      var params;\n      if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n        params = args[0];\n      } else {\n        (assign = args, el = assign[0], params = assign[1]);\n      }\n      if (!params) { params = {}; }\n\n      params = Utils.extend({}, params);\n      if (el && !params.el) { params.el = el; }\n\n      SwiperClass.call(this, params);\n\n      Object.keys(prototypes).forEach(function (prototypeGroup) {\n        Object.keys(prototypes[prototypeGroup]).forEach(function (protoMethod) {\n          if (!Swiper.prototype[protoMethod]) {\n            Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n          }\n        });\n      });\n\n      // Swiper Instance\n      var swiper = this;\n      if (typeof swiper.modules === 'undefined') {\n        swiper.modules = {};\n      }\n      Object.keys(swiper.modules).forEach(function (moduleName) {\n        var module = swiper.modules[moduleName];\n        if (module.params) {\n          var moduleParamName = Object.keys(module.params)[0];\n          var moduleParams = module.params[moduleParamName];\n          if (typeof moduleParams !== 'object' || moduleParams === null) { return; }\n          if (!(moduleParamName in params && 'enabled' in moduleParams)) { return; }\n          if (params[moduleParamName] === true) {\n            params[moduleParamName] = { enabled: true };\n          }\n          if (\n            typeof params[moduleParamName] === 'object'\n            && !('enabled' in params[moduleParamName])\n          ) {\n            params[moduleParamName].enabled = true;\n          }\n          if (!params[moduleParamName]) { params[moduleParamName] = { enabled: false }; }\n        }\n      });\n\n      // Extend defaults with modules params\n      var swiperParams = Utils.extend({}, defaults);\n      swiper.useModulesParams(swiperParams);\n\n      // Extend defaults with passed params\n      swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n      swiper.originalParams = Utils.extend({}, swiper.params);\n      swiper.passedParams = Utils.extend({}, params);\n\n      // Save Dom lib\n      swiper.$ = $;\n\n      // Find el\n      var $el = $(swiper.params.el);\n      el = $el[0];\n\n      if (!el) {\n        return undefined;\n      }\n\n      if ($el.length > 1) {\n        var swipers = [];\n        $el.each(function (index, containerEl) {\n          var newParams = Utils.extend({}, params, { el: containerEl });\n          swipers.push(new Swiper(newParams));\n        });\n        return swipers;\n      }\n\n      el.swiper = swiper;\n      $el.data('swiper', swiper);\n\n      // Find Wrapper\n      var $wrapperEl;\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        $wrapperEl = $(el.shadowRoot.querySelector((\".\" + (swiper.params.wrapperClass))));\n        // Children needs to return slot items\n        $wrapperEl.children = function (options) { return $el.children(options); };\n      } else {\n        $wrapperEl = $el.children((\".\" + (swiper.params.wrapperClass)));\n      }\n      // Extend Swiper\n      Utils.extend(swiper, {\n        $el: $el,\n        el: el,\n        $wrapperEl: $wrapperEl,\n        wrapperEl: $wrapperEl[0],\n\n        // Classes\n        classNames: [],\n\n        // Slides\n        slides: $(),\n        slidesGrid: [],\n        snapGrid: [],\n        slidesSizesGrid: [],\n\n        // isDirection\n        isHorizontal: function isHorizontal() {\n          return swiper.params.direction === 'horizontal';\n        },\n        isVertical: function isVertical() {\n          return swiper.params.direction === 'vertical';\n        },\n        // RTL\n        rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n        // Indexes\n        activeIndex: 0,\n        realIndex: 0,\n\n        //\n        isBeginning: true,\n        isEnd: false,\n\n        // Props\n        translate: 0,\n        previousTranslate: 0,\n        progress: 0,\n        velocity: 0,\n        animating: false,\n\n        // Locks\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n\n        // Touch Events\n        touchEvents: (function touchEvents() {\n          var touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n          var desktop = ['mousedown', 'mousemove', 'mouseup'];\n          if (Support.pointerEvents) {\n            desktop = ['pointerdown', 'pointermove', 'pointerup'];\n          } else if (Support.prefixedPointerEvents) {\n            desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n          }\n          swiper.touchEventsTouch = {\n            start: touch[0],\n            move: touch[1],\n            end: touch[2],\n            cancel: touch[3],\n          };\n          swiper.touchEventsDesktop = {\n            start: desktop[0],\n            move: desktop[1],\n            end: desktop[2],\n          };\n          return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n        }()),\n        touchEventsData: {\n          isTouched: undefined,\n          isMoved: undefined,\n          allowTouchCallbacks: undefined,\n          touchStartTime: undefined,\n          isScrolling: undefined,\n          currentTranslate: undefined,\n          startTranslate: undefined,\n          allowThresholdMove: undefined,\n          // Form elements to match\n          formElements: 'input, select, option, textarea, button, video',\n          // Last click time\n          lastClickTime: Utils.now(),\n          clickTimeout: undefined,\n          // Velocities\n          velocities: [],\n          allowMomentumBounce: undefined,\n          isTouchEvent: undefined,\n          startMoving: undefined,\n        },\n\n        // Clicks\n        allowClick: true,\n\n        // Touches\n        allowTouchMove: swiper.params.allowTouchMove,\n\n        touches: {\n          startX: 0,\n          startY: 0,\n          currentX: 0,\n          currentY: 0,\n          diff: 0,\n        },\n\n        // Images\n        imagesToLoad: [],\n        imagesLoaded: 0,\n\n      });\n\n      // Install Modules\n      swiper.useModules();\n\n      // Init\n      if (swiper.params.init) {\n        swiper.init();\n      }\n\n      // Return app instance\n      return swiper;\n    }\n\n    if ( SwiperClass ) Swiper.__proto__ = SwiperClass;\n    Swiper.prototype = Object.create( SwiperClass && SwiperClass.prototype );\n    Swiper.prototype.constructor = Swiper;\n\n    var staticAccessors = { extendedDefaults: { configurable: true },defaults: { configurable: true },Class: { configurable: true },$: { configurable: true } };\n\n    Swiper.prototype.slidesPerViewDynamic = function slidesPerViewDynamic () {\n      var swiper = this;\n      var params = swiper.params;\n      var slides = swiper.slides;\n      var slidesGrid = swiper.slidesGrid;\n      var swiperSize = swiper.size;\n      var activeIndex = swiper.activeIndex;\n      var spv = 1;\n      if (params.centeredSlides) {\n        var slideSize = slides[activeIndex].swiperSlideSize;\n        var breakLoop;\n        for (var i = activeIndex + 1; i < slides.length; i += 1) {\n          if (slides[i] && !breakLoop) {\n            slideSize += slides[i].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) { breakLoop = true; }\n          }\n        }\n        for (var i$1 = activeIndex - 1; i$1 >= 0; i$1 -= 1) {\n          if (slides[i$1] && !breakLoop) {\n            slideSize += slides[i$1].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) { breakLoop = true; }\n          }\n        }\n      } else {\n        for (var i$2 = activeIndex + 1; i$2 < slides.length; i$2 += 1) {\n          if (slidesGrid[i$2] - slidesGrid[activeIndex] < swiperSize) {\n            spv += 1;\n          }\n        }\n      }\n      return spv;\n    };\n\n    Swiper.prototype.update = function update () {\n      var swiper = this;\n      if (!swiper || swiper.destroyed) { return; }\n      var snapGrid = swiper.snapGrid;\n      var params = swiper.params;\n      // Breakpoints\n      if (params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n      swiper.updateSize();\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n\n      function setTranslate() {\n        var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n        var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n        swiper.setTranslate(newTranslate);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      var translated;\n      if (swiper.params.freeMode) {\n        setTranslate();\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      } else {\n        if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n          translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n        } else {\n          translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n        }\n        if (!translated) {\n          setTranslate();\n        }\n      }\n      if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n        swiper.checkOverflow();\n      }\n      swiper.emit('update');\n    };\n\n    Swiper.prototype.changeDirection = function changeDirection (newDirection, needUpdate) {\n      if ( needUpdate === void 0 ) needUpdate = true;\n\n      var swiper = this;\n      var currentDirection = swiper.params.direction;\n      if (!newDirection) {\n        // eslint-disable-next-line\n        newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n      }\n      if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n        return swiper;\n      }\n\n      swiper.$el\n        .removeClass((\"\" + (swiper.params.containerModifierClass) + currentDirection))\n        .addClass((\"\" + (swiper.params.containerModifierClass) + newDirection));\n\n      swiper.params.direction = newDirection;\n\n      swiper.slides.each(function (slideIndex, slideEl) {\n        if (newDirection === 'vertical') {\n          slideEl.style.width = '';\n        } else {\n          slideEl.style.height = '';\n        }\n      });\n\n      swiper.emit('changeDirection');\n      if (needUpdate) { swiper.update(); }\n\n      return swiper;\n    };\n\n    Swiper.prototype.init = function init () {\n      var swiper = this;\n      if (swiper.initialized) { return; }\n\n      swiper.emit('beforeInit');\n\n      // Set breakpoint\n      if (swiper.params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n\n      // Add Classes\n      swiper.addClasses();\n\n      // Create loop\n      if (swiper.params.loop) {\n        swiper.loopCreate();\n      }\n\n      // Update size\n      swiper.updateSize();\n\n      // Update slides\n      swiper.updateSlides();\n\n      if (swiper.params.watchOverflow) {\n        swiper.checkOverflow();\n      }\n\n      // Set Grab Cursor\n      if (swiper.params.grabCursor) {\n        swiper.setGrabCursor();\n      }\n\n      if (swiper.params.preloadImages) {\n        swiper.preloadImages();\n      }\n\n      // Slide To Initial Slide\n      if (swiper.params.loop) {\n        swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n      } else {\n        swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n      }\n\n      // Attach events\n      swiper.attachEvents();\n\n      // Init Flag\n      swiper.initialized = true;\n\n      // Emit\n      swiper.emit('init');\n    };\n\n    Swiper.prototype.destroy = function destroy (deleteInstance, cleanStyles) {\n      if ( deleteInstance === void 0 ) deleteInstance = true;\n      if ( cleanStyles === void 0 ) cleanStyles = true;\n\n      var swiper = this;\n      var params = swiper.params;\n      var $el = swiper.$el;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slides = swiper.slides;\n\n      if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n        return null;\n      }\n\n      swiper.emit('beforeDestroy');\n\n      // Init Flag\n      swiper.initialized = false;\n\n      // Detach events\n      swiper.detachEvents();\n\n      // Destroy loop\n      if (params.loop) {\n        swiper.loopDestroy();\n      }\n\n      // Cleanup styles\n      if (cleanStyles) {\n        swiper.removeClasses();\n        $el.removeAttr('style');\n        $wrapperEl.removeAttr('style');\n        if (slides && slides.length) {\n          slides\n            .removeClass([\n              params.slideVisibleClass,\n              params.slideActiveClass,\n              params.slideNextClass,\n              params.slidePrevClass ].join(' '))\n            .removeAttr('style')\n            .removeAttr('data-swiper-slide-index');\n        }\n      }\n\n      swiper.emit('destroy');\n\n      // Detach emitter events\n      Object.keys(swiper.eventsListeners).forEach(function (eventName) {\n        swiper.off(eventName);\n      });\n\n      if (deleteInstance !== false) {\n        swiper.$el[0].swiper = null;\n        swiper.$el.data('swiper', null);\n        Utils.deleteProps(swiper);\n      }\n      swiper.destroyed = true;\n\n      return null;\n    };\n\n    Swiper.extendDefaults = function extendDefaults (newDefaults) {\n      Utils.extend(extendedDefaults, newDefaults);\n    };\n\n    staticAccessors.extendedDefaults.get = function () {\n      return extendedDefaults;\n    };\n\n    staticAccessors.defaults.get = function () {\n      return defaults;\n    };\n\n    staticAccessors.Class.get = function () {\n      return SwiperClass;\n    };\n\n    staticAccessors.$.get = function () {\n      return $;\n    };\n\n    Object.defineProperties( Swiper, staticAccessors );\n\n    return Swiper;\n  }(SwiperClass));\n\n  var Device$1 = {\n    name: 'device',\n    proto: {\n      device: Device,\n    },\n    static: {\n      device: Device,\n    },\n  };\n\n  var Support$1 = {\n    name: 'support',\n    proto: {\n      support: Support,\n    },\n    static: {\n      support: Support,\n    },\n  };\n\n  var Browser = (function Browser() {\n    function isSafari() {\n      var ua = win.navigator.userAgent.toLowerCase();\n      return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n    }\n    return {\n      isEdge: !!win.navigator.userAgent.match(/Edge/g),\n      isSafari: isSafari(),\n      isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(win.navigator.userAgent),\n    };\n  }());\n\n  var Browser$1 = {\n    name: 'browser',\n    proto: {\n      browser: Browser,\n    },\n    static: {\n      browser: Browser,\n    },\n  };\n\n  var Resize = {\n    name: 'resize',\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        resize: {\n          resizeHandler: function resizeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) { return; }\n            swiper.emit('beforeResize');\n            swiper.emit('resize');\n          },\n          orientationChangeHandler: function orientationChangeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) { return; }\n            swiper.emit('orientationchange');\n          },\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        // Emit resize\n        win.addEventListener('resize', swiper.resize.resizeHandler);\n\n        // Emit orientationchange\n        win.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        win.removeEventListener('resize', swiper.resize.resizeHandler);\n        win.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n    },\n  };\n\n  var Observer = {\n    func: win.MutationObserver || win.WebkitMutationObserver,\n    attach: function attach(target, options) {\n      if ( options === void 0 ) options = {};\n\n      var swiper = this;\n\n      var ObserverFunc = Observer.func;\n      var observer = new ObserverFunc(function (mutations) {\n        // The observerUpdate event should only be triggered\n        // once despite the number of mutations.  Additional\n        // triggers are redundant and are very costly\n        if (mutations.length === 1) {\n          swiper.emit('observerUpdate', mutations[0]);\n          return;\n        }\n        var observerUpdate = function observerUpdate() {\n          swiper.emit('observerUpdate', mutations[0]);\n        };\n\n        if (win.requestAnimationFrame) {\n          win.requestAnimationFrame(observerUpdate);\n        } else {\n          win.setTimeout(observerUpdate, 0);\n        }\n      });\n\n      observer.observe(target, {\n        attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n        childList: typeof options.childList === 'undefined' ? true : options.childList,\n        characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n      });\n\n      swiper.observer.observers.push(observer);\n    },\n    init: function init() {\n      var swiper = this;\n      if (!Support.observer || !swiper.params.observer) { return; }\n      if (swiper.params.observeParents) {\n        var containerParents = swiper.$el.parents();\n        for (var i = 0; i < containerParents.length; i += 1) {\n          swiper.observer.attach(containerParents[i]);\n        }\n      }\n      // Observe container\n      swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n      // Observe wrapper\n      swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.observer.observers.forEach(function (observer) {\n        observer.disconnect();\n      });\n      swiper.observer.observers = [];\n    },\n  };\n\n  var Observer$1 = {\n    name: 'observer',\n    params: {\n      observer: false,\n      observeParents: false,\n      observeSlideChildren: false,\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        observer: {\n          init: Observer.init.bind(swiper),\n          attach: Observer.attach.bind(swiper),\n          destroy: Observer.destroy.bind(swiper),\n          observers: [],\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.observer.init();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.observer.destroy();\n      },\n    },\n  };\n\n  var Virtual = {\n    update: function update(force) {\n      var swiper = this;\n      var ref = swiper.params;\n      var slidesPerView = ref.slidesPerView;\n      var slidesPerGroup = ref.slidesPerGroup;\n      var centeredSlides = ref.centeredSlides;\n      var ref$1 = swiper.params.virtual;\n      var addSlidesBefore = ref$1.addSlidesBefore;\n      var addSlidesAfter = ref$1.addSlidesAfter;\n      var ref$2 = swiper.virtual;\n      var previousFrom = ref$2.from;\n      var previousTo = ref$2.to;\n      var slides = ref$2.slides;\n      var previousSlidesGrid = ref$2.slidesGrid;\n      var renderSlide = ref$2.renderSlide;\n      var previousOffset = ref$2.offset;\n      swiper.updateActiveIndex();\n      var activeIndex = swiper.activeIndex || 0;\n\n      var offsetProp;\n      if (swiper.rtlTranslate) { offsetProp = 'right'; }\n      else { offsetProp = swiper.isHorizontal() ? 'left' : 'top'; }\n\n      var slidesAfter;\n      var slidesBefore;\n      if (centeredSlides) {\n        slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n        slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      } else {\n        slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n        slidesBefore = slidesPerGroup + addSlidesAfter;\n      }\n      var from = Math.max((activeIndex || 0) - slidesBefore, 0);\n      var to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n      var offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n      Utils.extend(swiper.virtual, {\n        from: from,\n        to: to,\n        offset: offset,\n        slidesGrid: swiper.slidesGrid,\n      });\n\n      function onRendered() {\n        swiper.updateSlides();\n        swiper.updateProgress();\n        swiper.updateSlidesClasses();\n        if (swiper.lazy && swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      }\n\n      if (previousFrom === from && previousTo === to && !force) {\n        if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n          swiper.slides.css(offsetProp, (offset + \"px\"));\n        }\n        swiper.updateProgress();\n        return;\n      }\n      if (swiper.params.virtual.renderExternal) {\n        swiper.params.virtual.renderExternal.call(swiper, {\n          offset: offset,\n          from: from,\n          to: to,\n          slides: (function getSlides() {\n            var slidesToRender = [];\n            for (var i = from; i <= to; i += 1) {\n              slidesToRender.push(slides[i]);\n            }\n            return slidesToRender;\n          }()),\n        });\n        onRendered();\n        return;\n      }\n      var prependIndexes = [];\n      var appendIndexes = [];\n      if (force) {\n        swiper.$wrapperEl.find((\".\" + (swiper.params.slideClass))).remove();\n      } else {\n        for (var i = previousFrom; i <= previousTo; i += 1) {\n          if (i < from || i > to) {\n            swiper.$wrapperEl.find((\".\" + (swiper.params.slideClass) + \"[data-swiper-slide-index=\\\"\" + i + \"\\\"]\")).remove();\n          }\n        }\n      }\n      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n        if (i$1 >= from && i$1 <= to) {\n          if (typeof previousTo === 'undefined' || force) {\n            appendIndexes.push(i$1);\n          } else {\n            if (i$1 > previousTo) { appendIndexes.push(i$1); }\n            if (i$1 < previousFrom) { prependIndexes.push(i$1); }\n          }\n        }\n      }\n      appendIndexes.forEach(function (index) {\n        swiper.$wrapperEl.append(renderSlide(slides[index], index));\n      });\n      prependIndexes.sort(function (a, b) { return b - a; }).forEach(function (index) {\n        swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n      });\n      swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, (offset + \"px\"));\n      onRendered();\n    },\n    renderSlide: function renderSlide(slide, index) {\n      var swiper = this;\n      var params = swiper.params.virtual;\n      if (params.cache && swiper.virtual.cache[index]) {\n        return swiper.virtual.cache[index];\n      }\n      var $slideEl = params.renderSlide\n        ? $(params.renderSlide.call(swiper, slide, index))\n        : $((\"<div class=\\\"\" + (swiper.params.slideClass) + \"\\\" data-swiper-slide-index=\\\"\" + index + \"\\\">\" + slide + \"</div>\"));\n      if (!$slideEl.attr('data-swiper-slide-index')) { $slideEl.attr('data-swiper-slide-index', index); }\n      if (params.cache) { swiper.virtual.cache[index] = $slideEl; }\n      return $slideEl;\n    },\n    appendSlide: function appendSlide(slides) {\n      var swiper = this;\n      if (typeof slides === 'object' && 'length' in slides) {\n        for (var i = 0; i < slides.length; i += 1) {\n          if (slides[i]) { swiper.virtual.slides.push(slides[i]); }\n        }\n      } else {\n        swiper.virtual.slides.push(slides);\n      }\n      swiper.virtual.update(true);\n    },\n    prependSlide: function prependSlide(slides) {\n      var swiper = this;\n      var activeIndex = swiper.activeIndex;\n      var newActiveIndex = activeIndex + 1;\n      var numberOfNewSlides = 1;\n\n      if (Array.isArray(slides)) {\n        for (var i = 0; i < slides.length; i += 1) {\n          if (slides[i]) { swiper.virtual.slides.unshift(slides[i]); }\n        }\n        newActiveIndex = activeIndex + slides.length;\n        numberOfNewSlides = slides.length;\n      } else {\n        swiper.virtual.slides.unshift(slides);\n      }\n      if (swiper.params.virtual.cache) {\n        var cache = swiper.virtual.cache;\n        var newCache = {};\n        Object.keys(cache).forEach(function (cachedIndex) {\n          var $cachedEl = cache[cachedIndex];\n          var cachedElIndex = $cachedEl.attr('data-swiper-slide-index');\n          if (cachedElIndex) {\n            $cachedEl.attr('data-swiper-slide-index', parseInt(cachedElIndex, 10) + 1);\n          }\n          newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\n        });\n        swiper.virtual.cache = newCache;\n      }\n      swiper.virtual.update(true);\n      swiper.slideTo(newActiveIndex, 0);\n    },\n    removeSlide: function removeSlide(slidesIndexes) {\n      var swiper = this;\n      if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) { return; }\n      var activeIndex = swiper.activeIndex;\n      if (Array.isArray(slidesIndexes)) {\n        for (var i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n          swiper.virtual.slides.splice(slidesIndexes[i], 1);\n          if (swiper.params.virtual.cache) {\n            delete swiper.virtual.cache[slidesIndexes[i]];\n          }\n          if (slidesIndexes[i] < activeIndex) { activeIndex -= 1; }\n          activeIndex = Math.max(activeIndex, 0);\n        }\n      } else {\n        swiper.virtual.slides.splice(slidesIndexes, 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes];\n        }\n        if (slidesIndexes < activeIndex) { activeIndex -= 1; }\n        activeIndex = Math.max(activeIndex, 0);\n      }\n      swiper.virtual.update(true);\n      swiper.slideTo(activeIndex, 0);\n    },\n    removeAllSlides: function removeAllSlides() {\n      var swiper = this;\n      swiper.virtual.slides = [];\n      if (swiper.params.virtual.cache) {\n        swiper.virtual.cache = {};\n      }\n      swiper.virtual.update(true);\n      swiper.slideTo(0, 0);\n    },\n  };\n\n  var Virtual$1 = {\n    name: 'virtual',\n    params: {\n      virtual: {\n        enabled: false,\n        slides: [],\n        cache: true,\n        renderSlide: null,\n        renderExternal: null,\n        addSlidesBefore: 0,\n        addSlidesAfter: 0,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        virtual: {\n          update: Virtual.update.bind(swiper),\n          appendSlide: Virtual.appendSlide.bind(swiper),\n          prependSlide: Virtual.prependSlide.bind(swiper),\n          removeSlide: Virtual.removeSlide.bind(swiper),\n          removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n          renderSlide: Virtual.renderSlide.bind(swiper),\n          slides: swiper.params.virtual.slides,\n          cache: {},\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (!swiper.params.virtual.enabled) { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"virtual\"));\n        var overwriteParams = {\n          watchSlidesProgress: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n\n        if (!swiper.params.initialSlide) {\n          swiper.virtual.update();\n        }\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (!swiper.params.virtual.enabled) { return; }\n        swiper.virtual.update();\n      },\n    },\n  };\n\n  var Keyboard = {\n    handle: function handle(event) {\n      var swiper = this;\n      var rtl = swiper.rtlTranslate;\n      var e = event;\n      if (e.originalEvent) { e = e.originalEvent; } // jquery fix\n      var kc = e.keyCode || e.charCode;\n      // Directions locks\n      if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40) || kc === 34)) {\n        return false;\n      }\n      if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38) || kc === 33)) {\n        return false;\n      }\n      if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n        return undefined;\n      }\n      if (doc.activeElement && doc.activeElement.nodeName && (doc.activeElement.nodeName.toLowerCase() === 'input' || doc.activeElement.nodeName.toLowerCase() === 'textarea')) {\n        return undefined;\n      }\n      if (swiper.params.keyboard.onlyInViewport && (kc === 33 || kc === 34 || kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n        var inView = false;\n        // Check that swiper should be inside of visible area of window\n        if (swiper.$el.parents((\".\" + (swiper.params.slideClass))).length > 0 && swiper.$el.parents((\".\" + (swiper.params.slideActiveClass))).length === 0) {\n          return undefined;\n        }\n        var windowWidth = win.innerWidth;\n        var windowHeight = win.innerHeight;\n        var swiperOffset = swiper.$el.offset();\n        if (rtl) { swiperOffset.left -= swiper.$el[0].scrollLeft; }\n        var swiperCoord = [\n          [swiperOffset.left, swiperOffset.top],\n          [swiperOffset.left + swiper.width, swiperOffset.top],\n          [swiperOffset.left, swiperOffset.top + swiper.height],\n          [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height] ];\n        for (var i = 0; i < swiperCoord.length; i += 1) {\n          var point = swiperCoord[i];\n          if (\n            point[0] >= 0 && point[0] <= windowWidth\n            && point[1] >= 0 && point[1] <= windowHeight\n          ) {\n            inView = true;\n          }\n        }\n        if (!inView) { return undefined; }\n      }\n      if (swiper.isHorizontal()) {\n        if (kc === 33 || kc === 34 || kc === 37 || kc === 39) {\n          if (e.preventDefault) { e.preventDefault(); }\n          else { e.returnValue = false; }\n        }\n        if (((kc === 34 || kc === 39) && !rtl) || ((kc === 33 || kc === 37) && rtl)) { swiper.slideNext(); }\n        if (((kc === 33 || kc === 37) && !rtl) || ((kc === 34 || kc === 39) && rtl)) { swiper.slidePrev(); }\n      } else {\n        if (kc === 33 || kc === 34 || kc === 38 || kc === 40) {\n          if (e.preventDefault) { e.preventDefault(); }\n          else { e.returnValue = false; }\n        }\n        if (kc === 34 || kc === 40) { swiper.slideNext(); }\n        if (kc === 33 || kc === 38) { swiper.slidePrev(); }\n      }\n      swiper.emit('keyPress', kc);\n      return undefined;\n    },\n    enable: function enable() {\n      var swiper = this;\n      if (swiper.keyboard.enabled) { return; }\n      $(doc).on('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      if (!swiper.keyboard.enabled) { return; }\n      $(doc).off('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = false;\n    },\n  };\n\n  var Keyboard$1 = {\n    name: 'keyboard',\n    params: {\n      keyboard: {\n        enabled: false,\n        onlyInViewport: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        keyboard: {\n          enabled: false,\n          enable: Keyboard.enable.bind(swiper),\n          disable: Keyboard.disable.bind(swiper),\n          handle: Keyboard.handle.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.keyboard.enabled) {\n          swiper.keyboard.enable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.keyboard.enabled) {\n          swiper.keyboard.disable();\n        }\n      },\n    },\n  };\n\n  function isEventSupported() {\n    var eventName = 'onwheel';\n    var isSupported = eventName in doc;\n\n    if (!isSupported) {\n      var element = doc.createElement('div');\n      element.setAttribute(eventName, 'return;');\n      isSupported = typeof element[eventName] === 'function';\n    }\n\n    if (!isSupported\n      && doc.implementation\n      && doc.implementation.hasFeature\n      // always returns true in newer browsers as per the standard.\n      // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n      && doc.implementation.hasFeature('', '') !== true\n    ) {\n      // This is the only way to test support for the `wheel` event in IE9+.\n      isSupported = doc.implementation.hasFeature('Events.wheel', '3.0');\n    }\n\n    return isSupported;\n  }\n  var Mousewheel = {\n    lastScrollTime: Utils.now(),\n    event: function event() {\n      if (win.navigator.userAgent.indexOf('firefox') > -1) { return 'DOMMouseScroll'; }\n      return isEventSupported() ? 'wheel' : 'mousewheel';\n    },\n    normalize: function normalize(e) {\n      // Reasonable defaults\n      var PIXEL_STEP = 10;\n      var LINE_HEIGHT = 40;\n      var PAGE_HEIGHT = 800;\n\n      var sX = 0;\n      var sY = 0; // spinX, spinY\n      var pX = 0;\n      var pY = 0; // pixelX, pixelY\n\n      // Legacy\n      if ('detail' in e) {\n        sY = e.detail;\n      }\n      if ('wheelDelta' in e) {\n        sY = -e.wheelDelta / 120;\n      }\n      if ('wheelDeltaY' in e) {\n        sY = -e.wheelDeltaY / 120;\n      }\n      if ('wheelDeltaX' in e) {\n        sX = -e.wheelDeltaX / 120;\n      }\n\n      // side scrolling on FF with DOMMouseScroll\n      if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n        sX = sY;\n        sY = 0;\n      }\n\n      pX = sX * PIXEL_STEP;\n      pY = sY * PIXEL_STEP;\n\n      if ('deltaY' in e) {\n        pY = e.deltaY;\n      }\n      if ('deltaX' in e) {\n        pX = e.deltaX;\n      }\n\n      if ((pX || pY) && e.deltaMode) {\n        if (e.deltaMode === 1) { // delta in LINE units\n          pX *= LINE_HEIGHT;\n          pY *= LINE_HEIGHT;\n        } else { // delta in PAGE units\n          pX *= PAGE_HEIGHT;\n          pY *= PAGE_HEIGHT;\n        }\n      }\n\n      // Fall-back if spin cannot be determined\n      if (pX && !sX) {\n        sX = (pX < 1) ? -1 : 1;\n      }\n      if (pY && !sY) {\n        sY = (pY < 1) ? -1 : 1;\n      }\n\n      return {\n        spinX: sX,\n        spinY: sY,\n        pixelX: pX,\n        pixelY: pY,\n      };\n    },\n    handleMouseEnter: function handleMouseEnter() {\n      var swiper = this;\n      swiper.mouseEntered = true;\n    },\n    handleMouseLeave: function handleMouseLeave() {\n      var swiper = this;\n      swiper.mouseEntered = false;\n    },\n    handle: function handle(event) {\n      var e = event;\n      var swiper = this;\n      var params = swiper.params.mousewheel;\n\n      if (swiper.params.cssMode) {\n        e.preventDefault();\n      }\n\n      if (!swiper.mouseEntered && !params.releaseOnEdges) { return true; }\n\n      if (e.originalEvent) { e = e.originalEvent; } // jquery fix\n      var delta = 0;\n      var rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n      var data = Mousewheel.normalize(e);\n\n      if (params.forceToAxis) {\n        if (swiper.isHorizontal()) {\n          if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) { delta = data.pixelX * rtlFactor; }\n          else { return true; }\n        } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) { delta = data.pixelY; }\n        else { return true; }\n      } else {\n        delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n      }\n\n      if (delta === 0) { return true; }\n\n      if (params.invert) { delta = -delta; }\n\n      if (!swiper.params.freeMode) {\n        if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n          if (delta < 0) {\n            if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n              swiper.slideNext();\n              swiper.emit('scroll', e);\n            } else if (params.releaseOnEdges) { return true; }\n          } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n            swiper.slidePrev();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) { return true; }\n        }\n        swiper.mousewheel.lastScrollTime = (new win.Date()).getTime();\n      } else {\n        // Freemode or scrollContainer:\n        if (swiper.params.loop) {\n          swiper.loopFix();\n        }\n        var position = swiper.getTranslate() + (delta * params.sensitivity);\n        var wasBeginning = swiper.isBeginning;\n        var wasEnd = swiper.isEnd;\n\n        if (position >= swiper.minTranslate()) { position = swiper.minTranslate(); }\n        if (position <= swiper.maxTranslate()) { position = swiper.maxTranslate(); }\n\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n\n        if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n          swiper.updateSlidesClasses();\n        }\n\n        if (swiper.params.freeModeSticky) {\n          clearTimeout(swiper.mousewheel.timeout);\n          swiper.mousewheel.timeout = Utils.nextTick(function () {\n            swiper.slideToClosest();\n          }, 300);\n        }\n        // Emit event\n        swiper.emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) { swiper.autoplay.stop(); }\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) { return true; }\n      }\n\n      if (e.preventDefault) { e.preventDefault(); }\n      else { e.returnValue = false; }\n      return false;\n    },\n    enable: function enable() {\n      var swiper = this;\n      var event = Mousewheel.event();\n      if (swiper.params.cssMode) {\n        swiper.wrapperEl.removeEventListener(event, swiper.mousewheel.handle);\n        return true;\n      }\n      if (!event) { return false; }\n      if (swiper.mousewheel.enabled) { return false; }\n      var target = swiper.$el;\n      if (swiper.params.mousewheel.eventsTarged !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarged);\n      }\n      target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n      target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n      target.on(event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = true;\n      return true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      var event = Mousewheel.event();\n      if (swiper.params.cssMode) {\n        swiper.wrapperEl.addEventListener(event, swiper.mousewheel.handle);\n        return true;\n      }\n      if (!event) { return false; }\n      if (!swiper.mousewheel.enabled) { return false; }\n      var target = swiper.$el;\n      if (swiper.params.mousewheel.eventsTarged !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarged);\n      }\n      target.off(event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = false;\n      return true;\n    },\n  };\n\n  var Mousewheel$1 = {\n    name: 'mousewheel',\n    params: {\n      mousewheel: {\n        enabled: false,\n        releaseOnEdges: false,\n        invert: false,\n        forceToAxis: false,\n        sensitivity: 1,\n        eventsTarged: 'container',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        mousewheel: {\n          enabled: false,\n          enable: Mousewheel.enable.bind(swiper),\n          disable: Mousewheel.disable.bind(swiper),\n          handle: Mousewheel.handle.bind(swiper),\n          handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n          handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n          lastScrollTime: Utils.now(),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n          swiper.mousewheel.disable();\n        }\n        if (swiper.params.mousewheel.enabled) { swiper.mousewheel.enable(); }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.params.cssMode) {\n          swiper.mousewheel.enable();\n        }\n        if (swiper.mousewheel.enabled) { swiper.mousewheel.disable(); }\n      },\n    },\n  };\n\n  var Navigation = {\n    update: function update() {\n      // Update Navigation Buttons\n      var swiper = this;\n      var params = swiper.params.navigation;\n\n      if (swiper.params.loop) { return; }\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          $prevEl.addClass(params.disabledClass);\n        } else {\n          $prevEl.removeClass(params.disabledClass);\n        }\n        $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          $nextEl.addClass(params.disabledClass);\n        } else {\n          $nextEl.removeClass(params.disabledClass);\n        }\n        $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n    },\n    onPrevClick: function onPrevClick(e) {\n      var swiper = this;\n      e.preventDefault();\n      if (swiper.isBeginning && !swiper.params.loop) { return; }\n      swiper.slidePrev();\n    },\n    onNextClick: function onNextClick(e) {\n      var swiper = this;\n      e.preventDefault();\n      if (swiper.isEnd && !swiper.params.loop) { return; }\n      swiper.slideNext();\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.navigation;\n      if (!(params.nextEl || params.prevEl)) { return; }\n\n      var $nextEl;\n      var $prevEl;\n      if (params.nextEl) {\n        $nextEl = $(params.nextEl);\n        if (\n          swiper.params.uniqueNavElements\n          && typeof params.nextEl === 'string'\n          && $nextEl.length > 1\n          && swiper.$el.find(params.nextEl).length === 1\n        ) {\n          $nextEl = swiper.$el.find(params.nextEl);\n        }\n      }\n      if (params.prevEl) {\n        $prevEl = $(params.prevEl);\n        if (\n          swiper.params.uniqueNavElements\n          && typeof params.prevEl === 'string'\n          && $prevEl.length > 1\n          && swiper.$el.find(params.prevEl).length === 1\n        ) {\n          $prevEl = swiper.$el.find(params.prevEl);\n        }\n      }\n\n      if ($nextEl && $nextEl.length > 0) {\n        $nextEl.on('click', swiper.navigation.onNextClick);\n      }\n      if ($prevEl && $prevEl.length > 0) {\n        $prevEl.on('click', swiper.navigation.onPrevClick);\n      }\n\n      Utils.extend(swiper.navigation, {\n        $nextEl: $nextEl,\n        nextEl: $nextEl && $nextEl[0],\n        $prevEl: $prevEl,\n        prevEl: $prevEl && $prevEl[0],\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n      if ($nextEl && $nextEl.length) {\n        $nextEl.off('click', swiper.navigation.onNextClick);\n        $nextEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n      if ($prevEl && $prevEl.length) {\n        $prevEl.off('click', swiper.navigation.onPrevClick);\n        $prevEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n    },\n  };\n\n  var Navigation$1 = {\n    name: 'navigation',\n    params: {\n      navigation: {\n        nextEl: null,\n        prevEl: null,\n\n        hideOnClick: false,\n        disabledClass: 'swiper-button-disabled',\n        hiddenClass: 'swiper-button-hidden',\n        lockClass: 'swiper-button-lock',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        navigation: {\n          init: Navigation.init.bind(swiper),\n          update: Navigation.update.bind(swiper),\n          destroy: Navigation.destroy.bind(swiper),\n          onNextClick: Navigation.onNextClick.bind(swiper),\n          onPrevClick: Navigation.onPrevClick.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.navigation.init();\n        swiper.navigation.update();\n      },\n      toEdge: function toEdge() {\n        var swiper = this;\n        swiper.navigation.update();\n      },\n      fromEdge: function fromEdge() {\n        var swiper = this;\n        swiper.navigation.update();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.navigation.destroy();\n      },\n      click: function click(e) {\n        var swiper = this;\n        var ref = swiper.navigation;\n        var $nextEl = ref.$nextEl;\n        var $prevEl = ref.$prevEl;\n        if (\n          swiper.params.navigation.hideOnClick\n          && !$(e.target).is($prevEl)\n          && !$(e.target).is($nextEl)\n        ) {\n          var isHidden;\n          if ($nextEl) {\n            isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n          } else if ($prevEl) {\n            isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n          }\n          if (isHidden === true) {\n            swiper.emit('navigationShow', swiper);\n          } else {\n            swiper.emit('navigationHide', swiper);\n          }\n          if ($nextEl) {\n            $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n          }\n          if ($prevEl) {\n            $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n          }\n        }\n      },\n    },\n  };\n\n  var Pagination = {\n    update: function update() {\n      // Render || Update Pagination bullets/items\n      var swiper = this;\n      var rtl = swiper.rtl;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n      var $el = swiper.pagination.$el;\n      // Current/Total\n      var current;\n      var total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.loop) {\n        current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n        if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n          current -= (slidesLength - (swiper.loopedSlides * 2));\n        }\n        if (current > total - 1) { current -= total; }\n        if (current < 0 && swiper.params.paginationType !== 'bullets') { current = total + current; }\n      } else if (typeof swiper.snapIndex !== 'undefined') {\n        current = swiper.snapIndex;\n      } else {\n        current = swiper.activeIndex || 0;\n      }\n      // Types\n      if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n        var bullets = swiper.pagination.bullets;\n        var firstIndex;\n        var lastIndex;\n        var midIndex;\n        if (params.dynamicBullets) {\n          swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n          $el.css(swiper.isHorizontal() ? 'width' : 'height', ((swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)) + \"px\"));\n          if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n            swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n            if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n              swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n            } else if (swiper.pagination.dynamicBulletIndex < 0) {\n              swiper.pagination.dynamicBulletIndex = 0;\n            }\n          }\n          firstIndex = current - swiper.pagination.dynamicBulletIndex;\n          lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n          midIndex = (lastIndex + firstIndex) / 2;\n        }\n        bullets.removeClass(((params.bulletActiveClass) + \" \" + (params.bulletActiveClass) + \"-next \" + (params.bulletActiveClass) + \"-next-next \" + (params.bulletActiveClass) + \"-prev \" + (params.bulletActiveClass) + \"-prev-prev \" + (params.bulletActiveClass) + \"-main\"));\n        if ($el.length > 1) {\n          bullets.each(function (index, bullet) {\n            var $bullet = $(bullet);\n            var bulletIndex = $bullet.index();\n            if (bulletIndex === current) {\n              $bullet.addClass(params.bulletActiveClass);\n            }\n            if (params.dynamicBullets) {\n              if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n                $bullet.addClass(((params.bulletActiveClass) + \"-main\"));\n              }\n              if (bulletIndex === firstIndex) {\n                $bullet\n                  .prev()\n                  .addClass(((params.bulletActiveClass) + \"-prev\"))\n                  .prev()\n                  .addClass(((params.bulletActiveClass) + \"-prev-prev\"));\n              }\n              if (bulletIndex === lastIndex) {\n                $bullet\n                  .next()\n                  .addClass(((params.bulletActiveClass) + \"-next\"))\n                  .next()\n                  .addClass(((params.bulletActiveClass) + \"-next-next\"));\n              }\n            }\n          });\n        } else {\n          var $bullet = bullets.eq(current);\n          $bullet.addClass(params.bulletActiveClass);\n          if (params.dynamicBullets) {\n            var $firstDisplayedBullet = bullets.eq(firstIndex);\n            var $lastDisplayedBullet = bullets.eq(lastIndex);\n            for (var i = firstIndex; i <= lastIndex; i += 1) {\n              bullets.eq(i).addClass(((params.bulletActiveClass) + \"-main\"));\n            }\n            $firstDisplayedBullet\n              .prev()\n              .addClass(((params.bulletActiveClass) + \"-prev\"))\n              .prev()\n              .addClass(((params.bulletActiveClass) + \"-prev-prev\"));\n            $lastDisplayedBullet\n              .next()\n              .addClass(((params.bulletActiveClass) + \"-next\"))\n              .next()\n              .addClass(((params.bulletActiveClass) + \"-next-next\"));\n          }\n        }\n        if (params.dynamicBullets) {\n          var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n          var bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n          var offsetProp = rtl ? 'right' : 'left';\n          bullets.css(swiper.isHorizontal() ? offsetProp : 'top', (bulletsOffset + \"px\"));\n        }\n      }\n      if (params.type === 'fraction') {\n        $el.find((\".\" + (params.currentClass))).text(params.formatFractionCurrent(current + 1));\n        $el.find((\".\" + (params.totalClass))).text(params.formatFractionTotal(total));\n      }\n      if (params.type === 'progressbar') {\n        var progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        var scale = (current + 1) / total;\n        var scaleX = 1;\n        var scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        $el.find((\".\" + (params.progressbarFillClass))).transform((\"translate3d(0,0,0) scaleX(\" + scaleX + \") scaleY(\" + scaleY + \")\")).transition(swiper.params.speed);\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        $el.html(params.renderCustom(swiper, current + 1, total));\n        swiper.emit('paginationRender', swiper, $el[0]);\n      } else {\n        swiper.emit('paginationUpdate', swiper, $el[0]);\n      }\n      $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    },\n    render: function render() {\n      // Render Container\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n      var $el = swiper.pagination.$el;\n      var paginationHTML = '';\n      if (params.type === 'bullets') {\n        var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n        for (var i = 0; i < numberOfBullets; i += 1) {\n          if (params.renderBullet) {\n            paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n          } else {\n            paginationHTML += \"<\" + (params.bulletElement) + \" class=\\\"\" + (params.bulletClass) + \"\\\"></\" + (params.bulletElement) + \">\";\n          }\n        }\n        $el.html(paginationHTML);\n        swiper.pagination.bullets = $el.find((\".\" + (params.bulletClass)));\n      }\n      if (params.type === 'fraction') {\n        if (params.renderFraction) {\n          paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + (params.currentClass) + \"\\\"></span>\"\n          + ' / '\n          + \"<span class=\\\"\" + (params.totalClass) + \"\\\"></span>\";\n        }\n        $el.html(paginationHTML);\n      }\n      if (params.type === 'progressbar') {\n        if (params.renderProgressbar) {\n          paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + (params.progressbarFillClass) + \"\\\"></span>\";\n        }\n        $el.html(paginationHTML);\n      }\n      if (params.type !== 'custom') {\n        swiper.emit('paginationRender', swiper.pagination.$el[0]);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el) { return; }\n\n      var $el = $(params.el);\n      if ($el.length === 0) { return; }\n\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.el === 'string'\n        && $el.length > 1\n        && swiper.$el.find(params.el).length === 1\n      ) {\n        $el = swiper.$el.find(params.el);\n      }\n\n      if (params.type === 'bullets' && params.clickable) {\n        $el.addClass(params.clickableClass);\n      }\n\n      $el.addClass(params.modifierClass + params.type);\n\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        $el.addClass((\"\" + (params.modifierClass) + (params.type) + \"-dynamic\"));\n        swiper.pagination.dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        $el.addClass(params.progressbarOppositeClass);\n      }\n\n      if (params.clickable) {\n        $el.on('click', (\".\" + (params.bulletClass)), function onClick(e) {\n          e.preventDefault();\n          var index = $(this).index() * swiper.params.slidesPerGroup;\n          if (swiper.params.loop) { index += swiper.loopedSlides; }\n          swiper.slideTo(index);\n        });\n      }\n\n      Utils.extend(swiper.pagination, {\n        $el: $el,\n        el: $el[0],\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var $el = swiper.pagination.$el;\n\n      $el.removeClass(params.hiddenClass);\n      $el.removeClass(params.modifierClass + params.type);\n      if (swiper.pagination.bullets) { swiper.pagination.bullets.removeClass(params.bulletActiveClass); }\n      if (params.clickable) {\n        $el.off('click', (\".\" + (params.bulletClass)));\n      }\n    },\n  };\n\n  var Pagination$1 = {\n    name: 'pagination',\n    params: {\n      pagination: {\n        el: null,\n        bulletElement: 'span',\n        clickable: false,\n        hideOnClick: false,\n        renderBullet: null,\n        renderProgressbar: null,\n        renderFraction: null,\n        renderCustom: null,\n        progressbarOpposite: false,\n        type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n        dynamicBullets: false,\n        dynamicMainBullets: 1,\n        formatFractionCurrent: function (number) { return number; },\n        formatFractionTotal: function (number) { return number; },\n        bulletClass: 'swiper-pagination-bullet',\n        bulletActiveClass: 'swiper-pagination-bullet-active',\n        modifierClass: 'swiper-pagination-', // NEW\n        currentClass: 'swiper-pagination-current',\n        totalClass: 'swiper-pagination-total',\n        hiddenClass: 'swiper-pagination-hidden',\n        progressbarFillClass: 'swiper-pagination-progressbar-fill',\n        progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n        clickableClass: 'swiper-pagination-clickable', // NEW\n        lockClass: 'swiper-pagination-lock',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        pagination: {\n          init: Pagination.init.bind(swiper),\n          render: Pagination.render.bind(swiper),\n          update: Pagination.update.bind(swiper),\n          destroy: Pagination.destroy.bind(swiper),\n          dynamicBulletIndex: 0,\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.pagination.init();\n        swiper.pagination.render();\n        swiper.pagination.update();\n      },\n      activeIndexChange: function activeIndexChange() {\n        var swiper = this;\n        if (swiper.params.loop) {\n          swiper.pagination.update();\n        } else if (typeof swiper.snapIndex === 'undefined') {\n          swiper.pagination.update();\n        }\n      },\n      snapIndexChange: function snapIndexChange() {\n        var swiper = this;\n        if (!swiper.params.loop) {\n          swiper.pagination.update();\n        }\n      },\n      slidesLengthChange: function slidesLengthChange() {\n        var swiper = this;\n        if (swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      snapGridLengthChange: function snapGridLengthChange() {\n        var swiper = this;\n        if (!swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.pagination.destroy();\n      },\n      click: function click(e) {\n        var swiper = this;\n        if (\n          swiper.params.pagination.el\n          && swiper.params.pagination.hideOnClick\n          && swiper.pagination.$el.length > 0\n          && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n        ) {\n          var isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n          if (isHidden === true) {\n            swiper.emit('paginationShow', swiper);\n          } else {\n            swiper.emit('paginationHide', swiper);\n          }\n          swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n        }\n      },\n    },\n  };\n\n  var Scrollbar = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var rtl = swiper.rtlTranslate;\n      var progress = swiper.progress;\n      var dragSize = scrollbar.dragSize;\n      var trackSize = scrollbar.trackSize;\n      var $dragEl = scrollbar.$dragEl;\n      var $el = scrollbar.$el;\n      var params = swiper.params.scrollbar;\n\n      var newSize = dragSize;\n      var newPos = (trackSize - dragSize) * progress;\n      if (rtl) {\n        newPos = -newPos;\n        if (newPos > 0) {\n          newSize = dragSize - newPos;\n          newPos = 0;\n        } else if (-newPos + dragSize > trackSize) {\n          newSize = trackSize + newPos;\n        }\n      } else if (newPos < 0) {\n        newSize = dragSize + newPos;\n        newPos = 0;\n      } else if (newPos + dragSize > trackSize) {\n        newSize = trackSize - newPos;\n      }\n      if (swiper.isHorizontal()) {\n        $dragEl.transform((\"translate3d(\" + newPos + \"px, 0, 0)\"));\n        $dragEl[0].style.width = newSize + \"px\";\n      } else {\n        $dragEl.transform((\"translate3d(0px, \" + newPos + \"px, 0)\"));\n        $dragEl[0].style.height = newSize + \"px\";\n      }\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.timeout);\n        $el[0].style.opacity = 1;\n        swiper.scrollbar.timeout = setTimeout(function () {\n          $el[0].style.opacity = 0;\n          $el.transition(400);\n        }, 1000);\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n      swiper.scrollbar.$dragEl.transition(duration);\n    },\n    updateSize: function updateSize() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n\n      var scrollbar = swiper.scrollbar;\n      var $dragEl = scrollbar.$dragEl;\n      var $el = scrollbar.$el;\n\n      $dragEl[0].style.width = '';\n      $dragEl[0].style.height = '';\n      var trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n      var divider = swiper.size / swiper.virtualSize;\n      var moveDivider = divider * (trackSize / swiper.size);\n      var dragSize;\n      if (swiper.params.scrollbar.dragSize === 'auto') {\n        dragSize = trackSize * divider;\n      } else {\n        dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n      }\n\n      if (swiper.isHorizontal()) {\n        $dragEl[0].style.width = dragSize + \"px\";\n      } else {\n        $dragEl[0].style.height = dragSize + \"px\";\n      }\n\n      if (divider >= 1) {\n        $el[0].style.display = 'none';\n      } else {\n        $el[0].style.display = '';\n      }\n      if (swiper.params.scrollbar.hide) {\n        $el[0].style.opacity = 0;\n      }\n      Utils.extend(scrollbar, {\n        trackSize: trackSize,\n        divider: divider,\n        moveDivider: moveDivider,\n        dragSize: dragSize,\n      });\n      scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n    },\n    getPointerPosition: function getPointerPosition(e) {\n      var swiper = this;\n      if (swiper.isHorizontal()) {\n        return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n      }\n      return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    },\n    setDragPosition: function setDragPosition(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar;\n      var rtl = swiper.rtlTranslate;\n      var $el = scrollbar.$el;\n      var dragSize = scrollbar.dragSize;\n      var trackSize = scrollbar.trackSize;\n      var dragStartPos = scrollbar.dragStartPos;\n\n      var positionRatio;\n      positionRatio = ((scrollbar.getPointerPosition(e)) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top']\n        - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n      positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n      if (rtl) {\n        positionRatio = 1 - positionRatio;\n      }\n\n      var position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n      swiper.updateProgress(position);\n      swiper.setTranslate(position);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    },\n    onDragStart: function onDragStart(e) {\n      var swiper = this;\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar;\n      var $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      var $dragEl = scrollbar.$dragEl;\n      swiper.scrollbar.isTouched = true;\n      swiper.scrollbar.dragStartPos = (e.target === $dragEl[0] || e.target === $dragEl)\n        ? scrollbar.getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n      e.preventDefault();\n      e.stopPropagation();\n\n      $wrapperEl.transition(100);\n      $dragEl.transition(100);\n      scrollbar.setDragPosition(e);\n\n      clearTimeout(swiper.scrollbar.dragTimeout);\n\n      $el.transition(0);\n      if (params.hide) {\n        $el.css('opacity', 1);\n      }\n      if (swiper.params.cssMode) {\n        swiper.$wrapperEl.css('scroll-snap-type', 'none');\n      }\n      swiper.emit('scrollbarDragStart', e);\n    },\n    onDragMove: function onDragMove(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar;\n      var $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      var $dragEl = scrollbar.$dragEl;\n\n      if (!swiper.scrollbar.isTouched) { return; }\n      if (e.preventDefault) { e.preventDefault(); }\n      else { e.returnValue = false; }\n      scrollbar.setDragPosition(e);\n      $wrapperEl.transition(0);\n      $el.transition(0);\n      $dragEl.transition(0);\n      swiper.emit('scrollbarDragMove', e);\n    },\n    onDragEnd: function onDragEnd(e) {\n      var swiper = this;\n\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar;\n      var $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n\n      if (!swiper.scrollbar.isTouched) { return; }\n      swiper.scrollbar.isTouched = false;\n      if (swiper.params.cssMode) {\n        swiper.$wrapperEl.css('scroll-snap-type', '');\n        $wrapperEl.transition('');\n      }\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.dragTimeout);\n        swiper.scrollbar.dragTimeout = Utils.nextTick(function () {\n          $el.css('opacity', 0);\n          $el.transition(400);\n        }, 1000);\n      }\n      swiper.emit('scrollbarDragEnd', e);\n      if (params.snapOnRelease) {\n        swiper.slideToClosest();\n      }\n    },\n    enableDraggable: function enableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var touchEventsTouch = swiper.touchEventsTouch;\n      var touchEventsDesktop = swiper.touchEventsDesktop;\n      var params = swiper.params;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n      var passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      if (!Support.touch) {\n        target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        doc.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        doc.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n        target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n        target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    },\n    disableDraggable: function disableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var touchEventsTouch = swiper.touchEventsTouch;\n      var touchEventsDesktop = swiper.touchEventsDesktop;\n      var params = swiper.params;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n      var passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      if (!Support.touch) {\n        target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        doc.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        doc.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n        target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n        target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var $swiperEl = swiper.$el;\n      var params = swiper.params.scrollbar;\n\n      var $el = $(params.el);\n      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n        $el = $swiperEl.find(params.el);\n      }\n\n      var $dragEl = $el.find((\".\" + (swiper.params.scrollbar.dragClass)));\n      if ($dragEl.length === 0) {\n        $dragEl = $((\"<div class=\\\"\" + (swiper.params.scrollbar.dragClass) + \"\\\"></div>\"));\n        $el.append($dragEl);\n      }\n\n      Utils.extend(scrollbar, {\n        $el: $el,\n        el: $el[0],\n        $dragEl: $dragEl,\n        dragEl: $dragEl[0],\n      });\n\n      if (params.draggable) {\n        scrollbar.enableDraggable();\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.scrollbar.disableDraggable();\n    },\n  };\n\n  var Scrollbar$1 = {\n    name: 'scrollbar',\n    params: {\n      scrollbar: {\n        el: null,\n        dragSize: 'auto',\n        hide: false,\n        draggable: false,\n        snapOnRelease: true,\n        lockClass: 'swiper-scrollbar-lock',\n        dragClass: 'swiper-scrollbar-drag',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        scrollbar: {\n          init: Scrollbar.init.bind(swiper),\n          destroy: Scrollbar.destroy.bind(swiper),\n          updateSize: Scrollbar.updateSize.bind(swiper),\n          setTranslate: Scrollbar.setTranslate.bind(swiper),\n          setTransition: Scrollbar.setTransition.bind(swiper),\n          enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n          disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n          setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n          getPointerPosition: Scrollbar.getPointerPosition.bind(swiper),\n          onDragStart: Scrollbar.onDragStart.bind(swiper),\n          onDragMove: Scrollbar.onDragMove.bind(swiper),\n          onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n          isTouched: false,\n          timeout: null,\n          dragTimeout: null,\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.scrollbar.init();\n        swiper.scrollbar.updateSize();\n        swiper.scrollbar.setTranslate();\n      },\n      update: function update() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      resize: function resize() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        swiper.scrollbar.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        swiper.scrollbar.setTransition(duration);\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.scrollbar.destroy();\n      },\n    },\n  };\n\n  var Parallax = {\n    setTransform: function setTransform(el, progress) {\n      var swiper = this;\n      var rtl = swiper.rtl;\n\n      var $el = $(el);\n      var rtlFactor = rtl ? -1 : 1;\n\n      var p = $el.attr('data-swiper-parallax') || '0';\n      var x = $el.attr('data-swiper-parallax-x');\n      var y = $el.attr('data-swiper-parallax-y');\n      var scale = $el.attr('data-swiper-parallax-scale');\n      var opacity = $el.attr('data-swiper-parallax-opacity');\n\n      if (x || y) {\n        x = x || '0';\n        y = y || '0';\n      } else if (swiper.isHorizontal()) {\n        x = p;\n        y = '0';\n      } else {\n        y = p;\n        x = '0';\n      }\n\n      if ((x).indexOf('%') >= 0) {\n        x = (parseInt(x, 10) * progress * rtlFactor) + \"%\";\n      } else {\n        x = (x * progress * rtlFactor) + \"px\";\n      }\n      if ((y).indexOf('%') >= 0) {\n        y = (parseInt(y, 10) * progress) + \"%\";\n      } else {\n        y = (y * progress) + \"px\";\n      }\n\n      if (typeof opacity !== 'undefined' && opacity !== null) {\n        var currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n        $el[0].style.opacity = currentOpacity;\n      }\n      if (typeof scale === 'undefined' || scale === null) {\n        $el.transform((\"translate3d(\" + x + \", \" + y + \", 0px)\"));\n      } else {\n        var currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n        $el.transform((\"translate3d(\" + x + \", \" + y + \", 0px) scale(\" + currentScale + \")\"));\n      }\n    },\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el;\n      var slides = swiper.slides;\n      var progress = swiper.progress;\n      var snapGrid = swiper.snapGrid;\n      $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n        .each(function (index, el) {\n          swiper.parallax.setTransform(el, progress);\n        });\n      slides.each(function (slideIndex, slideEl) {\n        var slideProgress = slideEl.progress;\n        if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n          slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n        }\n        slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n        $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n          .each(function (index, el) {\n            swiper.parallax.setTransform(el, slideProgress);\n          });\n      });\n    },\n    setTransition: function setTransition(duration) {\n      if ( duration === void 0 ) duration = this.params.speed;\n\n      var swiper = this;\n      var $el = swiper.$el;\n      $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n        .each(function (index, parallaxEl) {\n          var $parallaxEl = $(parallaxEl);\n          var parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n          if (duration === 0) { parallaxDuration = 0; }\n          $parallaxEl.transition(parallaxDuration);\n        });\n    },\n  };\n\n  var Parallax$1 = {\n    name: 'parallax',\n    params: {\n      parallax: {\n        enabled: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        parallax: {\n          setTransform: Parallax.setTransform.bind(swiper),\n          setTranslate: Parallax.setTranslate.bind(swiper),\n          setTransition: Parallax.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (!swiper.params.parallax.enabled) { return; }\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      },\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.parallax.enabled) { return; }\n        swiper.parallax.setTranslate();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (!swiper.params.parallax.enabled) { return; }\n        swiper.parallax.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (!swiper.params.parallax.enabled) { return; }\n        swiper.parallax.setTransition(duration);\n      },\n    },\n  };\n\n  var Zoom = {\n    // Calc Scale From Multi-touches\n    getDistanceBetweenTouches: function getDistanceBetweenTouches(e) {\n      if (e.targetTouches.length < 2) { return 1; }\n      var x1 = e.targetTouches[0].pageX;\n      var y1 = e.targetTouches[0].pageY;\n      var x2 = e.targetTouches[1].pageX;\n      var y2 = e.targetTouches[1].pageY;\n      var distance = Math.sqrt((Math.pow( (x2 - x1), 2 )) + (Math.pow( (y2 - y1), 2 )));\n      return distance;\n    },\n    // Events\n    onGestureStart: function onGestureStart(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n      if (!Support.gestures) {\n        if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n          return;\n        }\n        zoom.fakeGestureTouched = true;\n        gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n      }\n      if (!gesture.$slideEl || !gesture.$slideEl.length) {\n        gesture.$slideEl = $(e.target).closest('.swiper-slide');\n        if (gesture.$slideEl.length === 0) { gesture.$slideEl = swiper.slides.eq(swiper.activeIndex); }\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n        gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n        if (gesture.$imageWrapEl.length === 0) {\n          gesture.$imageEl = undefined;\n          return;\n        }\n      }\n      gesture.$imageEl.transition(0);\n      swiper.zoom.isScaling = true;\n    },\n    onGestureChange: function onGestureChange(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (!Support.gestures) {\n        if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n          return;\n        }\n        zoom.fakeGestureMoved = true;\n        gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (Support.gestures) {\n        zoom.scale = e.scale * zoom.currentScale;\n      } else {\n        zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n      }\n      if (zoom.scale > gesture.maxRatio) {\n        zoom.scale = (gesture.maxRatio - 1) + (Math.pow( ((zoom.scale - gesture.maxRatio) + 1), 0.5 ));\n      }\n      if (zoom.scale < params.minRatio) {\n        zoom.scale = (params.minRatio + 1) - (Math.pow( ((params.minRatio - zoom.scale) + 1), 0.5 ));\n      }\n      gesture.$imageEl.transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n    },\n    onGestureEnd: function onGestureEnd(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (!Support.gestures) {\n        if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n          return;\n        }\n        if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n          return;\n        }\n        zoom.fakeGestureTouched = false;\n        zoom.fakeGestureMoved = false;\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n      gesture.$imageEl.transition(swiper.params.speed).transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n      zoom.currentScale = zoom.scale;\n      zoom.isScaling = false;\n      if (zoom.scale === 1) { gesture.$slideEl = undefined; }\n    },\n    onTouchStart: function onTouchStart(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (image.isTouched) { return; }\n      if (Device.android) { e.preventDefault(); }\n      image.isTouched = true;\n      image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    },\n    onTouchMove: function onTouchMove(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      var velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      swiper.allowClick = false;\n      if (!image.isTouched || !gesture.$slideEl) { return; }\n\n      if (!image.isMoved) {\n        image.width = gesture.$imageEl[0].offsetWidth;\n        image.height = gesture.$imageEl[0].offsetHeight;\n        image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n        image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n        gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n        gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n        gesture.$imageWrapEl.transition(0);\n        if (swiper.rtl) {\n          image.startX = -image.startX;\n          image.startY = -image.startY;\n        }\n      }\n      // Define if we need image drag\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n\n      if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) { return; }\n\n      image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n      image.maxY = -image.minY;\n\n      image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n      if (!image.isMoved && !zoom.isScaling) {\n        if (\n          swiper.isHorizontal()\n          && (\n            (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n            || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n          )\n        ) {\n          image.isTouched = false;\n          return;\n        } if (\n          !swiper.isHorizontal()\n          && (\n            (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n            || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n          )\n        ) {\n          image.isTouched = false;\n          return;\n        }\n      }\n      e.preventDefault();\n      e.stopPropagation();\n\n      image.isMoved = true;\n      image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n      image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n      if (image.currentX < image.minX) {\n        image.currentX = (image.minX + 1) - (Math.pow( ((image.minX - image.currentX) + 1), 0.8 ));\n      }\n      if (image.currentX > image.maxX) {\n        image.currentX = (image.maxX - 1) + (Math.pow( ((image.currentX - image.maxX) + 1), 0.8 ));\n      }\n\n      if (image.currentY < image.minY) {\n        image.currentY = (image.minY + 1) - (Math.pow( ((image.minY - image.currentY) + 1), 0.8 ));\n      }\n      if (image.currentY > image.maxY) {\n        image.currentY = (image.maxY - 1) + (Math.pow( ((image.currentY - image.maxY) + 1), 0.8 ));\n      }\n\n      // Velocity\n      if (!velocity.prevPositionX) { velocity.prevPositionX = image.touchesCurrent.x; }\n      if (!velocity.prevPositionY) { velocity.prevPositionY = image.touchesCurrent.y; }\n      if (!velocity.prevTime) { velocity.prevTime = Date.now(); }\n      velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n      velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n      if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) { velocity.x = 0; }\n      if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) { velocity.y = 0; }\n      velocity.prevPositionX = image.touchesCurrent.x;\n      velocity.prevPositionY = image.touchesCurrent.y;\n      velocity.prevTime = Date.now();\n\n      gesture.$imageWrapEl.transform((\"translate3d(\" + (image.currentX) + \"px, \" + (image.currentY) + \"px,0)\"));\n    },\n    onTouchEnd: function onTouchEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      var velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (!image.isTouched || !image.isMoved) {\n        image.isTouched = false;\n        image.isMoved = false;\n        return;\n      }\n      image.isTouched = false;\n      image.isMoved = false;\n      var momentumDurationX = 300;\n      var momentumDurationY = 300;\n      var momentumDistanceX = velocity.x * momentumDurationX;\n      var newPositionX = image.currentX + momentumDistanceX;\n      var momentumDistanceY = velocity.y * momentumDurationY;\n      var newPositionY = image.currentY + momentumDistanceY;\n\n      // Fix duration\n      if (velocity.x !== 0) { momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x); }\n      if (velocity.y !== 0) { momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y); }\n      var momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n      image.currentX = newPositionX;\n      image.currentY = newPositionY;\n\n      // Define if we need image drag\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n      image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n      image.maxY = -image.minY;\n      image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n      image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n      gesture.$imageWrapEl.transition(momentumDuration).transform((\"translate3d(\" + (image.currentX) + \"px, \" + (image.currentY) + \"px,0)\"));\n    },\n    onTransitionEnd: function onTransitionEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n        gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n        gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n        zoom.scale = 1;\n        zoom.currentScale = 1;\n\n        gesture.$slideEl = undefined;\n        gesture.$imageEl = undefined;\n        gesture.$imageWrapEl = undefined;\n      }\n    },\n    // Toggle Zoom\n    toggle: function toggle(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n\n      if (zoom.scale && zoom.scale !== 1) {\n        // Zoom Out\n        zoom.out();\n      } else {\n        // Zoom In\n        zoom.in(e);\n      }\n    },\n    in: function in$1(e) {\n      var swiper = this;\n\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n\n      if (!gesture.$slideEl) {\n        gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n\n      gesture.$slideEl.addClass((\"\" + (params.zoomedSlideClass)));\n\n      var touchX;\n      var touchY;\n      var offsetX;\n      var offsetY;\n      var diffX;\n      var diffY;\n      var translateX;\n      var translateY;\n      var imageWidth;\n      var imageHeight;\n      var scaledWidth;\n      var scaledHeight;\n      var translateMinX;\n      var translateMinY;\n      var translateMaxX;\n      var translateMaxY;\n      var slideWidth;\n      var slideHeight;\n\n      if (typeof image.touchesStart.x === 'undefined' && e) {\n        touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n        touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n      } else {\n        touchX = image.touchesStart.x;\n        touchY = image.touchesStart.y;\n      }\n\n      zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (e) {\n        slideWidth = gesture.$slideEl[0].offsetWidth;\n        slideHeight = gesture.$slideEl[0].offsetHeight;\n        offsetX = gesture.$slideEl.offset().left;\n        offsetY = gesture.$slideEl.offset().top;\n        diffX = (offsetX + (slideWidth / 2)) - touchX;\n        diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n        imageWidth = gesture.$imageEl[0].offsetWidth;\n        imageHeight = gesture.$imageEl[0].offsetHeight;\n        scaledWidth = imageWidth * zoom.scale;\n        scaledHeight = imageHeight * zoom.scale;\n\n        translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n        translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n        translateMaxX = -translateMinX;\n        translateMaxY = -translateMinY;\n\n        translateX = diffX * zoom.scale;\n        translateY = diffY * zoom.scale;\n\n        if (translateX < translateMinX) {\n          translateX = translateMinX;\n        }\n        if (translateX > translateMaxX) {\n          translateX = translateMaxX;\n        }\n\n        if (translateY < translateMinY) {\n          translateY = translateMinY;\n        }\n        if (translateY > translateMaxY) {\n          translateY = translateMaxY;\n        }\n      } else {\n        translateX = 0;\n        translateY = 0;\n      }\n      gesture.$imageWrapEl.transition(300).transform((\"translate3d(\" + translateX + \"px, \" + translateY + \"px,0)\"));\n      gesture.$imageEl.transition(300).transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n    },\n    out: function out() {\n      var swiper = this;\n\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n\n      if (!gesture.$slideEl) {\n        gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n      gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n      gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n      gesture.$slideEl.removeClass((\"\" + (params.zoomedSlideClass)));\n      gesture.$slideEl = undefined;\n    },\n    // Attach/Detach Events\n    enable: function enable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      if (zoom.enabled) { return; }\n      zoom.enabled = true;\n\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n      var activeListenerWithCapture = Support.passiveListener ? { passive: false, capture: true } : true;\n\n      // Scale image\n      if (Support.gestures) {\n        swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n        if (swiper.touchEvents.cancel) {\n          swiper.$wrapperEl.on(swiper.touchEvents.cancel, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n        }\n      }\n\n      // Move image\n      swiper.$wrapperEl.on(swiper.touchEvents.move, (\".\" + (swiper.params.zoom.containerClass)), zoom.onTouchMove, activeListenerWithCapture);\n    },\n    disable: function disable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      if (!zoom.enabled) { return; }\n\n      swiper.zoom.enabled = false;\n\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n      var activeListenerWithCapture = Support.passiveListener ? { passive: false, capture: true } : true;\n\n      // Scale image\n      if (Support.gestures) {\n        swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n        if (swiper.touchEvents.cancel) {\n          swiper.$wrapperEl.off(swiper.touchEvents.cancel, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n        }\n      }\n\n      // Move image\n      swiper.$wrapperEl.off(swiper.touchEvents.move, (\".\" + (swiper.params.zoom.containerClass)), zoom.onTouchMove, activeListenerWithCapture);\n    },\n  };\n\n  var Zoom$1 = {\n    name: 'zoom',\n    params: {\n      zoom: {\n        enabled: false,\n        maxRatio: 3,\n        minRatio: 1,\n        toggle: true,\n        containerClass: 'swiper-zoom-container',\n        zoomedSlideClass: 'swiper-slide-zoomed',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      var zoom = {\n        enabled: false,\n        scale: 1,\n        currentScale: 1,\n        isScaling: false,\n        gesture: {\n          $slideEl: undefined,\n          slideWidth: undefined,\n          slideHeight: undefined,\n          $imageEl: undefined,\n          $imageWrapEl: undefined,\n          maxRatio: 3,\n        },\n        image: {\n          isTouched: undefined,\n          isMoved: undefined,\n          currentX: undefined,\n          currentY: undefined,\n          minX: undefined,\n          minY: undefined,\n          maxX: undefined,\n          maxY: undefined,\n          width: undefined,\n          height: undefined,\n          startX: undefined,\n          startY: undefined,\n          touchesStart: {},\n          touchesCurrent: {},\n        },\n        velocity: {\n          x: undefined,\n          y: undefined,\n          prevPositionX: undefined,\n          prevPositionY: undefined,\n          prevTime: undefined,\n        },\n      };\n\n      ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach(function (methodName) {\n        zoom[methodName] = Zoom[methodName].bind(swiper);\n      });\n      Utils.extend(swiper, {\n        zoom: zoom,\n      });\n\n      var scale = 1;\n      Object.defineProperty(swiper.zoom, 'scale', {\n        get: function get() {\n          return scale;\n        },\n        set: function set(value) {\n          if (scale !== value) {\n            var imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n            var slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n            swiper.emit('zoomChange', value, imageEl, slideEl);\n          }\n          scale = value;\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.zoom.enabled) {\n          swiper.zoom.enable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.zoom.disable();\n      },\n      touchStart: function touchStart(e) {\n        var swiper = this;\n        if (!swiper.zoom.enabled) { return; }\n        swiper.zoom.onTouchStart(e);\n      },\n      touchEnd: function touchEnd(e) {\n        var swiper = this;\n        if (!swiper.zoom.enabled) { return; }\n        swiper.zoom.onTouchEnd(e);\n      },\n      doubleTap: function doubleTap(e) {\n        var swiper = this;\n        if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n          swiper.zoom.toggle(e);\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n          swiper.zoom.onTransitionEnd();\n        }\n      },\n      slideChange: function slideChange() {\n        var swiper = this;\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n          swiper.zoom.onTransitionEnd();\n        }\n      },\n    },\n  };\n\n  var Lazy = {\n    loadInSlide: function loadInSlide(index, loadInDuplicate) {\n      if ( loadInDuplicate === void 0 ) loadInDuplicate = true;\n\n      var swiper = this;\n      var params = swiper.params.lazy;\n      if (typeof index === 'undefined') { return; }\n      if (swiper.slides.length === 0) { return; }\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n      var $slideEl = isVirtual\n        ? swiper.$wrapperEl.children((\".\" + (swiper.params.slideClass) + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\"))\n        : swiper.slides.eq(index);\n\n      var $images = $slideEl.find((\".\" + (params.elementClass) + \":not(.\" + (params.loadedClass) + \"):not(.\" + (params.loadingClass) + \")\"));\n      if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n        $images = $images.add($slideEl[0]);\n      }\n      if ($images.length === 0) { return; }\n\n      $images.each(function (imageIndex, imageEl) {\n        var $imageEl = $(imageEl);\n        $imageEl.addClass(params.loadingClass);\n\n        var background = $imageEl.attr('data-background');\n        var src = $imageEl.attr('data-src');\n        var srcset = $imageEl.attr('data-srcset');\n        var sizes = $imageEl.attr('data-sizes');\n\n        swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, function () {\n          if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) { return; }\n          if (background) {\n            $imageEl.css('background-image', (\"url(\\\"\" + background + \"\\\")\"));\n            $imageEl.removeAttr('data-background');\n          } else {\n            if (srcset) {\n              $imageEl.attr('srcset', srcset);\n              $imageEl.removeAttr('data-srcset');\n            }\n            if (sizes) {\n              $imageEl.attr('sizes', sizes);\n              $imageEl.removeAttr('data-sizes');\n            }\n            if (src) {\n              $imageEl.attr('src', src);\n              $imageEl.removeAttr('data-src');\n            }\n          }\n\n          $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n          $slideEl.find((\".\" + (params.preloaderClass))).remove();\n          if (swiper.params.loop && loadInDuplicate) {\n            var slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n            if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n              var originalSlide = swiper.$wrapperEl.children((\"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]:not(.\" + (swiper.params.slideDuplicateClass) + \")\"));\n              swiper.lazy.loadInSlide(originalSlide.index(), false);\n            } else {\n              var duplicatedSlide = swiper.$wrapperEl.children((\".\" + (swiper.params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]\"));\n              swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n            }\n          }\n          swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n        });\n\n        swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n      });\n    },\n    load: function load() {\n      var swiper = this;\n      var $wrapperEl = swiper.$wrapperEl;\n      var swiperParams = swiper.params;\n      var slides = swiper.slides;\n      var activeIndex = swiper.activeIndex;\n      var isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n      var params = swiperParams.lazy;\n\n      var slidesPerView = swiperParams.slidesPerView;\n      if (slidesPerView === 'auto') {\n        slidesPerView = 0;\n      }\n\n      function slideExist(index) {\n        if (isVirtual) {\n          if ($wrapperEl.children((\".\" + (swiperParams.slideClass) + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\")).length) {\n            return true;\n          }\n        } else if (slides[index]) { return true; }\n        return false;\n      }\n      function slideIndex(slideEl) {\n        if (isVirtual) {\n          return $(slideEl).attr('data-swiper-slide-index');\n        }\n        return $(slideEl).index();\n      }\n\n      if (!swiper.lazy.initialImageLoaded) { swiper.lazy.initialImageLoaded = true; }\n      if (swiper.params.watchSlidesVisibility) {\n        $wrapperEl.children((\".\" + (swiperParams.slideVisibleClass))).each(function (elIndex, slideEl) {\n          var index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n          swiper.lazy.loadInSlide(index);\n        });\n      } else if (slidesPerView > 1) {\n        for (var i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n          if (slideExist(i)) { swiper.lazy.loadInSlide(i); }\n        }\n      } else {\n        swiper.lazy.loadInSlide(activeIndex);\n      }\n      if (params.loadPrevNext) {\n        if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n          var amount = params.loadPrevNextAmount;\n          var spv = slidesPerView;\n          var maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n          var minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n          // Next Slides\n          for (var i$1 = activeIndex + slidesPerView; i$1 < maxIndex; i$1 += 1) {\n            if (slideExist(i$1)) { swiper.lazy.loadInSlide(i$1); }\n          }\n          // Prev Slides\n          for (var i$2 = minIndex; i$2 < activeIndex; i$2 += 1) {\n            if (slideExist(i$2)) { swiper.lazy.loadInSlide(i$2); }\n          }\n        } else {\n          var nextSlide = $wrapperEl.children((\".\" + (swiperParams.slideNextClass)));\n          if (nextSlide.length > 0) { swiper.lazy.loadInSlide(slideIndex(nextSlide)); }\n\n          var prevSlide = $wrapperEl.children((\".\" + (swiperParams.slidePrevClass)));\n          if (prevSlide.length > 0) { swiper.lazy.loadInSlide(slideIndex(prevSlide)); }\n        }\n      }\n    },\n  };\n\n  var Lazy$1 = {\n    name: 'lazy',\n    params: {\n      lazy: {\n        enabled: false,\n        loadPrevNext: false,\n        loadPrevNextAmount: 1,\n        loadOnTransitionStart: false,\n\n        elementClass: 'swiper-lazy',\n        loadingClass: 'swiper-lazy-loading',\n        loadedClass: 'swiper-lazy-loaded',\n        preloaderClass: 'swiper-lazy-preloader',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        lazy: {\n          initialImageLoaded: false,\n          load: Lazy.load.bind(swiper),\n          loadInSlide: Lazy.loadInSlide.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n          swiper.params.preloadImages = false;\n        }\n      },\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n          swiper.lazy.load();\n        }\n      },\n      scroll: function scroll() {\n        var swiper = this;\n        if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n          swiper.lazy.load();\n        }\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      scrollbarDragMove: function scrollbarDragMove() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      transitionStart: function transitionStart() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n            swiper.lazy.load();\n          }\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n          swiper.lazy.load();\n        }\n      },\n      slideChange: function slideChange() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && swiper.params.cssMode) {\n          swiper.lazy.load();\n        }\n      },\n    },\n  };\n\n  /* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\n  var Controller = {\n    LinearSpline: function LinearSpline(x, y) {\n      var binarySearch = (function search() {\n        var maxIndex;\n        var minIndex;\n        var guess;\n        return function (array, val) {\n          minIndex = -1;\n          maxIndex = array.length;\n          while (maxIndex - minIndex > 1) {\n            guess = maxIndex + minIndex >> 1;\n            if (array[guess] <= val) {\n              minIndex = guess;\n            } else {\n              maxIndex = guess;\n            }\n          }\n          return maxIndex;\n        };\n      }());\n      this.x = x;\n      this.y = y;\n      this.lastIndex = x.length - 1;\n      // Given an x value (x2), return the expected y2 value:\n      // (x1,y1) is the known point before given value,\n      // (x3,y3) is the known point after given value.\n      var i1;\n      var i3;\n\n      this.interpolate = function interpolate(x2) {\n        if (!x2) { return 0; }\n\n        // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n        i3 = binarySearch(this.x, x2);\n        i1 = i3 - 1;\n\n        // We have our indexes i1 & i3, so we can calculate already:\n        // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n        return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n      };\n      return this;\n    },\n    // xxx: for now i will just save one spline function to to\n    getInterpolateFunction: function getInterpolateFunction(c) {\n      var swiper = this;\n      if (!swiper.controller.spline) {\n        swiper.controller.spline = swiper.params.loop\n          ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n          : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n      }\n    },\n    setTranslate: function setTranslate(setTranslate$1, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var multiplier;\n      var controlledTranslate;\n      function setControlledTranslate(c) {\n        // this will create an Interpolate function based on the snapGrids\n        // x is the Grid of the scrolled scroller and y will be the controlled scroller\n        // it makes sense to create this only once and recall it for the interpolation\n        // the function does a lot of value caching for performance\n        var translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n        if (swiper.params.controller.by === 'slide') {\n          swiper.controller.getInterpolateFunction(c);\n          // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n          // but it did not work out\n          controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n        }\n\n        if (!controlledTranslate || swiper.params.controller.by === 'container') {\n          multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n          controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n        }\n\n        if (swiper.params.controller.inverse) {\n          controlledTranslate = c.maxTranslate() - controlledTranslate;\n        }\n        c.updateProgress(controlledTranslate);\n        c.setTranslate(controlledTranslate, swiper);\n        c.updateActiveIndex();\n        c.updateSlidesClasses();\n      }\n      if (Array.isArray(controlled)) {\n        for (var i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTranslate(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTranslate(controlled);\n      }\n    },\n    setTransition: function setTransition(duration, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var i;\n      function setControlledTransition(c) {\n        c.setTransition(duration, swiper);\n        if (duration !== 0) {\n          c.transitionStart();\n          if (c.params.autoHeight) {\n            Utils.nextTick(function () {\n              c.updateAutoHeight();\n            });\n          }\n          c.$wrapperEl.transitionEnd(function () {\n            if (!controlled) { return; }\n            if (c.params.loop && swiper.params.controller.by === 'slide') {\n              c.loopFix();\n            }\n            c.transitionEnd();\n          });\n        }\n      }\n      if (Array.isArray(controlled)) {\n        for (i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTransition(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTransition(controlled);\n      }\n    },\n  };\n  var Controller$1 = {\n    name: 'controller',\n    params: {\n      controller: {\n        control: undefined,\n        inverse: false,\n        by: 'slide', // or 'container'\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        controller: {\n          control: swiper.params.controller.control,\n          getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n          setTranslate: Controller.setTranslate.bind(swiper),\n          setTransition: Controller.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      update: function update() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      setTranslate: function setTranslate(translate, byController) {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        swiper.controller.setTranslate(translate, byController);\n      },\n      setTransition: function setTransition(duration, byController) {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        swiper.controller.setTransition(duration, byController);\n      },\n    },\n  };\n\n  var a11y = {\n    makeElFocusable: function makeElFocusable($el) {\n      $el.attr('tabIndex', '0');\n      return $el;\n    },\n    addElRole: function addElRole($el, role) {\n      $el.attr('role', role);\n      return $el;\n    },\n    addElLabel: function addElLabel($el, label) {\n      $el.attr('aria-label', label);\n      return $el;\n    },\n    disableEl: function disableEl($el) {\n      $el.attr('aria-disabled', true);\n      return $el;\n    },\n    enableEl: function enableEl($el) {\n      $el.attr('aria-disabled', false);\n      return $el;\n    },\n    onEnterKey: function onEnterKey(e) {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      if (e.keyCode !== 13) { return; }\n      var $targetEl = $(e.target);\n      if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n        if (!(swiper.isEnd && !swiper.params.loop)) {\n          swiper.slideNext();\n        }\n        if (swiper.isEnd) {\n          swiper.a11y.notify(params.lastSlideMessage);\n        } else {\n          swiper.a11y.notify(params.nextSlideMessage);\n        }\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n        if (!(swiper.isBeginning && !swiper.params.loop)) {\n          swiper.slidePrev();\n        }\n        if (swiper.isBeginning) {\n          swiper.a11y.notify(params.firstSlideMessage);\n        } else {\n          swiper.a11y.notify(params.prevSlideMessage);\n        }\n      }\n      if (swiper.pagination && $targetEl.is((\".\" + (swiper.params.pagination.bulletClass)))) {\n        $targetEl[0].click();\n      }\n    },\n    notify: function notify(message) {\n      var swiper = this;\n      var notification = swiper.a11y.liveRegion;\n      if (notification.length === 0) { return; }\n      notification.html('');\n      notification.html(message);\n    },\n    updateNavigation: function updateNavigation() {\n      var swiper = this;\n\n      if (swiper.params.loop) { return; }\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          swiper.a11y.disableEl($prevEl);\n        } else {\n          swiper.a11y.enableEl($prevEl);\n        }\n      }\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          swiper.a11y.disableEl($nextEl);\n        } else {\n          swiper.a11y.enableEl($nextEl);\n        }\n      }\n    },\n    updatePagination: function updatePagination() {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.bullets.each(function (bulletIndex, bulletEl) {\n          var $bulletEl = $(bulletEl);\n          swiper.a11y.makeElFocusable($bulletEl);\n          swiper.a11y.addElRole($bulletEl, 'button');\n          swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n        });\n      }\n    },\n    init: function init() {\n      var swiper = this;\n\n      swiper.$el.append(swiper.a11y.liveRegion);\n\n      // Navigation\n      var params = swiper.params.a11y;\n      var $nextEl;\n      var $prevEl;\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n      if ($nextEl) {\n        swiper.a11y.makeElFocusable($nextEl);\n        swiper.a11y.addElRole($nextEl, 'button');\n        swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n        $nextEl.on('keydown', swiper.a11y.onEnterKey);\n      }\n      if ($prevEl) {\n        swiper.a11y.makeElFocusable($prevEl);\n        swiper.a11y.addElRole($prevEl, 'button');\n        swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n        $prevEl.on('keydown', swiper.a11y.onEnterKey);\n      }\n\n      // Pagination\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.on('keydown', (\".\" + (swiper.params.pagination.bulletClass)), swiper.a11y.onEnterKey);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) { swiper.a11y.liveRegion.remove(); }\n\n      var $nextEl;\n      var $prevEl;\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n      if ($nextEl) {\n        $nextEl.off('keydown', swiper.a11y.onEnterKey);\n      }\n      if ($prevEl) {\n        $prevEl.off('keydown', swiper.a11y.onEnterKey);\n      }\n\n      // Pagination\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.off('keydown', (\".\" + (swiper.params.pagination.bulletClass)), swiper.a11y.onEnterKey);\n      }\n    },\n  };\n  var A11y = {\n    name: 'a11y',\n    params: {\n      a11y: {\n        enabled: true,\n        notificationClass: 'swiper-notification',\n        prevSlideMessage: 'Previous slide',\n        nextSlideMessage: 'Next slide',\n        firstSlideMessage: 'This is the first slide',\n        lastSlideMessage: 'This is the last slide',\n        paginationBulletMessage: 'Go to slide {{index}}',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        a11y: {\n          liveRegion: $((\"<span class=\\\"\" + (swiper.params.a11y.notificationClass) + \"\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\"></span>\")),\n        },\n      });\n      Object.keys(a11y).forEach(function (methodName) {\n        swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.init();\n        swiper.a11y.updateNavigation();\n      },\n      toEdge: function toEdge() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updateNavigation();\n      },\n      fromEdge: function fromEdge() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updateNavigation();\n      },\n      paginationUpdate: function paginationUpdate() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updatePagination();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.destroy();\n      },\n    },\n  };\n\n  var History = {\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.history) { return; }\n      if (!win.history || !win.history.pushState) {\n        swiper.params.history.enabled = false;\n        swiper.params.hashNavigation.enabled = true;\n        return;\n      }\n      var history = swiper.history;\n      history.initialized = true;\n      history.paths = History.getPathValues();\n      if (!history.paths.key && !history.paths.value) { return; }\n      history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n      if (!swiper.params.history.replaceState) {\n        win.addEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (!swiper.params.history.replaceState) {\n        win.removeEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    setHistoryPopState: function setHistoryPopState() {\n      var swiper = this;\n      swiper.history.paths = History.getPathValues();\n      swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n    },\n    getPathValues: function getPathValues() {\n      var pathArray = win.location.pathname.slice(1).split('/').filter(function (part) { return part !== ''; });\n      var total = pathArray.length;\n      var key = pathArray[total - 2];\n      var value = pathArray[total - 1];\n      return { key: key, value: value };\n    },\n    setHistory: function setHistory(key, index) {\n      var swiper = this;\n      if (!swiper.history.initialized || !swiper.params.history.enabled) { return; }\n      var slide = swiper.slides.eq(index);\n      var value = History.slugify(slide.attr('data-history'));\n      if (!win.location.pathname.includes(key)) {\n        value = key + \"/\" + value;\n      }\n      var currentState = win.history.state;\n      if (currentState && currentState.value === value) {\n        return;\n      }\n      if (swiper.params.history.replaceState) {\n        win.history.replaceState({ value: value }, null, value);\n      } else {\n        win.history.pushState({ value: value }, null, value);\n      }\n    },\n    slugify: function slugify(text) {\n      return text.toString()\n        .replace(/\\s+/g, '-')\n        .replace(/[^\\w-]+/g, '')\n        .replace(/--+/g, '-')\n        .replace(/^-+/, '')\n        .replace(/-+$/, '');\n    },\n    scrollToSlide: function scrollToSlide(speed, value, runCallbacks) {\n      var swiper = this;\n      if (value) {\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHistory = History.slugify(slide.attr('data-history'));\n          if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, runCallbacks);\n          }\n        }\n      } else {\n        swiper.slideTo(0, speed, runCallbacks);\n      }\n    },\n  };\n\n  var History$1 = {\n    name: 'history',\n    params: {\n      history: {\n        enabled: false,\n        replaceState: false,\n        key: 'slides',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        history: {\n          init: History.init.bind(swiper),\n          setHistory: History.setHistory.bind(swiper),\n          setHistoryPopState: History.setHistoryPopState.bind(swiper),\n          scrollToSlide: History.scrollToSlide.bind(swiper),\n          destroy: History.destroy.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.history.enabled) {\n          swiper.history.init();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.params.history.enabled) {\n          swiper.history.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.history.initialized) {\n          swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n        }\n      },\n      slideChange: function slideChange() {\n        var swiper = this;\n        if (swiper.history.initialized && swiper.params.cssMode) {\n          swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n        }\n      },\n    },\n  };\n\n  var HashNavigation = {\n    onHashCange: function onHashCange() {\n      var swiper = this;\n      var newHash = doc.location.hash.replace('#', '');\n      var activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n      if (newHash !== activeSlideHash) {\n        var newIndex = swiper.$wrapperEl.children((\".\" + (swiper.params.slideClass) + \"[data-hash=\\\"\" + newHash + \"\\\"]\")).index();\n        if (typeof newIndex === 'undefined') { return; }\n        swiper.slideTo(newIndex);\n      }\n    },\n    setHash: function setHash() {\n      var swiper = this;\n      if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) { return; }\n      if (swiper.params.hashNavigation.replaceState && win.history && win.history.replaceState) {\n        win.history.replaceState(null, null, ((\"#\" + (swiper.slides.eq(swiper.activeIndex).attr('data-hash'))) || ''));\n      } else {\n        var slide = swiper.slides.eq(swiper.activeIndex);\n        var hash = slide.attr('data-hash') || slide.attr('data-history');\n        doc.location.hash = hash || '';\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) { return; }\n      swiper.hashNavigation.initialized = true;\n      var hash = doc.location.hash.replace('#', '');\n      if (hash) {\n        var speed = 0;\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHash = slide.attr('data-hash') || slide.attr('data-history');\n          if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n          }\n        }\n      }\n      if (swiper.params.hashNavigation.watchState) {\n        $(win).on('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (swiper.params.hashNavigation.watchState) {\n        $(win).off('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    },\n  };\n  var HashNavigation$1 = {\n    name: 'hash-navigation',\n    params: {\n      hashNavigation: {\n        enabled: false,\n        replaceState: false,\n        watchState: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        hashNavigation: {\n          initialized: false,\n          init: HashNavigation.init.bind(swiper),\n          destroy: HashNavigation.destroy.bind(swiper),\n          setHash: HashNavigation.setHash.bind(swiper),\n          onHashCange: HashNavigation.onHashCange.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.init();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.hashNavigation.initialized) {\n          swiper.hashNavigation.setHash();\n        }\n      },\n      slideChange: function slideChange() {\n        var swiper = this;\n        if (swiper.hashNavigation.initialized && swiper.params.cssMode) {\n          swiper.hashNavigation.setHash();\n        }\n      },\n    },\n  };\n\n  /* eslint no-underscore-dangle: \"off\" */\n\n  var Autoplay = {\n    run: function run() {\n      var swiper = this;\n      var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n      var delay = swiper.params.autoplay.delay;\n      if ($activeSlideEl.attr('data-swiper-autoplay')) {\n        delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n      }\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = Utils.nextTick(function () {\n        if (swiper.params.autoplay.reverseDirection) {\n          if (swiper.params.loop) {\n            swiper.loopFix();\n            swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.isBeginning) {\n            swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.params.autoplay.stopOnLastSlide) {\n            swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else {\n            swiper.autoplay.stop();\n          }\n        } else if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isEnd) {\n          swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n        if (swiper.params.cssMode && swiper.autoplay.running) { swiper.autoplay.run(); }\n      }, delay);\n    },\n    start: function start() {\n      var swiper = this;\n      if (typeof swiper.autoplay.timeout !== 'undefined') { return false; }\n      if (swiper.autoplay.running) { return false; }\n      swiper.autoplay.running = true;\n      swiper.emit('autoplayStart');\n      swiper.autoplay.run();\n      return true;\n    },\n    stop: function stop() {\n      var swiper = this;\n      if (!swiper.autoplay.running) { return false; }\n      if (typeof swiper.autoplay.timeout === 'undefined') { return false; }\n\n      if (swiper.autoplay.timeout) {\n        clearTimeout(swiper.autoplay.timeout);\n        swiper.autoplay.timeout = undefined;\n      }\n      swiper.autoplay.running = false;\n      swiper.emit('autoplayStop');\n      return true;\n    },\n    pause: function pause(speed) {\n      var swiper = this;\n      if (!swiper.autoplay.running) { return; }\n      if (swiper.autoplay.paused) { return; }\n      if (swiper.autoplay.timeout) { clearTimeout(swiper.autoplay.timeout); }\n      swiper.autoplay.paused = true;\n      if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n        swiper.autoplay.paused = false;\n        swiper.autoplay.run();\n      } else {\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n      }\n    },\n  };\n\n  var Autoplay$1 = {\n    name: 'autoplay',\n    params: {\n      autoplay: {\n        enabled: false,\n        delay: 3000,\n        waitForTransition: true,\n        disableOnInteraction: true,\n        stopOnLastSlide: false,\n        reverseDirection: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        autoplay: {\n          running: false,\n          paused: false,\n          run: Autoplay.run.bind(swiper),\n          start: Autoplay.start.bind(swiper),\n          stop: Autoplay.stop.bind(swiper),\n          pause: Autoplay.pause.bind(swiper),\n          onVisibilityChange: function onVisibilityChange() {\n            if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\n              swiper.autoplay.pause();\n            }\n            if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\n              swiper.autoplay.run();\n            }\n          },\n          onTransitionEnd: function onTransitionEnd(e) {\n            if (!swiper || swiper.destroyed || !swiper.$wrapperEl) { return; }\n            if (e.target !== this) { return; }\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n            swiper.autoplay.paused = false;\n            if (!swiper.autoplay.running) {\n              swiper.autoplay.stop();\n            } else {\n              swiper.autoplay.run();\n            }\n          },\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.autoplay.enabled) {\n          swiper.autoplay.start();\n          document.addEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n        }\n      },\n      beforeTransitionStart: function beforeTransitionStart(speed, internal) {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          if (internal || !swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.pause(speed);\n          } else {\n            swiper.autoplay.stop();\n          }\n        }\n      },\n      sliderFirstMove: function sliderFirstMove() {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          if (swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.pause();\n          }\n        }\n      },\n      touchEnd: function touchEnd() {\n        var swiper = this;\n        if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.run();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          swiper.autoplay.stop();\n        }\n        document.removeEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n      },\n    },\n  };\n\n  var Fade = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = swiper.slides.eq(i);\n        var offset = $slideEl[0].swiperSlideOffset;\n        var tx = -offset;\n        if (!swiper.params.virtualTranslate) { tx -= swiper.translate; }\n        var ty = 0;\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n        }\n        var slideOpacity = swiper.params.fadeEffect.crossFade\n          ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n          : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n        $slideEl\n          .css({\n            opacity: slideOpacity,\n          })\n          .transform((\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px)\"));\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides;\n      var $wrapperEl = swiper.$wrapperEl;\n      slides.transition(duration);\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        slides.transitionEnd(function () {\n          if (eventTriggered) { return; }\n          if (!swiper || swiper.destroyed) { return; }\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    },\n  };\n\n  var EffectFade = {\n    name: 'effect-fade',\n    params: {\n      fadeEffect: {\n        crossFade: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        fadeEffect: {\n          setTranslate: Fade.setTranslate.bind(swiper),\n          setTransition: Fade.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"fade\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.fadeEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.fadeEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Cube = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slides = swiper.slides;\n      var swiperWidth = swiper.width;\n      var swiperHeight = swiper.height;\n      var rtl = swiper.rtlTranslate;\n      var swiperSize = swiper.size;\n      var params = swiper.params.cubeEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      var wrapperRotate = 0;\n      var $cubeShadowEl;\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $wrapperEl.append($cubeShadowEl);\n          }\n          $cubeShadowEl.css({ height: (swiperWidth + \"px\") });\n        } else {\n          $cubeShadowEl = $el.find('.swiper-cube-shadow');\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $el.append($cubeShadowEl);\n          }\n        }\n      }\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideIndex = i;\n        if (isVirtual) {\n          slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n        }\n        var slideAngle = slideIndex * 90;\n        var round = Math.floor(slideAngle / 360);\n        if (rtl) {\n          slideAngle = -slideAngle;\n          round = Math.floor(-slideAngle / 360);\n        }\n        var progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        var tx = 0;\n        var ty = 0;\n        var tz = 0;\n        if (slideIndex % 4 === 0) {\n          tx = -round * 4 * swiperSize;\n          tz = 0;\n        } else if ((slideIndex - 1) % 4 === 0) {\n          tx = 0;\n          tz = -round * 4 * swiperSize;\n        } else if ((slideIndex - 2) % 4 === 0) {\n          tx = swiperSize + (round * 4 * swiperSize);\n          tz = swiperSize;\n        } else if ((slideIndex - 3) % 4 === 0) {\n          tx = -swiperSize;\n          tz = (3 * swiperSize) + (swiperSize * 4 * round);\n        }\n        if (rtl) {\n          tx = -tx;\n        }\n\n        if (!isHorizontal) {\n          ty = tx;\n          tx = 0;\n        }\n\n        var transform = \"rotateX(\" + (isHorizontal ? 0 : -slideAngle) + \"deg) rotateY(\" + (isHorizontal ? slideAngle : 0) + \"deg) translate3d(\" + tx + \"px, \" + ty + \"px, \" + tz + \"px)\";\n        if (progress <= 1 && progress > -1) {\n          wrapperRotate = (slideIndex * 90) + (progress * 90);\n          if (rtl) { wrapperRotate = (-slideIndex * 90) - (progress * 90); }\n        }\n        $slideEl.transform(transform);\n        if (params.slideShadows) {\n          // Set shadows\n          var shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if (shadowBefore.length === 0) {\n            shadowBefore = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append(shadowBefore);\n          }\n          if (shadowAfter.length === 0) {\n            shadowAfter = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append(shadowAfter);\n          }\n          if (shadowBefore.length) { shadowBefore[0].style.opacity = Math.max(-progress, 0); }\n          if (shadowAfter.length) { shadowAfter[0].style.opacity = Math.max(progress, 0); }\n        }\n      }\n      $wrapperEl.css({\n        '-webkit-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        '-moz-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        '-ms-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        'transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n      });\n\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl.transform((\"translate3d(0px, \" + ((swiperWidth / 2) + params.shadowOffset) + \"px, \" + (-swiperWidth / 2) + \"px) rotateX(90deg) rotateZ(0deg) scale(\" + (params.shadowScale) + \")\"));\n        } else {\n          var shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n          var multiplier = 1.5 - (\n            (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n            + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n          );\n          var scale1 = params.shadowScale;\n          var scale2 = params.shadowScale / multiplier;\n          var offset = params.shadowOffset;\n          $cubeShadowEl.transform((\"scale3d(\" + scale1 + \", 1, \" + scale2 + \") translate3d(0px, \" + ((swiperHeight / 2) + offset) + \"px, \" + (-swiperHeight / 2 / scale2) + \"px) rotateX(-90deg)\"));\n        }\n      }\n      var zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n      $wrapperEl\n        .transform((\"translate3d(0px,0,\" + zFactor + \"px) rotateX(\" + (swiper.isHorizontal() ? 0 : wrapperRotate) + \"deg) rotateY(\" + (swiper.isHorizontal() ? -wrapperRotate : 0) + \"deg)\"));\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var $el = swiper.$el;\n      var slides = swiper.slides;\n      slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n      if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n        $el.find('.swiper-cube-shadow').transition(duration);\n      }\n    },\n  };\n\n  var EffectCube = {\n    name: 'effect-cube',\n    params: {\n      cubeEffect: {\n        slideShadows: true,\n        shadow: true,\n        shadowOffset: 20,\n        shadowScale: 0.94,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        cubeEffect: {\n          setTranslate: Cube.setTranslate.bind(swiper),\n          setTransition: Cube.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"cube\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          resistanceRatio: 0,\n          spaceBetween: 0,\n          centeredSlides: false,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.cubeEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.cubeEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Flip = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n      var rtl = swiper.rtlTranslate;\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var progress = $slideEl[0].progress;\n        if (swiper.params.flipEffect.limitRotation) {\n          progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        }\n        var offset = $slideEl[0].swiperSlideOffset;\n        var rotate = -180 * progress;\n        var rotateY = rotate;\n        var rotateX = 0;\n        var tx = -offset;\n        var ty = 0;\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n          rotateX = -rotateY;\n          rotateY = 0;\n        } else if (rtl) {\n          rotateY = -rotateY;\n        }\n\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n        if (swiper.params.flipEffect.slideShadows) {\n          // Set shadows\n          var shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if (shadowBefore.length === 0) {\n            shadowBefore = $((\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append(shadowBefore);\n          }\n          if (shadowAfter.length === 0) {\n            shadowAfter = $((\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append(shadowAfter);\n          }\n          if (shadowBefore.length) { shadowBefore[0].style.opacity = Math.max(-progress, 0); }\n          if (shadowAfter.length) { shadowAfter[0].style.opacity = Math.max(progress, 0); }\n        }\n        $slideEl\n          .transform((\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px) rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\"));\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides;\n      var activeIndex = swiper.activeIndex;\n      var $wrapperEl = swiper.$wrapperEl;\n      slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        // eslint-disable-next-line\n        slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n          if (eventTriggered) { return; }\n          if (!swiper || swiper.destroyed) { return; }\n          // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    },\n  };\n\n  var EffectFlip = {\n    name: 'effect-flip',\n    params: {\n      flipEffect: {\n        slideShadows: true,\n        limitRotation: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        flipEffect: {\n          setTranslate: Flip.setTranslate.bind(swiper),\n          setTransition: Flip.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"flip\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.flipEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.flipEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Coverflow = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var swiperWidth = swiper.width;\n      var swiperHeight = swiper.height;\n      var slides = swiper.slides;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slidesSizesGrid = swiper.slidesSizesGrid;\n      var params = swiper.params.coverflowEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var transform = swiper.translate;\n      var center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n      var rotate = isHorizontal ? params.rotate : -params.rotate;\n      var translate = params.depth;\n      // Each slide offset from center\n      for (var i = 0, length = slides.length; i < length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideSize = slidesSizesGrid[i];\n        var slideOffset = $slideEl[0].swiperSlideOffset;\n        var offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n        var rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n        var rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n        // var rotateZ = 0\n        var translateZ = -translate * Math.abs(offsetMultiplier);\n\n        var translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n        var translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n        // Fix for ultra small values\n        if (Math.abs(translateX) < 0.001) { translateX = 0; }\n        if (Math.abs(translateY) < 0.001) { translateY = 0; }\n        if (Math.abs(translateZ) < 0.001) { translateZ = 0; }\n        if (Math.abs(rotateY) < 0.001) { rotateY = 0; }\n        if (Math.abs(rotateX) < 0.001) { rotateX = 0; }\n\n        var slideTransform = \"translate3d(\" + translateX + \"px,\" + translateY + \"px,\" + translateZ + \"px)  rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\";\n\n        $slideEl.transform(slideTransform);\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n        if (params.slideShadows) {\n          // Set shadows\n          var $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if ($shadowBeforeEl.length === 0) {\n            $shadowBeforeEl = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append($shadowBeforeEl);\n          }\n          if ($shadowAfterEl.length === 0) {\n            $shadowAfterEl = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append($shadowAfterEl);\n          }\n          if ($shadowBeforeEl.length) { $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0; }\n          if ($shadowAfterEl.length) { $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0; }\n        }\n      }\n\n      // Set correct perspective for IE10\n      if (Support.pointerEvents || Support.prefixedPointerEvents) {\n        var ws = $wrapperEl[0].style;\n        ws.perspectiveOrigin = center + \"px 50%\";\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      swiper.slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n    },\n  };\n\n  var EffectCoverflow = {\n    name: 'effect-coverflow',\n    params: {\n      coverflowEffect: {\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        coverflowEffect: {\n          setTranslate: Coverflow.setTranslate.bind(swiper),\n          setTransition: Coverflow.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"coverflow\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n        swiper.coverflowEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n        swiper.coverflowEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Thumbs = {\n    init: function init() {\n      var swiper = this;\n      var ref = swiper.params;\n      var thumbsParams = ref.thumbs;\n      var SwiperClass = swiper.constructor;\n      if (thumbsParams.swiper instanceof SwiperClass) {\n        swiper.thumbs.swiper = thumbsParams.swiper;\n        Utils.extend(swiper.thumbs.swiper.originalParams, {\n          watchSlidesProgress: true,\n          slideToClickedSlide: false,\n        });\n        Utils.extend(swiper.thumbs.swiper.params, {\n          watchSlidesProgress: true,\n          slideToClickedSlide: false,\n        });\n      } else if (Utils.isObject(thumbsParams.swiper)) {\n        swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n          watchSlidesVisibility: true,\n          watchSlidesProgress: true,\n          slideToClickedSlide: false,\n        }));\n        swiper.thumbs.swiperCreated = true;\n      }\n      swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n      swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n    },\n    onThumbClick: function onThumbClick() {\n      var swiper = this;\n      var thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) { return; }\n      var clickedIndex = thumbsSwiper.clickedIndex;\n      var clickedSlide = thumbsSwiper.clickedSlide;\n      if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) { return; }\n      if (typeof clickedIndex === 'undefined' || clickedIndex === null) { return; }\n      var slideToIndex;\n      if (thumbsSwiper.params.loop) {\n        slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n      } else {\n        slideToIndex = clickedIndex;\n      }\n      if (swiper.params.loop) {\n        var currentIndex = swiper.activeIndex;\n        if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n          swiper.loopFix();\n          // eslint-disable-next-line\n          swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n          currentIndex = swiper.activeIndex;\n        }\n        var prevIndex = swiper.slides.eq(currentIndex).prevAll((\"[data-swiper-slide-index=\\\"\" + slideToIndex + \"\\\"]\")).eq(0).index();\n        var nextIndex = swiper.slides.eq(currentIndex).nextAll((\"[data-swiper-slide-index=\\\"\" + slideToIndex + \"\\\"]\")).eq(0).index();\n        if (typeof prevIndex === 'undefined') { slideToIndex = nextIndex; }\n        else if (typeof nextIndex === 'undefined') { slideToIndex = prevIndex; }\n        else if (nextIndex - currentIndex < currentIndex - prevIndex) { slideToIndex = nextIndex; }\n        else { slideToIndex = prevIndex; }\n      }\n      swiper.slideTo(slideToIndex);\n    },\n    update: function update(initial) {\n      var swiper = this;\n      var thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) { return; }\n\n      var slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n        ? thumbsSwiper.slidesPerViewDynamic()\n        : thumbsSwiper.params.slidesPerView;\n\n      if (swiper.realIndex !== thumbsSwiper.realIndex) {\n        var currentThumbsIndex = thumbsSwiper.activeIndex;\n        var newThumbsIndex;\n        if (thumbsSwiper.params.loop) {\n          if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n            thumbsSwiper.loopFix();\n            // eslint-disable-next-line\n            thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n            currentThumbsIndex = thumbsSwiper.activeIndex;\n          }\n          // Find actual thumbs index to slide to\n          var prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll((\"[data-swiper-slide-index=\\\"\" + (swiper.realIndex) + \"\\\"]\")).eq(0).index();\n          var nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll((\"[data-swiper-slide-index=\\\"\" + (swiper.realIndex) + \"\\\"]\")).eq(0).index();\n          if (typeof prevThumbsIndex === 'undefined') { newThumbsIndex = nextThumbsIndex; }\n          else if (typeof nextThumbsIndex === 'undefined') { newThumbsIndex = prevThumbsIndex; }\n          else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) { newThumbsIndex = currentThumbsIndex; }\n          else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) { newThumbsIndex = nextThumbsIndex; }\n          else { newThumbsIndex = prevThumbsIndex; }\n        } else {\n          newThumbsIndex = swiper.realIndex;\n        }\n        if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n          if (thumbsSwiper.params.centeredSlides) {\n            if (newThumbsIndex > currentThumbsIndex) {\n              newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n            } else {\n              newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n            }\n          } else if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n          }\n          thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n        }\n      }\n\n      // Activate thumbs\n      var thumbsToActivate = 1;\n      var thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n      if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n        thumbsToActivate = swiper.params.slidesPerView;\n      }\n\n      thumbsSwiper.slides.removeClass(thumbActiveClass);\n      if (thumbsSwiper.params.loop || (thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled)) {\n        for (var i = 0; i < thumbsToActivate; i += 1) {\n          thumbsSwiper.$wrapperEl.children((\"[data-swiper-slide-index=\\\"\" + (swiper.realIndex + i) + \"\\\"]\")).addClass(thumbActiveClass);\n        }\n      } else {\n        for (var i$1 = 0; i$1 < thumbsToActivate; i$1 += 1) {\n          thumbsSwiper.slides.eq(swiper.realIndex + i$1).addClass(thumbActiveClass);\n        }\n      }\n    },\n  };\n  var Thumbs$1 = {\n    name: 'thumbs',\n    params: {\n      thumbs: {\n        swiper: null,\n        slideThumbActiveClass: 'swiper-slide-thumb-active',\n        thumbsContainerClass: 'swiper-container-thumbs',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        thumbs: {\n          swiper: null,\n          init: Thumbs.init.bind(swiper),\n          update: Thumbs.update.bind(swiper),\n          onThumbClick: Thumbs.onThumbClick.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        var ref = swiper.params;\n        var thumbs = ref.thumbs;\n        if (!thumbs || !thumbs.swiper) { return; }\n        swiper.thumbs.init();\n        swiper.thumbs.update(true);\n      },\n      slideChange: function slideChange() {\n        var swiper = this;\n        if (!swiper.thumbs.swiper) { return; }\n        swiper.thumbs.update();\n      },\n      update: function update() {\n        var swiper = this;\n        if (!swiper.thumbs.swiper) { return; }\n        swiper.thumbs.update();\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (!swiper.thumbs.swiper) { return; }\n        swiper.thumbs.update();\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        if (!swiper.thumbs.swiper) { return; }\n        swiper.thumbs.update();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper) { return; }\n        thumbsSwiper.setTransition(duration);\n      },\n      beforeDestroy: function beforeDestroy() {\n        var swiper = this;\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper) { return; }\n        if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n          thumbsSwiper.destroy();\n        }\n      },\n    },\n  };\n\n  // Swiper Class\n\n  var components = [\n    Device$1,\n    Support$1,\n    Browser$1,\n    Resize,\n    Observer$1,\n    Virtual$1,\n    Keyboard$1,\n    Mousewheel$1,\n    Navigation$1,\n    Pagination$1,\n    Scrollbar$1,\n    Parallax$1,\n    Zoom$1,\n    Lazy$1,\n    Controller$1,\n    A11y,\n    History$1,\n    HashNavigation$1,\n    Autoplay$1,\n    EffectFade,\n    EffectCube,\n    EffectFlip,\n    EffectCoverflow,\n    Thumbs$1\n  ];\n\n  if (typeof Swiper.use === 'undefined') {\n    Swiper.use = Swiper.Class.use;\n    Swiper.installModule = Swiper.Class.installModule;\n  }\n\n  Swiper.use(components);\n\n  return Swiper;\n\n}));\n"]}